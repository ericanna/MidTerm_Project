<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='df3' inline='true' name='federated.0n3ulb40p3648b1377er81ikzali' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='textscan.1l9v41b1xarror142rrob0lud6yx'>
            <connection class='textscan' directory='/Users/ericaNNa/Documents/GitHub/MidTerm_Project' filename='df3.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1l9v41b1xarror142rrob0lud6yx' name='df3.csv' table='[df3#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1l9v41b1xarror142rrob0lud6yx' name='df3.csv' table='[df3#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[df3.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Natural gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='real' name='[Population]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab countries' />
          <alias key='&quot;Canada, USA and territories&quot;' value='Canada + USA' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df3.csv' datatype='table' name='[__tableau_internal_object_id__].[df3.csv_8FA3405494F0403A91BF165EDD05C9A5]' role='measure' type='quantitative' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df3.csv' id='df3.csv_8FA3405494F0403A91BF165EDD05C9A5'>
            <properties context=''>
              <relation connection='textscan.1l9v41b1xarror142rrob0lud6yx' name='df3.csv' table='[df3#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (2)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab C.' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
          <alias key='&quot;Western Europe&quot;' value='EU' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (3)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 2)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 2)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 2)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab C.' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
          <alias key='&quot;Western Europe&quot;' value='EU' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 2)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (4)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 3)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 3)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 3)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab countries' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
          <alias key='&quot;Western Europe&quot;' value='EU' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 3)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (5)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 4)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 4)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 4)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab countries' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
          <alias key='&quot;Western Europe&quot;' value='EU' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 4)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (6)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 5)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 5)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 5)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column caption='GDP/per capita' datatype='real' name='[Calculation_965459231175991296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='GDP/[Population]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab Countries' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 5)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (7)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 6)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 6)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 6)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column caption='GDP/per capita' datatype='real' name='[Calculation_965459231175991296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='GDP/[Population]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab Countries' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
          <alias key='&quot;Western Europe&quot;' value='EU' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 6)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (df3) (8)' inline='true' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df3' name='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 7)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ericaNNa/Documents/GitHub/MidTerm_Project/df3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 7)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 7)' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='Energy_type' ordinal='2' />
            <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
            <column datatype='real' name='Energy_consumption' ordinal='4' />
            <column datatype='real' name='Energy_production' ordinal='5' />
            <column datatype='real' name='GDP' ordinal='6' />
            <column datatype='real' name='Population' ordinal='7' />
            <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
            <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
            <column datatype='real' name='CO2_emission' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Energy_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_consumption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_consumption]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_consumption</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_production</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_production]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_production</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy_intensity_by_GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy_intensity_by_GDP]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Energy_intensity_by_GDP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2_emission</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2_emission]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CO2_emission</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_418B5E1974044438ADF937532E3FD955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
      <column caption='GDP/per capita' datatype='real' name='[Calculation_965459231175991296]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='GDP/[Population]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <aliases>
          <alias key='&quot;United Kingdom&quot;' value='UK' />
          <alias key='&quot;United States&quot;' value='USA' />
        </aliases>
      </column>
      <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
      <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
      <column caption='Energy intensity per capita' datatype='real' name='[Energy_intensity_per_capita]' role='measure' type='quantitative' />
      <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
      <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;coal&quot;' value='Coal' />
          <alias key='&quot;natural_gas&quot;' value='Gas' />
          <alias key='&quot;nuclear&quot;' value='Nuclear' />
          <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
          <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
        </aliases>
      </column>
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Arab contries&quot;' value='Arab Countries' />
          <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
          <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
          <alias key='&quot;Western Europe&quot;' value='EU' />
        </aliases>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_418B5E1974044438ADF937532E3FD955]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[pcto:sum:Energy_production:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Energy_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;all_energy_types&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;petroleum_n_other_liquids&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;nuclear&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;natural_gas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;renewables_n_other&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;coal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[sum:Energy_consumption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[none:Energy_type:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[none:Region:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[pcto:sum:Energy_production:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[sum:Energy_production:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arab contries&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;USA and territories&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CÃ´te dâIvoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo-Brazzaville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent/Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo-Kinshasa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;EspaÃ±a&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_418B5E1974044438ADF937532E3FD955'>
            <properties context=''>
              <relation connection='excel-direct.0dfmg0a1dyyeqk15cx9jc11svdhr (copy 7)' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='string' name='Energy_type' ordinal='2' />
                  <column datatype='integer' date-parse-format='yyyy' name='Year' ordinal='3' />
                  <column datatype='real' name='Energy_consumption' ordinal='4' />
                  <column datatype='real' name='Energy_production' ordinal='5' />
                  <column datatype='real' name='GDP' ordinal='6' />
                  <column datatype='real' name='Population' ordinal='7' />
                  <column datatype='real' name='Energy_intensity_per_capita' ordinal='8' />
                  <column datatype='real' name='Energy_intensity_by_GDP' ordinal='9' />
                  <column datatype='real' name='CO2_emission' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='CGP_CO2_regions'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>GDP and CO2 emissions by region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df3' name='federated.0n3ulb40p3648b1377er81ikzali' />
          </datasources>
          <datasource-dependencies datasource='federated.0n3ulb40p3648b1377er81ikzali'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab countries' />
                <alias key='&quot;Canada, USA and territories&quot;' value='Canada + USA' />
              </aliases>
            </column>
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
              <bucket>&quot;Western Europe&quot;</bucket>
              <bucket>&quot;Eastern Europe&quot;</bucket>
              <bucket>&quot;Latin America&quot;</bucket>
              <bucket>&quot;Arab contries&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' />
              <lod column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.4640884399414062' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n3ulb40p3648b1377er81ikzali].[sum:GDP:qk]</rows>
        <cols>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</cols>
      </table>
      <simple-id uuid='{98D40816-FE19-4696-9780-76056D50B4D7}' />
    </worksheet>
    <worksheet name='CO2 emissions/Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:CO2_emission:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' />
              <lod column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:CO2_emission:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{BDC604FD-1601-4A65-A7D8-4D8AFED423B2}' />
    </worksheet>
    <worksheet name='CO2 emissions/Country (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'><![CDATA[CO2 emissions per country - <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (7)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United Kingdom&quot;' value='UK' />
                <alias key='&quot;United States&quot;' value='USA' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' direction='DESC' using='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[sum:CO2_emission:qk]' />
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Year:ok]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
            <format attr='color' data-class='total' value='#000000' />
            <format attr='font-weight' data-class='total' value='normal' />
            <format attr='font-size' data-class='total' value='12' />
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='font-size' data-class='subtotal' value='12' />
            <format attr='color' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='#000000' />
            <format attr='font-size' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='10' />
            <format attr='font-family' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='Tableau Medium' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='#000000' />
            <format attr='font-family' data-class='total' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='Tableau Medium' />
            <format attr='color' data-class='subtotal' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='#000000' />
            <format attr='font-family' data-class='subtotal' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='Tableau Medium' />
            <format attr='font-size' data-class='subtotal' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='10' />
            <format attr='font-size' data-class='total' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='#000000' />
            <format attr='font-size' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='11' />
            <format attr='font-family' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' value='Tableau Medium' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' />
              <lod column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[sum:CO2_emission:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{43EDE960-9AE8-40CC-B3D4-4BF3BC23FBEA}' />
    </worksheet>
    <worksheet name='CO2 emissions/Regions'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:CO2_emission:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' />
              <lod column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:CO2_emission:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{771C483D-794C-4748-A151-FE5E4FBAF9D1}' />
    </worksheet>
    <worksheet name='CO2 emissions/Regions (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'><![CDATA[CO2 emissions by region - <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (5)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab countries' />
                <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
                <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
                <alias key='&quot;Western Europe&quot;' value='EU' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[sum:CO2_emission:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Year:ok]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
            <format attr='font-family' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' value='Tableau Medium' />
            <format attr='font-size' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' value='11' />
            <format attr='color' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' value='11' />
            <format attr='color' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' value='#000000' />
            <format attr='font-family' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' value='Tableau Medium' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[sum:CO2_emission:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{E0AC054B-527E-4D56-907F-EC9D0FCA19C4}' />
    </worksheet>
    <worksheet name='CO2 emissions/Regions (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'><![CDATA[CO2 emissions by region - <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (6)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab Countries' />
                <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
                <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[sum:CO2_emission:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
            <format attr='color' data-class='total' scope='cols' value='#000000' />
            <format attr='font-size' data-class='total' scope='cols' value='12' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='total' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' value='#000000' />
            <format attr='font-family' data-class='total' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' value='Tableau Medium' />
            <format attr='color' data-class='total' scope='cols' value='#000000' />
            <format attr='font-size' data-class='total' scope='cols' value='12' />
            <format attr='font-family' data-class='total' scope='cols' value='Tableau Medium' />
            <format attr='font-size' data-class='total' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' scope='cols' value='Tableau Medium' />
            <format attr='text-orientation' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[sum:CO2_emission:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{395FE013-85B6-4B5F-A879-889DA905F256}' />
    </worksheet>
    <worksheet name='CO2_energy-type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>CO2 emissions by energy type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df3' name='federated.0n3ulb40p3648b1377er81ikzali' />
          </datasources>
          <datasource-dependencies datasource='federated.0n3ulb40p3648b1377er81ikzali'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;coal&quot;' value='Coal' />
                <alias key='&quot;natural_gas&quot;' value='Natural gas' />
                <alias key='&quot;nuclear&quot;' value='Nuclear' />
                <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
                <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
              </aliases>
            </column>
            <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Energy_type:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Energy_type:nk]' member='&quot;all_energy_types&quot;' />
                <groupfilter function='member' level='[none:Energy_type:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' direction='DESC' using='[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]' />
          <slices>
            <column>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='#000000' />
            <format attr='font-family' data-class='subtotal' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='Tableau Medium' />
            <format attr='font-size' data-class='subtotal' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='0' />
            <format attr='font-size' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='10' />
            <format attr='color' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='bold' />
            <format attr='font-family' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' value='Tableau Medium' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</rows>
        <cols>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</cols>
      </table>
      <simple-id uuid='{5BC50914-CABD-4A5B-8511-D5685DCCE1E5}' />
    </worksheet>
    <worksheet name='CO2_pop_year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Regular'>CO2 emissions and population growth per year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df3' name='federated.0n3ulb40p3648b1377er81ikzali' />
          </datasources>
          <datasource-dependencies datasource='federated.0n3ulb40p3648b1377er81ikzali'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Year:qk]' field-type='quantitative' max='2020' min='1989' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk] + [federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk])</rows>
        <cols>[federated.0n3ulb40p3648b1377er81ikzali].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{9223C426-01DC-4DF5-88BE-088C479E9B44}' />
    </worksheet>
    <worksheet name='CO2_pop_years'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>CO2 emissions and populational growth over the years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df3' name='federated.0n3ulb40p3648b1377er81ikzali' />
          </datasources>
          <datasource-dependencies datasource='federated.0n3ulb40p3648b1377er81ikzali'>
            <column caption='CO2 emission' datatype='real' name='[CO2_emission]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2_emission]' derivation='Sum' name='[sum:CO2_emission:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tableau Medium' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk] + [federated.0n3ulb40p3648b1377er81ikzali].[sum:Population:qk])</rows>
        <cols>[federated.0n3ulb40p3648b1377er81ikzali].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{A36A491C-9BC1-4727-A658-A83123FF8FEF}' />
    </worksheet>
    <worksheet name='Consumption per region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>Energy consumption by region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (2)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)'>
            <column caption='Energy consumption' datatype='real' name='[Energy_consumption]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab C.' />
                <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
                <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
                <alias key='&quot;Western Europe&quot;' value='EU' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy_consumption]' derivation='Sum' name='[sum:Energy_consumption:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Year:qk]' included-values='in-range'>
            <min>1993</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Year:qk]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[sum:Energy_consumption:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[sum:Energy_consumption:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{DA2EFB20-3DFE-403F-BDF8-D1EE4B1932E1}' />
    </worksheet>
    <worksheet name='Energy production per energy type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'><![CDATA[Energy production by energy type - <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (3)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)'>
            <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
            <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;coal&quot;' value='Coal' />
                <alias key='&quot;natural_gas&quot;' value='Gas' />
                <alias key='&quot;nuclear&quot;' value='Nuclear' />
                <alias key='&quot;petroleum_n_other_liquids&quot;' value='Petroleum' />
                <alias key='&quot;renewables_n_other&quot;' value='Renewables' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Energy_type:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Energy_type:nk]' member='&quot;all_energy_types&quot;' />
                <groupfilter function='member' level='[none:Energy_type:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Year:ok]'>
            <groupfilter from='1992' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[sum:Energy_production:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Year:ok]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='150' />
            <format attr='cell-h' value='50' />
            <format attr='cell' value='50' />
            <format attr='cell-q' value='250' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' value='#000000' />
            <format attr='font-family' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' value='Tableau Medium' />
            <format attr='font-size' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' value='11' />
            <format attr='font-weight' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' value='bold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4062983989715576' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[sum:Energy_production:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' trail-effect='none' />
      </table>
      <simple-id uuid='{D0388EFD-50C5-4051-9BBE-463C412F886E}' />
    </worksheet>
    <worksheet name='GDP/Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>GDP by region - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (6)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)'>
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab Countries' />
                <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
                <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Canada, USA and territories&quot;</bucket>
              <bucket>&quot;Western Europe&quot;</bucket>
              <bucket>&quot;Eastern Europe&quot;</bucket>
              <bucket>&quot;Latin America&quot;</bucket>
              <bucket>&quot;Arab contries&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
            <format attr='color' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' value='#000000' />
            <format attr='font-size' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' value='11' />
            <format attr='font-family' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' value='Tableau Medium' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' value='#000000' />
            <format attr='font-family' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' value='Tableau Medium' />
            <format attr='font-size' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[sum:GDP:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{8AF829C4-70E8-41A6-9E07-2BD99932A1CB}' />
    </worksheet>
    <worksheet name='Hoja 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'><![CDATA[Energy intensity by country - <Page Name>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (8)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <aliases>
                <alias key='&quot;United Kingdom&quot;' value='UK' />
                <alias key='&quot;United States&quot;' value='USA' />
              </aliases>
            </column>
            <column caption='Energy intensity by GDP' datatype='real' name='[Energy_intensity_by_GDP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Energy_intensity_by_GDP]' derivation='Sum' name='[sum:Energy_intensity_by_GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[none:Year:ok]'>
            <groupfilter from='1993' function='range' level='[none:Year:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[sum:Energy_intensity_by_GDP:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>159.0</max>
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[none:Year:ok]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[none:Country:nk]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[sum:Energy_intensity_by_GDP:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='45.0' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[sum:Energy_intensity_by_GDP:qk]' palette='red_blue_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[sum:Energy_intensity_by_GDP:qk]' />
              <lod column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[sum:Energy_intensity_by_GDP:qk]' />
              <lod column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[none:Country:nk]' />
              <geometry column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[Latitude (generated)]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[none:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{351CCDC6-EC9E-4762-AE61-A45418291B6F}' />
    </worksheet>
    <worksheet name='Production per region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx'>
            <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:Energy_production:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{87FDD2D5-E0D3-495D-97E3-4A1904424BE4}' />
    </worksheet>
    <worksheet name='Production per region (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>Energy production by region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3) (4)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)'>
            <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Arab contries&quot;' value='Arab countries' />
                <alias key='&quot;Canada, USA and territories&quot;' value='USA + Canada' />
                <alias key='&quot;Eastern Europe&quot;' value='East Europe' />
                <alias key='&quot;Western Europe&quot;' value='EU' />
              </aliases>
            </column>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Year:qk]' included-values='in-range'>
            <min>1993</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='10' />
            <format attr='font-family' value='Tableau Medium' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[sum:Energy_production:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{80A14FB8-E863-4ED5-9202-0F9031B2C285}' />
    </worksheet>
    <worksheet name='Renewable per region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium'>Production of renewable energy by region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df3)' name='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx' />
          </datasources>
          <datasource-dependencies datasource='federated.0n2qrqi0xm4lmh10hysyr0wj1hwx'>
            <column caption='Energy production' datatype='real' name='[Energy_production]' role='measure' type='quantitative' />
            <column caption='Energy type' datatype='string' name='[Energy_type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Energy_type]' derivation='None' name='[none:Energy_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy_production]' derivation='Sum' name='[sum:Energy_production:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Energy_type:nk]'>
            <groupfilter function='member' level='[none:Energy_type:nk]' member='&quot;renewables_n_other&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:Region:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Energy_type:nk]</column>
            <column>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]' field-type='quantitative' max='2020' min='1989' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[sum:Energy_production:qk]</rows>
        <cols>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{39059BFC-E3DD-4076-B053-D09F610C85B2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='66000' id='3' name='CO2_energy-type' w='68300' x='6400' y='26000' />
        <zone forceUpdate='true' h='17625' id='5' type-v2='text' w='39700' x='5100' y='3375'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>CO2 is Earthâs most importantÂ greenhouse gas:Â a gas that absorbs and radiates heat. </run>
            <run>Ã&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12375' id='6' type-v2='text' w='40100' x='56700' y='14625'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Coal, petroleum and natural gas are energy sources that liberate a lot of CO2 in the atmosphere.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='86' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='85' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='17625' id='5' type-v2='text' w='39700' x='5100' y='3375'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>CO2 is Earthâs most importantÂ greenhouse gas:Â a gas that absorbs and radiates heat. </run>
                    <run>Ã&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='12375' id='6' type-v2='text' w='40100' x='56700' y='14625'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Coal, petroleum and natural gas are energy sources that liberate a lot of CO2 in the atmosphere.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='66000' id='3' is-fixed='true' name='CO2_energy-type' w='68300' x='6400' y='26000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CF23AD7B-0D6E-4747-AD86-D5018F32C313}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1 (2)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='51500' id='3' name='CO2 emissions/Regions (3)' w='97300' x='900' y='1000' />
        <zone count='1' h='13875' id='5' name='CO2 emissions/Regions (3)' name1='GDP/Region' synchronized='1' type-v2='currpage' w='16000' x='81400' y='2375' />
        <zone h='50625' id='6' name='GDP/Region' w='96300' x='500' y='51000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='49' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='51500' id='3' is-fixed='true' name='CO2 emissions/Regions (3)' w='97300' x='900' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50625' id='6' is-fixed='true' name='GDP/Region' w='96300' x='500' y='51000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='13875' id='5' name='CO2 emissions/Regions (3)' name1='GDP/Region' synchronized='1' type-v2='currpage' w='16000' x='81400' y='2375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CFB1F8EF-6185-4114-B336-71D3D23E242A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 10'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='63250' id='3' name='Hoja 10' w='90600' x='3800' y='25875' />
        <zone h='9500' id='4' name='Hoja 10' pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[sum:Energy_intensity_by_GDP:qk]' type-v2='color' w='14000' x='79100' y='17625' />
        <zone h='12750' id='5' name='Hoja 10' synchronized='1' type-v2='currpage' w='16000' x='78200' y='3125' />
        <zone forceUpdate='true' h='13000' id='6' type-v2='text' w='44300' x='2800' y='1625'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Energy intensity is a measure of the energy inefficiency of an economy. How much energy is needed to produce 1 unit of GDP.</run>
          </formatted-text>
        </zone>
        <zone h='9750' id='7' type-v2='text' w='40500' x='34700' y='14250'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Countries seem to be reaching better energy intensity levels in the last years.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='24' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='13000' id='6' type-v2='text' w='44300' x='2800' y='1625'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Energy intensity is a measure of the energy inefficiency of an economy. How much energy is needed to produce 1 unit of GDP.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9750' id='7' type-v2='text' w='40500' x='34700' y='14250'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Countries seem to be reaching better energy intensity levels in the last years.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63250' id='3' is-fixed='true' name='Hoja 10' w='90600' x='3800' y='25875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9500' id='4' name='Hoja 10' pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[sum:Energy_intensity_by_GDP:qk]' type-v2='color' w='14000' x='79100' y='17625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12750' id='5' name='Hoja 10' synchronized='1' type-v2='currpage' w='16000' x='78200' y='3125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0D5C9976-6B23-4928-9E44-1B29E405959B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 11'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone forceUpdate='true' h='20500' id='3' type-v2='text' w='56100' x='4900' y='17125'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Although there is evidence that fossil fuels (coal, oil and gas) have a big impact on CO2 emissions and therefore on climate change, the consumption and production of these fuels have increased significantly in the last 30 years.</run>
            <run>Ã&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone h='21625' id='4' type-v2='text' w='51700' x='43900' y='37750'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>This increase in energy consumption and therefore in emissions has a clear relationship with GDP growth, particularly with growth of developing countries like China or India.</run>
            <run>Ã&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='18750' id='5' type-v2='text' w='50400' x='4700' y='59875'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Therefore to reduce our CO2 emissions we need to stabilize GDP growth and subsitute fossil fuels for renewable energies.</run>
          </formatted-text>
        </zone>
        <zone h='24000' id='6' is-centered='0' is-scaled='1' param='/Users/ericaNNa/Downloads/Unknown.jpeg' type-v2='bitmap' w='30200' x='64800' y='61875' />
        <zone forceUpdate='true' h='14500' id='7' type-v2='text' w='91000' x='3200' y='2125'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Semibold' fontsize='24' underline='true'>CONCLUSION</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='20' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='14500' id='7' type-v2='text' w='91000' x='3200' y='2125'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Semibold' fontsize='24' underline='true'>CONCLUSION</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='20500' id='3' type-v2='text' w='56100' x='4900' y='17125'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Although there is evidence that fossil fuels (coal, oil and gas) have a big impact on CO2 emissions and therefore on climate change, the consumption and production of these fuels have increased significantly in the last 30 years.</run>
                    <run>Ã&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='21625' id='4' type-v2='text' w='51700' x='43900' y='37750'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>This increase in energy consumption and therefore in emissions has a clear relationship with GDP growth, particularly with growth of developing countries like China or India.</run>
                    <run>Ã&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18750' id='5' type-v2='text' w='50400' x='4700' y='59875'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Therefore to reduce our CO2 emissions we need to stabilize GDP growth and subsitute fossil fuels for renewable energies.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='192' h='24000' id='6' is-centered='0' is-fixed='true' is-scaled='1' param='/Users/ericaNNa/Downloads/Unknown.jpeg' type-v2='bitmap' w='30200' x='64800' y='61875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{581B5EDF-A791-4B2A-80B1-E2E7DFFDD441}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='62625' id='3' name='CGP_CO2_regions' w='72700' x='3100' y='27250' />
        <zone h='22250' id='4' name='CGP_CO2_regions' pane-specification-id='0' param='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' type-v2='color' w='18300' x='79500' y='42375' />
        <zone forceUpdate='true' h='13750' id='5' type-v2='text' w='45800' x='4100' y='5500'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Gross domestic productÂ (GDP) is a monetary measureÂ of the market value of all the final goodsÂ and services produced and sold in a specific time period by countries. </run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='8750' id='6' type-v2='text' w='41200' x='54700' y='16875'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>We found out that GDP and CO2 emissions are highly correlated.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='84' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='83' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='13750' id='5' type-v2='text' w='45800' x='4100' y='5500'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Gross domestic productÂ (GDP) is a monetary measureÂ of the market value of all the final goodsÂ and services produced and sold in a specific time period by countries. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8750' id='6' type-v2='text' w='41200' x='54700' y='16875'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>We found out that GDP and CO2 emissions are highly correlated.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62625' id='3' is-fixed='true' name='CGP_CO2_regions' w='72700' x='3100' y='27250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22250' id='4' name='CGP_CO2_regions' pane-specification-id='0' param='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' type-v2='color' w='18300' x='79500' y='42375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B4EE2A80-47CD-4DF0-BEF9-34215D082677}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone forceUpdate='true' h='9250' id='3' type-v2='text' w='35000' x='2400' y='7500'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='24' underline='true'>About the dataset</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='64625' id='37' type-v2='text' w='66400' x='28800' y='18125'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Name:</run>
            <run fontalignment='1'>Ã&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>CO2 emissions and more...</run>
            <run fontalignment='1'>Ã&#10;&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Source:</run>
            <run fontalignment='1'>Ã&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Kaggle</run>
            <run fontalignment='1'>Ã&#10;&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Features:</run>
            <run fontalignment='1'>Ã&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>10</run>
            <run fontalignment='1'>Ã&#10;&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Rows:</run>
            <run fontalignment='1'>Ã&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>55.440</run>
            <run fontalignment='1'>Ã&#10;&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Period analysed:</run>
            <run fontalignment='1'>Ã&#10;</run>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>1990 - 2019</run>
          </formatted-text>
        </zone>
        <zone h='5500' id='86' type-v2='text' w='32600' x='46800' y='10250'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Semibold' fontsize='24' underline='true'>ABOUT THE DATASET</run>
          </formatted-text>
        </zone>
        <zone h='42750' id='87' is-centered='0' is-scaled='1' param='/Users/ericaNNa/Downloads/CO2-300x133.png' type-v2='bitmap' w='33300' x='6200' y='31000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='101' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='100' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='9250' id='3' type-v2='text' w='35000' x='2400' y='7500'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='24' underline='true'>About the dataset</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='86' type-v2='text' w='32600' x='46800' y='10250'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Semibold' fontsize='24' underline='true'>ABOUT THE DATASET</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='64625' id='37' type-v2='text' w='66400' x='28800' y='18125'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Name:</run>
                    <run fontalignment='1'>Ã&#10;</run>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>CO2 emissions and more...</run>
                    <run fontalignment='1'>Ã&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Source:</run>
                    <run fontalignment='1'>Ã&#10;</run>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Kaggle</run>
                    <run fontalignment='1'>Ã&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Features:</run>
                    <run fontalignment='1'>Ã&#10;</run>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>10</run>
                    <run fontalignment='1'>Ã&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Rows:</run>
                    <run fontalignment='1'>Ã&#10;</run>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>55.440</run>
                    <run fontalignment='1'>Ã&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>Period analysed:</run>
                    <run fontalignment='1'>Ã&#10;</run>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='18'>1990 - 2019</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42750' id='87' is-centered='0' is-fixed='true' is-scaled='1' param='/Users/ericaNNa/Downloads/CO2-300x133.png' type-v2='bitmap' w='33300' x='6200' y='31000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7ED6510A-CC93-4150-B558-7C541E5B31FD}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone forceUpdate='true' h='13000' id='5' type-v2='text' w='51400' x='44900' y='1750'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Although production of  renewable energy sources grew in the last decades, we can also see an important growth of CO2 emission sources such as petroleum and coal. </run>
          </formatted-text>
        </zone>
        <zone h='65000' id='20' name='Energy production per energy type' w='69900' x='3200' y='21750' />
        <zone h='12750' id='22' name='Energy production per energy type' synchronized='1' type-v2='currpage' w='16000' x='76900' y='23375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='66' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='65' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='13000' id='5' type-v2='text' w='51400' x='44900' y='1750'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Although production of  renewable energy sources grew in the last decades, we can also see an important growth of CO2 emission sources such as petroleum and coal. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65000' id='20' is-fixed='true' name='Energy production per energy type' w='69900' x='3200' y='21750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12750' id='22' name='Energy production per energy type' synchronized='1' type-v2='currpage' w='16000' x='76900' y='23375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{848D03CE-B1CD-471C-896C-024EFA2EE6D4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 5'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone forceUpdate='true' h='11000' id='6' type-v2='text' w='45600' x='2700' y='4625'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='15'>Despite the problems caused by the increasing amount of CO2 in our atmosphere, total CO2 emissions keep growing. </run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='18250' id='7' type-v2='text' w='44000' x='52700' y='7125'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='15'>Asia is the region with the biggest growth in the last three decades.</run>
          </formatted-text>
        </zone>
        <zone h='65000' id='16' name='CO2 emissions/Regions (2)' w='95500' x='2100' y='23375' />
        <zone h='12750' id='18' name='CO2 emissions/Regions (2)' synchronized='1' type-v2='currpage' w='16000' x='78700' y='24625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='64' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='63' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='11000' id='6' type-v2='text' w='45600' x='2700' y='4625'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='15'>Despite the problems caused by the increasing amount of CO2 in our atmosphere, total CO2 emissions keep growing. </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18250' id='7' type-v2='text' w='44000' x='52700' y='7125'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='15'>Asia is the region with the biggest growth in the last three decades.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65000' id='16' is-fixed='true' name='CO2 emissions/Regions (2)' w='95500' x='2100' y='23375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12750' id='18' name='CO2 emissions/Regions (2)' synchronized='1' type-v2='currpage' w='16000' x='78700' y='24625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{47916491-3B85-4137-B541-F96DAECE9955}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 6'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='68000' id='3' name='CO2_pop_years' w='77800' x='900' y='18500' />
        <zone h='6125' id='4' name='CO2_pop_years' pane-specification-id='1' param='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' show-title='false' type-v2='color' w='14000' x='82100' y='33750' />
        <zone forceUpdate='true' h='8625' id='5' type-v2='text' w='37800' x='54200' y='4875'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>In some years, CO2 emissions grew more than the world&apos;s population.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='46' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='8625' id='5' type-v2='text' w='37800' x='54200' y='4875'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>In some years, CO2 emissions grew more than the world&apos;s population.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='68000' id='3' is-fixed='true' name='CO2_pop_years' w='77800' x='900' y='18500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6125' id='4' name='CO2_pop_years' pane-specification-id='1' param='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' show-title='false' type-v2='color' w='14000' x='82100' y='33750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{89BDED2A-732D-4B00-A785-473EBBF85ED5}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 7'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='59250' id='3' name='Production per region (2)' w='47200' x='900' y='29625' />
        <zone h='23875' id='4' name='Production per region (2)' pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]' type-v2='color' w='14000' x='82100' y='3000' />
        <zone h='58750' id='5' name='Consumption per region' w='49900' x='49200' y='30375' />
        <zone h='9750' id='6' type-v2='text' w='48700' x='5800' y='6625'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Both energy production and energy consumption have grown in the last decades.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='47' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='9750' id='6' type-v2='text' w='48700' x='5800' y='6625'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Both energy production and energy consumption have grown in the last decades.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59250' id='3' is-fixed='true' name='Production per region (2)' w='47200' x='900' y='29625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23875' id='4' name='Production per region (2)' pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]' type-v2='color' w='14000' x='82100' y='3000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='58750' id='5' is-fixed='true' name='Consumption per region' w='49900' x='49200' y='30375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{004F40A4-74D8-4F69-957C-4DE2B7DC9B52}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 9'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='62125' id='3' name='CO2 emissions/Country (2)' w='92500' x='2700' y='25375' />
        <zone h='12750' id='5' name='CO2 emissions/Country (2)' synchronized='1' type-v2='currpage' w='16000' x='72900' y='9250' />
        <zone forceUpdate='true' h='16750' id='6' type-v2='text' w='56500' x='2500' y='2750'>
          <formatted-text>
            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Emissions from developed countries seem to have remained more stable, while emissions from developing countries, such as China and India, have increased considerably while they have been developing.</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='31' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='16750' id='6' type-v2='text' w='56500' x='2500' y='2750'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>Emissions from developed countries seem to have remained more stable, while emissions from developing countries, such as China and India, have increased considerably while they have been developing.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62125' id='3' is-fixed='true' name='CO2 emissions/Country (2)' w='92500' x='2700' y='25375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12750' id='5' name='CO2 emissions/Country (2)' synchronized='1' type-v2='currpage' w='16000' x='72900' y='9250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7B48A519-3ADC-4ADD-9180-676936AF7090}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='8' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Dashboard 3' id='12' />
                  <story-point caption='Introduction' captured-sheet='Dashboard 1' id='2' />
                  <story-point caption='CO2 emissions growth' captured-sheet='Dashboard 5' id='5'>
                    <capturedDeltas>
                      <worksheet name='CO2 emissions/Regions (2)'>
                        <current-page>
                          <multibucket>
                            <bucket>2019</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='CO2 x population' captured-sheet='Dashboard 6' id='6' />
                  <story-point caption='GDP and CO2 correlation' captured-sheet='Dashboard 2' id='3'>
                    <capturedDeltas>
                      <dashboard name='Dashboard 2'>
                        <zone id='6'>
                          <formatted-text>
                            <run fontcolor='#000000' fontname='Tableau Medium' fontsize='15'>GDP and CO2 emissions seem to be highly correlated.</run>
                          </formatted-text>
                        </zone>
                      </dashboard>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='GDP and CO2 correlation (2)' captured-sheet='Dashboard 1 (2)' id='8' />
                  <story-point caption='Emissions per country' captured-sheet='Dashboard 9' id='9' />
                  <story-point caption='Growth of production and consumption' captured-sheet='Dashboard 7' id='7'>
                    <capturedDeltas>
                      <worksheet name='Production per region (2)'>
                        <highlight>
                          <color-one-way>
                            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]</field>
                          </color-one-way>
                        </highlight>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Growth of sources' captured-sheet='Dashboard 4' id='4' />
                  <story-point caption='Energy intensity' captured-sheet='Dashboard 10' id='10'>
                    <capturedDeltas>
                      <worksheet name='Hoja 10'>
                        <current-page>
                          <multibucket>
                            <bucket>2019</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Conclusion' captured-sheet='Dashboard 11' id='11' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{91E6DFE3-575E-4BB5-A993-BB57EE66ED49}' />
    </dashboard>
  </dashboards>
  <windows source-height='198'>
    <window class='worksheet' name='CO2_energy-type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3C4971A6-298F-44C6-9DC5-7EC8A7F12E1B}' />
    </window>
    <window class='worksheet' name='CGP_CO2_regions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3203DA49-BD6F-49F5-B1A9-63AB82A6428F}' />
    </window>
    <window class='worksheet' name='CO2_pop_year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]</field>
            <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F785542-8D28-4419-9544-5CE0277B885A}' />
    </window>
    <window class='worksheet' name='Renewable per region'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='218'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DA93AAD-7759-4F63-93C2-F9C281EF765C}' />
    </window>
    <window class='worksheet' name='Production per region'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='218'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6C84FA3-AC65-42CD-9166-833441BE97BE}' />
    </window>
    <window class='worksheet' name='Production per region (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='217'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E9ECBFD-9EAF-4BFE-8B4F-6E07A4E6B1AD}' />
    </window>
    <window class='worksheet' name='Energy production per energy type'>
      <cards>
        <edge name='left'>
          <strip size='217'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='217'>
            <card looped='1' type='currpage' />
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1993</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Year:ok]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Year:qk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[sum:Energy_production:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{019CF402-288A-45C7-8FF0-4DAD7E1FB435}' />
    </window>
    <window class='worksheet' name='Consumption per region'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BF78611-6986-49B4-91F0-E29013EAFC2E}' />
    </window>
    <window class='worksheet' name='CO2 emissions/Regions (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='217'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1993</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B8F42A9-5AAA-4075-95FD-930D26F6CB50}' />
    </window>
    <window class='worksheet' name='CO2 emissions/Regions'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='218'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1993</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80124126-AB25-4788-8B64-C656120DF8EE}' />
    </window>
    <window class='worksheet' name='CO2 emissions/Country (2)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='217'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Country:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 6)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1543399F-9C30-4E74-834D-95E54CDEF413}' />
    </window>
    <window class='worksheet' name='CO2 emissions/Country'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='218'>
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Country:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BE88D83-7562-49EB-8E6C-C0EF2BCB649C}' />
    </window>
    <window class='worksheet' name='CO2_pop_years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76B3DED8-F503-48C1-A998-E122C7A13A2B}' />
    </window>
    <window class='worksheet' name='CO2 emissions/Regions (3)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='37'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='217'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1993</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66FAB109-AAF2-44B4-86F9-26D46FAB0D6A}' />
    </window>
    <window class='worksheet' name='GDP/Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2019</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F22FECF-B3BE-4BE4-93BF-D352FE8D1FF7}' />
    </window>
    <window class='worksheet' name='Hoja 10'>
      <cards>
        <edge name='left'>
          <strip size='174'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='174'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[sum:Energy_intensity_by_GDP:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1993</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[none:Country:nk]</field>
            <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 7)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{615321F9-9BA2-4DB8-B13D-4B8CA2DE69F5}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='CO2_energy-type'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;natural_gas&quot;</value>
                  <value>318321.75999999995</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;petroleum_n_other_liquids&quot;</value>
                  <value>626166.72000000183</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[none:Energy_type:nk]</field>
                    <field>[federated.0n3ulb40p3648b1377er81ikzali].[sum:CO2_emission:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;coal&quot;</value>
                  <value>706282.60000000207</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{83F5B11C-43A9-49C7-83DB-856D3F5ADD07}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='CGP_CO2_regions'>
          <zoom type='entire-view' />
          <highlight field='[federated.0n3ulb40p3648b1377er81ikzali].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{166F8FC7-6FA5-4B64-807C-DFC984B28891}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F5F629CB-1D06-495E-84A3-331DE16EC67A}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Energy production per energy type'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 2)].[none:Energy_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D9AF902A-5CE4-4444-A7CD-73E17A72B9E4}' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='CO2 emissions/Regions (2)'>
          <current-page>
            <multibucket>
              <bucket>1993</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 4)].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{38739750-C889-43FF-B614-CC8860E7583F}' />
    </window>
    <window class='dashboard' name='Dashboard 6'>
      <viewpoints>
        <viewpoint name='CO2_pop_years'>
          <zoom type='entire-view' />
          <highlight field='[federated.0n3ulb40p3648b1377er81ikzali].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B84CE779-76A3-4BBF-AF11-F5351ED81504}' />
    </window>
    <window class='dashboard' name='Dashboard 7'>
      <viewpoints>
        <viewpoint name='Consumption per region'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Production per region (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 3)].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A715C6FA-23B2-40B0-A4AF-6D01C924578D}' />
    </window>
    <window class='dashboard' name='Dashboard 1 (2)'>
      <viewpoints>
        <viewpoint name='CO2 emissions/Regions (3)'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Region:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Western Europe&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference>
                  <fields>
                    <field>[federated.0n2qrqi0xm4lmh10hysyr0wj1hwx (copy 5)].[none:Year:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2019</bucket>
                  </multibucket>
                </page-reference>
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='GDP/Region'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AD75F890-D68D-4B5E-AEED-536DFDF0E6E5}' />
    </window>
    <window class='dashboard' name='Dashboard 9'>
      <viewpoints>
        <viewpoint name='CO2 emissions/Country (2)'>
          <current-page>
            <multibucket>
              <bucket>2019</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{00CBEE35-8E92-43C2-9462-8C4CB235AE6D}' />
    </window>
    <window class='dashboard' name='Dashboard 10'>
      <viewpoints>
        <viewpoint name='Hoja 10'>
          <current-page>
            <multibucket>
              <bucket>1993</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0BE2BD91-744C-4352-B0BE-77CB1E1A31AF}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{7B6DD076-7F41-4945-BDF3-17BFD3ABAACA}' />
    </window>
    <window class='dashboard' name='Dashboard 11'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{C7066199-2719-4C62-A625-389F9CA0D039}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='CGP_CO2_regions' width='384'>
      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
      cuVKVqxYwf79+5NWf1ZWFtXV1fT09BAIBBgdHSUlJYXe3l6GhoZwuVw3/T6uX79Obm4uHo+H
      Rx55BMMwqK+vT0rt4XCYSCRCbm4u1dXVjI6OUlhYSHNzM5FIhIGBASoqKmhpacGyLC5evBgf
      5ly+fDmrV69m7969SVv35eXlDA4Okp6eTmZmJm63m+HhYWKxWPxzkpmZSUdHB6Ojo5imiWEY
      ZGdn89xzz3H8+PF4YCfLgQMH2LBhAwD5+fnxz/mlS5coLS2deweBCwsLOX78OLW1taxbt46C
      ggL6+/upqqqiqqqKM2fO3DTL6Ew5duwYtbW1DAwM0N3dzbJly+js7OTYsWMUFxezZMkScnNz
      2bFjBz09PfFfWjQapbKyEr/fT29vL4WFhTNe+8WLF2lsbKSxsZGhoSGWL1/OhQsXOHHiBEuX
      LmXevHl4vV4+/vhjgsEg69evJxKJ4PF4qKysJBQKEYlEyM7OnvHag8Egu3btoqGhgWvXrvHI
      I49QVVXFJ598Qn19Pffffz+lpaX09/dz5MgRsrKyWLlyJcPDw+Tn5zN//nxaW1vJyclJylh0
      ZmYmpaWllJaWEgqFuOuuuygqKmLPnj00NTXx+OOPU1JSQlNTEydOnGDZsmWUlZUxODhIWVkZ
      CxYs4NSpU1RXV8/4XE2maXLo0CHOnDlDR0cHGzZsoKKigiNHjlBXV8d9991HaWkpw8PDHD58
      mPT0dFavXs3IyAh5eXnMnz+f69evk5mZmZQTCPLz8zl79iy1tbUUFhayaNEifD4fe/fuJRAI
      sH79esrKyti7dy+NjY1s2LCBjIwMBgYGqKqqYv78+Zw5c4bKysqkDGNFIhG6u7vjxz39fj+D
      g4PU1NSQkZHBqlWr5uaFYHaZpe+zq94wjC/8fzazU+23qu3zn5HZXP+t2Kn+29Vqp9rh9p9z
      u2xv4IvvZ04GgIiIfLU5dwxAREQmRgEgIuJQCgAREYdSAIiIOJQCQETEoRQAIiIOpQAQEXEo
      BYDIl7Asi/379/ODH/yAH/zgB3R3d9Pd3c0f//Ef8+qrr/L3f//3mKbJ9evX+dM//VO+973v
      8bd/+7dTmr7g9ddfZ9euXV+6TCQS4Yc//GHSpxiQuUEXgol8iWvXrvEnf/InvPbaa/FpoV97
      7TXuvfdennnmGf7Tf/pPPPnkkxQWFhKLxVi+fDm///u/z2uvvUZRURGmaVJTU0NraytPPfUU
      lmXR1NREW1sbVVVVDAwMEA6Heeqpp7h27RopKSlkZmayb98+DMNgw4YNDAwMcPToUQoKCnj0
      0Uc5ceIEa9euZWhoiF27dlFcXMyjjz5Ka2srvb29XLp0iRUrVnDXXXcle/XJLKcegMiXqK2t
      ZcOGDZSUlJCXl4fP56OlpYVNmzbh9Xp59tlnOX36NKtWrWLlypVs376dtLQ08vLygBs3RNm+
      fTtZWVn8xV/8BVeuXOHv/u7vcLlc/PjHP6avr4/XX3+da9eucfDgQc6ePcsvfvELLl26hGma
      dHZ28rOf/QyPx8O1a9eIxWL8y7/8C2NjY/zkJz/B7/fz8ccfs337do4cOcK//uu/4nK5eO21
      15K85sQOFAAiX2L8fgLjDMO4aarlaDSK2+0mHA7zs5/9jPr6ev78z/88fvew2tpaRkdHaWho
      oKOjg0gkwt13383mzZspKyvjlVdeYfHixYTD4fhrrFq1inPnzlFXV0d2djbr1q1j586dhMPh
      +OsODw9jmibPPfccv/3bv82pU6cAeOKJJ3j22WeTevcysQ8FgMiXuOeee9i/fz8NDQ1cuHCB
      0dFRFi9ezHvvvUd3dzdvv/02DzzwAPv27aO/v5/vfve7DA8Px6fuLi4uprS0lO9973v84R/+
      4YQ2zPn5+fz0pz8lNzeXnTt38sADD/Bnf/ZnHDt2jJaWFgDS0tIYGxuju7ub2trapN12UOxt
      zk0HLTKd0tPTWbx4MW+++SZnzpzh/vvv56GHHuLgwYN88MEHbNiwgSeffJKrV69y/fp1Tp06
      xalTp1i1ahXp6elUV1dTX1/Phx9+iNfrjd9TYeHChfT09LBu3Tr6+vpYuHAhlmVRUFBAb28v
      //RP/8TY2Bi/9Vu/xaFDh3jjjTdYvHgxTzzxBH19faxdu5bq6mr+5m/+hlAoxPe///343Psl
      JSXx5xb5MjoILCLiUBoCEhFxKAWAiIhDKQBERBzq/wcEwK6AB8TsmgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CO2 emissions/Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='CO2 emissions/Country (2)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXRUZZ7/8fetqmwGCYQlG4sRg2CIiAqKC7gMiLIpLihHe+yxp21m2pnT
      02qf+Tkzzumx29/p021ra59xQM/0TJ/RdgEBtVFbIKBAQBwEgqzZIGaDkFTW2u69vz9o6ifK
      llCpSvJ8XudwTG7deup7Hyv3c5/n1r1lua7rIiIixvEkugAREUkMBYCIiKEUACIihlIAiIgY
      qk8FgG3b6Jy1iEhs9KkAEBGR2FEAiIgYSgEgImIoBYCIiKEUACIihvLF40Wam5tZv349HR0d
      ZGZmMmPGDKqqqti2bRuhUIgJEyYwfvx4vvjiC6ZMmUJzczOlpaXccMMN8ShPRMRIcRkBNDU1
      cf3113PvvfcSCARoamqira2NOXPmcO+997Jjxw5s26ampoZIJMLq1au59NJL41GaiIix4jIC
      yM/PB+Do0aMcOXKECy+8kKKiIlzXZc+ePaSnpwPQ3t7OunXrGDt2LEOHDgXAcZzoZ/8dxyEU
      CmFZVjzKFhHp1+ISAAA7duxg586d3HfffSQlJeE4DqtXr8ayLObPn084HKa1tZXOzk7GjRsX
      3cm7rhsNANd1SU1NjVfJIiL9WlwCoKqqij179rBo0SK8Xi8Aa9euZejQoUyZMgXLsgiHw2Rn
      ZzNz5kz+8Ic/sHDhQtLT06Prw/ErgQGNAEREYiAuAbBr1y46OztZvnw5AH/xF3/Bzp07GTFi
      BIcOHSIlJYUZM2bg8Xi44IILmDVrFu+99x733nsvHo8+qCQi0hOsvvSFMLZt4/F4NAIQEYkB
      HV6LiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGitu9gOIlXFtLw8+e
      TXQZPcZzwQXk/OL/JroMEekH+l0AYNvYR48muooe4/75zqkiIudLU0AiIoZSAIiIGEoBICJi
      KAWAiIihFAAiIoZSAIiIGEoBICJiKAWAiIihFAAiIoZSAIiIGEoBICJiKAWAiIihFAAiIoZS
      AIiIGCouAeA4DgcOHGD9+vUcPnwY13WxbZtt27axZcsWIpEItm1TU1MDQCQSobKyMh6liYgY
      Ky4BsHv3bmpra8nPz+fjjz+mvb2d4uJiXNclOTmZP/3pT4RCIbZu3YrrumzYsAG/3x+P0kRE
      jBWXL4QpLCzEsqzoDt91XWpra7nllltwXZcvv/wyum5FRQWtra3cfPPNp2zLtu0zvtbZHu/r
      XI6PkEREzldcAsDj8dDS0sLKlSuZOHEiAwYMwOv1YlkWlmXh8XhwXZfy8nIOHDjA9773PSzL
      AohODwG4rovHc+ZBi+O6Pb49ieY4TqJLEJF+IC4B0Nrayuuvv86CBQsYOnQolmVFd+qO4+A4
      DpZlkZ+fz6RJk/j444+5++678Xg8+Hw+fL7jZdq2jcfjiYbDqVi+/vctl19nAcnJyYkuQ0T6
      gbicA9iyZQsFBQW0tLRQXl5OMBgkJyeHkpIStm/fTmZmJgCWZTF69Gjy8vLYuHFjPEoTETFW
      XAJg/PjxDBo0CL/fj9/vx7ZtbrnlFpKSknAch5kzZ5KcnMyUKVOwLIupU6eSm5urqQ4RkR4U
      l/mSvLw88vLyvrX8qquuOun33Nxc4PhIYMyYMfEoTUTEWLoQTETEUAoAERFDKQBERAylABAR
      MZQCQETEUAoAERFDKQBERAylABARMZQCQETEUAoAERFDKQBERAylABARMZQCQETEUAoAERFD
      KQBERAylABARMZQCQETEUAoAERFDKQBERAylABARMZQCQETEUAoAERFDKQBERAylABARMVTc
      AiAYDLJ3715c1wWgs7OTkpISNm/eTHt7O7ZtU1NTA0AkEqGysjJepYmIGCkuAVBbW8ubb75J
      cXExjuMAsHLlSjIzMxk2bBgrVqwgFAqxdetWXNdlw4YN+P3+eJQmImIsXzxeZOjQoTzwwAO8
      88470WWWZZGZmYnH48Hr9UaXV1RU0Nrays0333zKtmzbPuNrne3xvs7l+AhJROR8xSUAkpKS
      vrVswoQJvPnmm3i9XiZPngxAeXk5Bw4c4Hvf+x6WZQHHd3Ynduqu6+LxnHnQ4vx5iqk/OzGK
      EhE5H3EJgFPZtm0bP/jBDwB47bXXGDt2LPn5+UyaNImPP/6Yu+++G4/Hg8/nw+c7XqZt23g8
      nmg4nIrlS9gmxYUFJCcnJ7oMEekH4nIOwO/3U1VVRUtLC4cOHaKjowPHcSgrK6OiooJgMBjd
      sY8ePZq8vDw2btwYj9JERIwVlwDo7OyksbGRSZMm0dTURCgUYtGiRRw7doyGhgYWLVpESkoK
      U6ZMwbIspk6dSm5urqY6RER6UFzmS7Kzs8nOzv7W8muuueak33Nzc4HjJ4jHjBkTj9JERIyl
      C8FERAylABARMZQCQETEUAoAERFDKQBERAylABARMZQCQETEUAoAERFDKQBERAylABARMZQC
      QETEUAoAERFDKQBERAylABARMZQCQETEUAoAERFDKQBERAylABARMZQCQETEUAoAERFDKQBE
      RAylABARMZQCQETEUHELgGAwyP79+3FdFwDXdSkrK6O4uJjq6mps26aurg6ASCRCVVVVvEoT
      ETFSXAKgrq6Ot956izVr1uA4DgC7d+9m3759jBs3jlAoRCgUoqSkBNd1+eSTTzh27Fg8ShMR
      MZYvHi+SmZnJwoULWbFiRXTZrl27mDdvHqFQiKysLAKBAACVlZX4/X6mT59+yrZs2z7ja53t
      8b7O5fgISUTkfMUlAJKTk7+1rKGhgTVr1uDxeAgEAsyePZvy8nIOHjzII488gsdzfHASiUSi
      O3XXdaPLT8dx3NhvQC9zYhQlInI+4hIApzJ06FDmzp0LwNtvv00wGCQ/P5+JEyeyZs0aFixY
      gMfjwefz4fMdL9O2bTweD5ZlnbZdKylhmxQXFqcOVBGRrorLOYCWlhYOHz5Ma2sr1dXVdHR0
      cNFFF7FhwwZqa2vp6OggOTkZy7LIz88nJyeHzZs3x6M0ERFjxSUA2tvbqa+vp6ioiCNHjhAM
      BrnuuuvIzMxk37593HnnnaSkpHD11VdjWRZTp05l+PDhmuoQEelBcZkvycnJIScn51vLi4qK
      Tvp9xIgRAHg8HgoKCuJRmoiIsXQhmIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCI
      iBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYigFgIiI
      oRQAIiKGUgCIiBhKASAiYigFgIiIoRQAIiKGUgCIiBhKASAiYqi4BUAwGGT//v24rhtd5rou
      e/fuxe/3Y9s2dXV1AEQiEaqqquJVmoiIkeISAHV1dbz11lusWbMGx3GiyysrK1m9ejVfffUV
      oVCIkpISXNflk08+4dixY/EoTUTEWL54vEhmZiYLFy5kxYoV0WXhcJiNGzdy4403nrRuZWUl
      fr+f6dOnn7It27bP+Fpne7yvczk+QhIROV9xCYDk5ORvLVu3bh033HADfr8/uqy8vJyDBw/y
      yCOP4PEcH5xEIpHoTt113ejy03Ec94yP9wdfH0WJiHRXXALgmzo7OyktLSUQCFBfX4/P5yMz
      M5P8/HwmTpzImjVrWLBgAR6PB5/Ph893vEzbtvF4PFiWddq2raSEbFLcWJw6UEVEuioue8uW
      lhb8fj+tra1UV1czbNgw/u7v/g6AnTt3kpyczMCBA7Esi/z8fGpra9m8eTPXX399PMoTETFS
      XAKgvb2d+vp6ioqKOHLkCAMHDuSCCy4AID8/H4/HQ0pKCldffTWWZTF16lTKyspwHOesUz4i
      ItI9cQmAnJwccnJyTvnY4MGDoz+PGDECAI/HQ0FBQTxKExExlg6vRUQMpQAQETGUAkBExFAK
      ABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQM1e27
      gS5btoxNmzZFf3/44YcpKiqKSVEiItLzuh0AH374Ib/4xS/wer0ApKWlxawoERHped2eArr4
      4ovp6OggEokQiUT0PbUiIn1Mt0cAF154Ib/5zW+ivz/00EMUFhbGpCgREel53Q6AxYsXc+DA
      AY4ePUphYSGDBg2KZV0iItLDuj0F9Morr/Dmm2+yd+9ennrqKQ4fPhzLukREpId1ewRQWlrK
      Cy+8gGVZXHbZZWzcuJH7778/lrWJiEgP6vYIYPjw4bz++uusX7+eFStW6COgIiJ9TLcD4PHH
      HycjI4PKykq++93v6gSwiEgf0+UpoPLycmzbpr6+HsdxyMzM5MCBA2RkZJCTk9MTNYqISA/o
      8gjAdV1c18VxnJP+nYtAIIDrutF2AoEAfr8/2mY4HI4+FgqFulqaiIh0QZdHAGPGjAEgJSWF
      6667ji+//JLDhw8zbNiw0z6no6OD4uJiqqqq+P73v4/X62XTpk3U1NTg9XpJTU3llltuobi4
      mFmzZlFWVkZVVRW33npr97dMRETOqNvnAF5++WVs22bp0qVUV1ezcePG067b0dFBUVERQ4cO
      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
    </thumbnail>
    <thumbnail height='192' name='CO2 emissions/Regions' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='CO2 emissions/Regions (2)' width='384'>
      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
      bt7QQHggYct7UBRmFSsrLSthy3OivXIiHfd/AIYf/If/bVmWvF5vCid68LmuK9u22QL7gmKx
      mFzXlS+BwTURv4+JE4lE4rvU78V9/5t7+0HgkWwB4O5Yj4nDekwM1mNijHQ9PnAvsRl+0xhG
      z7Is1mMCsB4Th/WYGCNdj/f9LiAAwNh44LYA7heO46i7u/uun7dtW+FwOIkTJdftP5tt27Jt
      W9LQPsjOzk5FbztwHI1GR/zGPtd1NTAwoP7+/i88q+u6unbt2hdezoMgHA5rYGBAAwMDunXr
      llzXveO/VSQSueO42sPo9nUwODg46t1LsVgsvpyBgYGHcr0RgFG6fPmy/uVf/kW9vb2/9PNd
      XV26cuVKcodKovfffz/+B3Hx4kU1NDSos7NT27Zt0+nTp7Vt2zYFg0FJ0qlTp/T222/HI3G7
      wcFBDQx8/lUdO3fu1Icffqiqqip99tlnX3je4TPNPuz27NmjQ4cOqbq6WrW1tbJtW3v37o1/
      vqqqSoODgymccOwdPHhQlZWVqq6u1qlTp+7pgburq0sNDQ133NbU1KR3331X1dXVqq6u1q1b
      t8Zq5JS57w8C349c11VdXZ3Wrl2ruro6LV++XIODg/roo4/kOI6WLVumtLQ0ZWVlybZtHTly
      RP39/Zo1a5bKyspSPX5C3P4MPxaLSRqK4sKFC1VeXh5/xZbrurpy5YqeeOIJNTU1adasWXcs
      57PPPpNt25o7d278tqtXryoQCOhrX/ta/LaLFy+qvr5eWVlZ+spXvqJLly6pu7tbbW1tWrJk
      iSZPnqyamhq1traqqKhIS5YskW3bOnr0qHp7e9XX1yfHcXTy5Em1tbVp0qRJWrRo0UP5TvM1
      a9YoIyNDkuKnWxlm27YRB1xXrVqlvLy8+McnT57U9evXVVBQoKVLl6qjo0PHjh1TRkaGli1b
      pkOHDqmjo0NXr17VypUrFQgE5DiOysvL9fjjj8eXc+HCBZWVlSkWi6mxsVFTp05VS0uLBgYG
      lJmZqcLCQlVXV8vr9WrVqlXyeDw6deqUOjo6VFBQoOXLlysYDOrw4cNyXVerVq3SuHHjUrGK
      JLEFMCq2bSsYDGrOnDm6evWqJKmmpkbTp0/XqlWrZFmWent7489cZ8+erXXr1unjjz/+pc+C
      HxZz5sxRbW2t3n33XXV2dkqSbt68qYyMDD322GOqq6uL3zcSiaiqqkonT57UyZMntX///vgD
      VXNzs8rKyuIHWS3L0vjx47V27VplZWXpk08+0dmzZ1VcXKw1a9bo2LFjkqSSkhKtW7dOra2t
      amtr06FDh5Sbmxv/OkkqLS3VunXr1NzcrK6uriSvobE3/Ix/165d8fViGtu2VVlZqV27dunI
      kSNyXVeTJk3SunXr1NHRodbWVlVWVqqioiL+JGDBggWaM2eOVq5cecfLUU+dOqVdu3Zp165d
      ikQiOnfunKShJz11dXWKRCLavn27bt26palTp2rv3r1aunSpysvLtW/fPoXDYV29elXr169X
      KBRSfX299u/frwULFmjevHmqqqpK1WqSxBbAqDQ3N+vatWvavXu3mpqa1Nvbq7lz52r//v06
      e/asVq9eHb9vNBrV4cOHlZGRoYGBAUUikYfmdePDzyQdx5HP51NWVpZee+01dXZ26mc/+5le
      euklXbhwQW1tbaqsrFRjY6Oi0aj8fr/8fr+WLVumhoYG2bat2bNnx9dLWlqaQqHQHd+nvr5e
      3d3dCofDKi4uVnp6uiZPnhz/Yx1+dm9Zljo6OjQ4OKjOzs74fwuv16tYLKYTJ4bOusQAAAPA
      SURBVE7E73P793hYeL1ePfXUU0pPT5fH44lvhQ27/fTrDyuv16sVK1ZowoQJ8ng8cl1XtbW1
      cl1X7e3tGhwc1BNPPKH33ntPubm5+upXvyqfzyefz/e519CXl5drwYIFku5+5oLZs2dr+fLl
      8fcyDG95DB9vyc/PV1pamubOnatPP/1UbW1tqqmpkeu6Kd8dxxbACLmuq7Nnz+pb3/qWNm3a
      pM2bN6uurk6BQECvvPKKVqxYccczr4aGBs2YMUPr16/XxIkTUzh5Yo0bN05tbW1yHEdNTU2a
      OHGi2traNDg4qPz8fE2dOlUDAwO6cuWKvvnNb+r555/X8uXL48dFLMtSenq6MjMzlZmZqYyM
      jPgDU1lZmQ4fPqxIJKJIJKL+/n5du3ZNmzZtuuuFgjo7O+Xz+bRx40ZNnTo1/obB3t5e2bat
      aDSqrq4uBQIBbdy4UaWlpclaVUllWZYCgYACgYD8fr98Pp9CoZBu3rwp27bV09MzojcKPYgs
      y5Lf74+vg66uLlmWpY0bN2r69OmSpIkTJ+rVV1/V5MmTVVdXJ5/Pp2AwKMdx7gjmcBSG19nw
      Cx4GBwfjuz7T09NlWZZ8Pp/C4bBCoZD6+/tlWVY8QI7j6Pz585o8ebLy8vK0cuVKbdiwQc88
      80zyV9BtHo6noknkuq6Kioo0fvzQqQKmTZum/v5+dXR06MCBA7JtWxUVFfL5fIrFYiouLtZ7
      772n5uZm5eXlPTTvYq6oqNC+fftk27ZKS0tVUFCg9vZ27dmzR5JUWFioyZMna/r06fFnTvPm
      zVNTU9Mdyxn+g7xddna2Vq9erR07dsh1Xa1evVrFxcV69913NX78eJWWlionJyf+DHfKlCnK
      z89XOBzWjh07lJGRoaysLK1evVoffPCBAoGAioqKlJeXp2AwqB07dsTj87D50pe+pD179siy
      LOXk5OiZZ57RmjVrtGvXLrmuq8cff1xpaWmpHnNMFRYWqqqqSh6PR1lZWXr66adl23b8dyM7
      O1uXLl1Sc3OzJGndunUKBAKqqanR7t27tXbtWgUCAeXk5Ki2tja+m3ft2rWaP3++tm3bppyc
      HD3yyCPy+XwqKSmRNBSeiooK7dq1S5Zlac2aNZKGjhsMDg6qoKBAM2fOVF5eng4cOCDLsjRz
      5kzl5+enZkWJ9wEAwJjp6+vTiRMnUv5M/24IAACMkeHdRcN7DO43BAAADMVBYAAwFAEAAEMR
      AAAwFAEAAEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAwFAEAAEMRAAAw1P8DZWnAB8y5yIcAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='CO2 emissions/Regions (3)' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='CO2_energy-type' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXCUdYL/8c/TRzrpnCQhB6cYE0CMLAZFOYIoIuOxKivIugrozNTuzrhT
      Wzs75WzNzlRt1R6Dc7jubG3VTKnjjFqisiJkBcERBAQFduUQApFAEAyQkw6kk04fz/P7I5Ue
      IwI/0gnp8H2/qiyTp498n8f4vPv5Pp1+LMdxHAEAjGJZluUa7EEAAAYHAQAAQxEAADAUAQAA
      QxEAADAUAQAAQxEAADAUAQAAQxEAADCUZ7AHACSj06dP65VXXlEsFpMkXXvttVq4cOEV+dlN
      TU0KhUIaPXr0Ffl5MBdHAMDXOHPmjHbu3KlbbrlFt9xyi8rKyuQ4jmzblm3bCgaD6vkUFcdx
      1N7erkgkIsdx4vf78r8dx1E4HD5vec/jv3y/bdu2aeXKlb3u+9X72batSCSirq6uXs/T0dHR
      axlwMRwBABeQlZWlOXPmxL9vamrSX/3VXykvL08nTpzQ3Llz9bd/+7d67rnntHfvXnV1denp
      p59WaWmp/vqv/1oVFRXatWuXfv7zn+vpp59WJBKRy+XSkiVLVFdXJ7fbrW9/+9tau3atDh48
      qO9///v64osv9OKLL6qrq0t79+7VkiVL9Pvf/14vvPCCWlpa9MMf/lA/+tGP9Dd/8zcqLi7W
      6dOn9c1vflMLFizQ888/ry1btigcDuu73/2uKisrB3HrYSjgCAC4gCNHjmjJkiVasmSJfvOb
      38hxHFmWpeXLl+unP/2pqqurVV9fr61bt+pXv/qVli1bphUrVkiSPvvsM4XDYf3Hf/yHXnvt
      Nc2cOVMvvfSSJk+erEgkorlz52rjxo1qb2/Xxo0bVVlZKcuyNHLkSC1dulTz5s3Tr3/9a82Y
      MUNut1t79uzRjh07VFZWJr/fr8zMTP3nf/6n/u3f/k2vv/66zp07p9WrV2v58uX6/ve/r9//
      /veDvPUwFHAEAFzA2LFj9eyzz0qSUlJSFAwG5Xa7NWzYMLW0tMiyLLW2turs2bP613/9V0Ui
      EWVkZEiSioqK9NRTT8nv96upqUlTp06Vz+eTx9P9v1xJSYmGDRumP/zhD2poaNCUKVMkSS6X
      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
      GOr/AQPE5hU8M/JDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='CO2_pop_year' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='CO2_pop_years' width='384'>
      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
      RMRTL+JEXBLH4dj2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Consumption per region' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeVgUZ9Y28Lsbmq2hkUUFBBWQVUAWxV1hXGOixrjF15hxzCTG7JN3MpNJ
      YmJMHDNJjI6TURPHJGZzEqOjmURFRREVIwriBiib7DSrdLP1er4/+KiXlgbRKFud33V5pbu6
      6qnnKTp1d1V1n5IQEYExxpjoSLu7A4wxxroHBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBj
      jIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBj
      jIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBj
      jIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBj
      jIkUBwBjjIkUBwBjjIkUBwBjjIkUBwBjjIlUjwoAg8FwR/MTEXQ63X3qjXlqtRrp6eltpuv1
      euj1+i7tizlGo7FH9KOny8jIQG1tbXd3g7Fu1eUBsGvXLvj5+cHBwQEPP/wwACA3NxcTJkyA
      lZUV3N3d8dVXXwFoDoS3334bgwYNgr29PRYuXIimpiahrbS0NNjZ2d12na+88gr8/f2Ff3/5
      y1863d+ioiJs27ZNeH7u3DmsWrWqzXzPPvss3njjjU63+2udPHkScXFxbaZv3rwZDzzwQJf0
      4auvvsL169e7fNl74emnn0Zqamq3rZ+xnqBLA+DSpUtYuXIlPvzwQ+Tn52PlypUAgJUrVyI4
      OBi1tbX4/PPPsWrVKuTm5qKxsRGpqak4fvw4ioqKkJOTg/379wvtDR8+HFlZWcLz0tJSpKen
      Q6PRmKxXqVRi2bJlOHLkCI4cOYI//vGPAACdToeMjAxcv34dRAQAqKurQ11dHbRaLUpLS3Hx
      4kVs27YNSqUSarVaaFOtViM1NVUIpJMnT+KJJ54AANTW1uLKlSttPmFqtVrU1NSgsrISaWlp
      MBgMKC8vx8WLF2E0GgE0H9VcvXoVV65cEfp069iamppw6NAh/Pjjj1AqlSbj/d3vfoevv/4a
      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
      U1MTMjIyUFdXJ/xS0lwRMaBtcbfa2lrU1dWZtEdEyMvLw+XLl83uDAwGA7KyslBeXi6sr71l
      zBX3aimg1pmCcObaraqqwrp161BcXNzmV6VqtRqXLl1CSUmJyXS9Xo+0tDSTXxGb65u5wmU1
      NTXQarVQqVTC8uba02g0SE9PR2lpaZttZq5fLe1ev37dpHia0WhEdnY2Kisr27TTurBey69y
      y8vLkZaWBpVKZTJvcXGxya/EWxe1M7ecue1qrkAcESE7OxvZ2dlmd/Yt26aqqkqYZq6g263v
      0Y4K8jHWa3Tld04vXbpE7u7uNHLkSPLz8xOKj5krImauuNucOXPa1L/5/e9/TxERERQVFUXB
      wcEm39Wuq6uj6OhoGjZsGIWFhZGvr2+7y7RXxK2ysrJTBeHaa3fevHkkkUgoLCyMli1bJvTt
      +vXrNGjQIIqNjSVnZ2f64osviKi5Ro23tzeNHj2a+vXrR5cuXTLbt/YKl02aNEkotvbxxx+b
      be/mzZvk6+tLsbGx5O/vT19//XWn+tW6eNqJEyeosbGRxo0bR8OGDaPhw4eTq6uryd+mdWG9
      hQsX0s6dO8nHx4diYmLIycmJrly5QkREL7/8MvXv359Gjx5NFhYWdPnyZZOaRuaWu3W7Go1G
      swXiHnnkEYqIiKDo6Gh66qmnhL611BcaPnw4BQcHk7OzM6lUqnYLut36Hu2oIB9jvUWXBsCj
      jz5Ka9euJSKiL774gpYuXUpE5ouImSuAdv36dSooKDBps7a2llQqFWVnZ9OQIUMoJSVFeG3b
      tm00depUMhgMlJeXR4MGDWp3mY6KuHW2IFx7fbG2tm5ToK6pqYkaGhqoqKiIPvzwQ5o9ezYR
      Ne9oDx8+TEREL730Er3wwgtm+9Ze4bJJkybR0KFD6ezZs2Q0Gs22l5KSQl5eXpSTk0NGo9Gk
      bx31a9++fUTUXCDu448/ps8++4wmT55Mer2eSktLzQZA68J6KpWKGhsbKS8vjxYuXEgbNmyg
      nJwccnJyEn4QFhgY2CYAzC1363Y1VyDOYDCQg4MDHT16lAwGg8k4WwKgtraWjEYjubu7U3p6
      ersF3cy9R9sryMdYb2HZlUcbhYWFQlmBFi1FxOzt7eHu7i4cSr/11lv485//jE2bNuHRRx/F
      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
      1tYWQHNAEBFkMlmHyxkMBrOf9tesWYN/x1/ptdcA+vCfmjF2F/rcKaDWJBKJsPMHINxViTHG
      WB87BcQYY6zzOAAYY0ykOAAYY0ykOAAYY0ykOAAYY0ykOAAYY0ykOAAYY0ykOAAYY0ykOAAY
      Y0ykOAAYY0ykOAAYY0ykOAAYY0ykOAAYY0ykOAAYY0ykOAAYY0ykOAAYY0yk+A4prEMJCQlI
      SEjo7m7claFDh2L58uXd3Q3GeiwOANahhIQEfLZ3DwaHhXZ3V+5IrVIJl4QEDgDGOsABwG5r
      cFgoxj+2pLu7cUcKLl1G6YHD3d0Nxno0vgbAGGMixQHAGGMixQHAGGMixQHAGGMi1acuAtfW
      1iIxMRE2NjaIjY3FmTNn0NDQgIEDByI4OBgHDhwAAEyZMgVXr17FmDFjkJiYiJEjR8LOzq6b
      e88YY12rTwVASkoKJk2aBJlMBgsLC9TX12PmzJk4dOgQiAhjx46FQqFAcnIydDodsrOzIZfL
      2+z8jUYjiKhN+0ajsauGcl/o9fo7XqY3j5mI7mrMjPVmlpad3633qVNAKpUKmZmZOHz4MEpL
      S2FlZQUAQhgoFArY2tpCq9VCpVIhISEBISEhAACDwQCdTgedTtedQ2CMsS7Tp44AnJycEBgY
      iAEDBkClUqG+vh5GoxEajQY+Pj7Iy8uDo6MjnJ2dIZFIMGPGDBw8eBBz586FhYUFLCwsADSH
      Qcvj1qTS3p2Xd/LJoEVvHrNEIrmrMTMmFr33/24zxo0bh9TUVBQWFiIgIAChoaE4evQoRo8e
      DR8fH9y8eRPZ2dmIiIiAj48P5HI5Ro4ciZqamu7uOmOMdbk+9fFIJpMhNjZWeD506FAMHTpU
      eD5u3DjhsY+PDwDA09Ozy/rHGGM9SZ86AmCMMdZ5HACMMSZSHACMMSZSHACMMSZSHACMMSZS
      HACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZS
      HACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZS
      fSoAysvLcfjwYRw/fhwajQaZmZmIi4tDUVERiAjHjx/HkSNHoNfrce3aNQBARkYGGhoaurnn
      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
      kUhgZWWFyspKREVFwdbWFmlpaVCr1di9ezdWrFgBADAYDDAajcJjvV7fsN3dRQAADcRJREFU
      pn2DwdCl47nXNBrNHS/Tm8dMRHc1ZiK6D73pGnc7ZtZ3WFtbd3rePhUA165dQ0VFBR588EEA
      gFarBdC8E1MoFKiuroajoyNsbW0hkUgQHR2NU6dOISYmBhYWFrCwsAAASKVS4XFr5qb1Jnfy
      xmjRm8cskUjuaswSieQ+9KZr3O2YmTj1qVNAJSUl0Ol0OH78OGpqauDs7Iy4uDgMHjwYwcHB
      SE1NxbFjxxAZGQknJyd4enoKwcAYY2LTp44AYmNjTZ5HR0ebPJ89e7bwOCoqCgAQGRl5/zvG
      GGM9UJ86AmCMMdZ5HACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZS
      HACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZS
      HACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSHACMMSZSfSoAqqursWvXLhQWFgIATp48
      ibi4OKSlpUGr1WLfvn3Yt28f1Go1fvnlFwBAYmIiGhoaurPbjDHWLSy7uwP3koWFBUaOHAm9
      Xg8iQn19PWbOnIlDhw6BiDB27FgoFAokJydDp9MhOzsbcrkcdnZ2Ju0YjUYQUZv2jUZjVw3l
      vtDr9Xe8TG8eMxHd1ZjN/e17i7sdM+s7LC07v1vvU0cAjo6OkEqbh2Q0GmFlZQWgORjq6+uh
      UChga2sLrVYLlUqFhIQEhISEAAAMBgN0Oh10Ol239Z8xxrpSnzoCaK1lp280GqHRaODj44O8
      vDw4OjrC2dkZEokEM2bMwMGDBzF37lxYWFjAwsICQHMYtDxurSVceqs7+WTQojePWSKR3NWY
      JRLJfehN17jbMTNx6lPvlJycHBQUFAAA5HI5QkND/197dx9TZf3/cfyJQHLAToikkDDwgCxu
      1iDAAxaEzGax0ITNTfIma6vGGq6iZLmY/FF/kLb+aGuukmpuWjFBWyXCFsryIITcpNw4Foc7
      QaDvAT03cG5/f7jf+Ub49avf5Jzqej/+Onefz/V+77oOr3Nd17kONDQ0oNVqCQ0NRafTMTk5
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1 (2)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd1hUZ94+8HsKM8PQpEoVQSwgiAW7sccS19ckmjW2za5ZNWaNicaU3SQb
      N3mN7i9vsjHZzWZTNMYUWyLGLqJiQ0VUVJBelSId6VOe3x+usxJAwJ0B8dyf6/ISzsw55/uc
      Yc495zlnziMTQggQEZHkyDu6ACIi6hgMACIiiWIAEBFJFAOAiEiiGABERBLFACAikigGABGR
      RDEAiIgkigFARCRRzQaAXq9HVFQUdu7ciZycHNP0Gzdu4Ntvv8VPP/2EqqqqBvMkJCRg27Zt
      OHPmDMz1BePy8nJ89dVXqK2tbdN8P/zwAzIyMsxSwx3p6elYvXq1WZfZGpZoyx3NvWZXrlzB
      119/jStXrjSa59q1a7hx40aDadHR0di0aRPS0tIsUicRWYBoQnl5uRgyZIhwd3cXo0ePFr6+
      vkIIIY4cOSK0Wq149NFHRWhoqPD39xf5+flCCCFWrlwpHB0dxdSpU4Wbm5tYsWJFU4tus5yc
      HDF+/HhRUlLSpvmeeuopcfToUbPUcEd0dLTo1auXWZfZGpZoixDNv2bh4eFCq9WKyZMnC61W
      K8LDw4UQQqSkpIg5c+YImUwmNm/ebFrOK6+8Inx8fMS0adOEtbW1OHHihNlrJSLzU6xu4iPt
      u+++i7S0NMTGxmLJkiX43e9+B7VajccffxyLFi3Cl19+id///vfYt28fkpOTMWXKFGRmZuLz
      zz/H73//e4SFhWHNmjVYuXJlg+VGRkZiw4YNKCsrQ2BgIABg69atqK+vx+bNm1FSUgK1Wo0N
      GzYgPT0dISEh0Gg0UKvVGDx4MGQyGY4ePYrw8HBkZmbC19cXarW6yWlarRb9+vWDra0t0tPT
      8cknn+Dy5cvo3bs3NBoNiouLERkZiYqKCmzevBnV1dXo0aMH6uvr8eOPP+LQoUMoKyuDv78/
      5PLbB0rXr19HeHg4/P39sWvXLri4uMDFxQUHDhyAwWCAi4sLAGDnzp1wdHSEra0tAODYsWMA
      gNTUVCQlJcHPz6/JbXFnG+3evRvV1dXIz8+Hj49Pg7ZUVlbiH//4B44dO4auXbvC2dm52ba0
      pLnXbN68eVixYgX+/ve/w8bGBp988gmWLFmCDz74AHZ2dqirq8OwYcPQr18/1NTUYMaMGYiL
      i8PSpUtRU1OD77//HgsWLGj7pxEial9NpULv3r3F999/32Da9evXBQBRWFhomrZt2zbRu3fv
      Bs+rqqoSTz75pPif//mfBtN37NghfH19xfvvvy/69OkjvvrqKyGEEBqNRgwePFgsXLhQyGQy
      MWDAALFo0SKh0WjEsWPHRHFxsQAgDAaD2Lt3r/Dy8hJ//vOfxezZs8WWLVuanCaEEP369ROR
      kZHi+vXrwsnJSSxZskQ8/vjjIjg4WNTX14vo6Gghl8vFmDFjxDPPPCOUSqXIzc0Vr7zyihg2
      bJh46623xLhx40R2drapDdHR0UKpVIr58+eL2bNnCzs7O5Gfny/++Mc/ihkzZgghhMjMzBRa
      rVaUl5eb5ps8ebL47W9/K2xtbcVf/vKXZrfFO++8I9zd3cWKFSvE8OHDxZw5cxq0xWAwiCFD
      hoipU6eKZcuWCQcHB5GSktJsW1rr7tdMp9MJhUIhkpOThRBCJCcnC4VCIXQ6nTAajUIIIcaP
      H286AigtLRUARF5enhBCiNjYWOHk5NTqdRNRx2kyANzc3ERUVFSDafHx8UKpVJp2AkIIcezY
      MeHu7m76/cKFC6JPnz5i3LhxoqioqMH8kydPFps2bRI6nU7s2LFDjB07VghxOwDu7Kz8/f3F
      2bNnhRBCjB49Wmzfvr1BAHz55ZciODhYHDlyRNTV1QkhRJPThPjPTvOvf/2rmD17thBCCIPB
      IHr27CkOHz7cqDvH3d1dxMXFifnz54tZs2aJS5cuNWirEI27gIYPHy42bdok0tPThUqlEnl5
      eeL//u//TDvuu9vu7+8v0tPT77ktXF1dTd0nf//73xsFwNmzZ4WXl5fQ6XRCCCGeffZZ8dZb
      bzXbljtSUlLExo0bxcaNG0VNTU2D2n75mlVUVAgAoqCgQAghREFBgQAgKioqTPPcHQBCCDFj
      xgzRo0cP8cwzz4jQ0FBhbW0tiOjB1+RJYC8vL8THxzeY5u7uDr1e3+BkZGpqKjw8PAAAMTEx
      GDt2LBYuXIiIiAg4Ozs3mL+oqAjvvvsuhg0bhrVr1zZ6HICpq+WXP98xb948zJ49G6tWrYKn
      pycOHz7c5LS7FRYWonv37qZl+vr6oqioqNl1r1u3Dq6urnjiiSfQt2/fRic7f7lNampq4Ofn
      h4kTJ+Kbb77Btm3b8Jvf/KbRc1evXg0/P79mt4XRaERpaanpOU0pLCyEj48PlEolAMDPzw+F
      hYXNtuWO/Px8HD16FEePHoVOpzNNb+o1s7GxgVqtRl5eHgAgLy8ParUaNjY2zda1fft2rF27
      FiNGjMD8+fPh6enZ7HOJ6MHRZAAsWbIE69atw7Vr12A0GnH69Gk4OTnhsccewxtvvAG9Xo/C
      wkJ88MEHmDdvHgDg1VdfxYsvvojly5dDr9ejvr6+wTKDgoIwdepUxMTE4Ny5c/jjH//Y5mKT
      kpKwbNkyxMbG4rnnnsO2bduanHa3fv364dChQ6itrUVeXh7Onz+P4ODgZteRmZmJjz/+GGlp
      aXB2dkZUVFSDx8W/r5TJzMzEsWPH0L9/fwDAc889h/Xr1+P69euYOHFio+Xe2Wk3ty3kcjkG
      DBiAN998EydOnMCRI0caLaNv3764evUqMjMzodPpsH//foSEhLS43UaNGoVNmzZh06ZNsLOz
      M01v6jWTy+V45JFHsGHDBgDAhg0b8MgjjzQZyHdkZWVh1qxZWLBgAQ4cOIDp06e3WBMRPQCa
      OizQ6XTi+eefF1ZWVkKtVovg4GAhxO2uhN69ewtHR0eh1WrFjBkzRHV1tRBCCAcHBwHA9O+X
      3QApKSkiMDBQeHp6CldXV/GHP/xBCNGwCyggIECcO3dOCCHE2LFjxY4dO0RJSYmpC2jz5s3C
      xcVFhISECFdXVxEREdHkNCGECA0NFUeOHBH19fVi6tSpomvXrsLBwUG89tprQojG3Tmenp4i
      Li5OLFu2TLi4uIigoCAREBDQoC89Ojpa+Pj4CA8PD6HRaMSqVatMj+n1etGtW7cG0+6YPHly
      g3MqzW2La9euiccff1yMHz9ezJgxQ8ydO7dBW4S4fZ7A3t5eeHh4iLFjx4rq6upm29KS5l6z
      ixcvCldXV+Hg4CBcXV3FxYsXhRBCDBs2TGg0GiGXy4VSqRQajUZkZmaKX//618LJyUnY2tqK
      kSNHtvmKLSLqGDIhmr9gv6qqCpWVlXB1dTV9AjQajUhLS4NWq4WXl1dbwwZFRUWwtbWFtbX1
      fQVWbW0t8vPz0bVrV9Mympr2y/XeuHEDcrm8Vd0TFRUVKC0thZeXV4NP7kajEQBQXV0NmUzW
      oFukoqICffv2xYEDB9C3b98W19HUtoiOjka/fv0gl8sxe/ZsBAcH47333ms0b2lpKYqKihAQ
      EACZTNbiuu5HTU0NsrKy4Ovr2+JrJYRAVlYWjEYj/Pz8LFYTEZnXPQOAWufAgQOYO3culi5d
      ijVr1tz3cl566SV888030Ol0GDFiBDZv3gw3NzczVkpE9B8MADMQQsBoNEKhUHR0KURErcYA
      ICKSKN4MjohIohgAREQSxQAgIpKoByYA7lxiSURE7eOBCQCeiyYial8PTAAQEVH7YgAQEUkU
      A4CISKIYAEREEsUAICKSKAYAEZFEKVt+SserLWw8gteDSuPq0tElEBG1SqcIgLomhnB8UDEA
      iKizYBcQEZFEMQCIiCSKAUBEJFEMACIiiWIAEBFJFAOAiEiiGABERBLFACAikigGABGRRDEA
      iIgkigFARCRRDAAiIoliABARSRQDgIhIohgAREQSxQAgIpIoBgARkUQxAIiIJIoBQEQkUQwA
      IiKJYgAQEUkUA4CISKIYAEREEsUAICKSKAYAEZFEmT0AUlNTcfLkSZSUlAAAEhMTcfnyZQDA
      zZs3AQDFxcWoqakx96qJiKgNzB4AVlZWCAsLw/Hjx3Hjxg2UlpZCoVAgISEBly9fhk6nw/Hj
      x6HRaMy9aiIiagOZEEKYc4E3btxATEwMfHx8UFtbiwEDBsDa2hqHDx9GVVUVqqurMX36dNjZ
      2cFgMMBoNAIADAYDZDJZk8usTc8wZ4kWpfH36+gSiIhaRWnuBXp4eGD06NE4fvw4vLy8UFtb
      CysrKygUCmi1Wnh7eyMnJwdBQUFQKBRQKBQAALlcbvr5l2rNXaQFqdXqji6BiKhVzNoFpNPp
      cOjQISQmJkKhUCAwMBBHjhzB3r17ERISArlcjrCwMGRlZZnOERARUccwexeQ0WhEXV0dNBoN
      ZDIZ9Ho9hBCwsrK653wGg6HZI4Dya4nmLNGiHAL7dHQJREStYvYuILlcDmtr6/+sQGn2VRAR
      kRnwewBERBLFACAikigGABGRRDEAiIgkigFARCRRDAAiIoliABARSRQDgIhIohgAREQSxQAg
      IpIoBgARkUQxAIiIJKpVAVBUXISi4iJL10JERO2oVQEQHR2N6OhoS9dCRETtqE1dQDwSICJ6
      eLQpAHgkQET08Livk8Cno0/jdPRpc9dCRETtqFXDdTk7O1u6DiIiametCoARw0dYug4iImpn
      /B4AEZFEtWnEdiEEamtrb8+oVMLKysoiRRERkeW1KQDWr18PmUwGuVyOgQMHYuTIkZaqi4iI
      LKxNAdClSxc88cQTsLKyglLZplmJiOgB06a9uK+vL7799lsAwIABAzBiBE8OExF1Vm06Cdy7
      d2/U1NSgrq4OvXr1slRNRETUDtoUAFu3bsWyZcuwePFibNmyxVI1ERFRO2hTF5Cnpye2bdsG
      nU4HX19fS9VERETtQCaEEG2ZITs7GwqFAl5eXmYtxGAwQKFQNPlY+bVEs67LkhwC+3R0CURE
      rdLqI4AdO3bA1tYWcXFxAIChQ4di7NixlqqLiIgsrE1HANevX4e7uzv279+PYcOGwdXV1WyF
      8AiAiKh9tekk8N69e3HlyhUYDAaEh4dbqiYiImoHbQoANzc3bNu2DSNGjIBWq7VUTURE1A7a
      1AVUUFAAZ2dnREVFYeDAgXB0dDRbIewCIiJqX206AggPD0dCQgIKCwvx448/WqomIiJqB20K
      AEdHR2zevBnjxo3jnUCJiDq5VncBVVRUQKVSQa/Xw2g0QqVSQaPRNHqe0WhESUkJHB0doVAo
      UFVVBYPBAHt7e+h0OlhZWUGv10MmkzXo8mEXEBFR+2r19wCio6OhUqlw7do1AED//v2bvBlc
      REQEXFxccPLkSYwbNw5Hjx6FWq1GaGgoEhISMGHCBOzZswdTp05tdodPRESW16aTwKmpqbhw
      4QKA2zeGCw0NbfJ55eXlOHHiBFxdXdGnTx/Y2tri2LFjqK+vh7W1Nfz9/dGtWzcYjUbcWb1O
      p4NMJmtyebXpGW1tV4fR+Pt1dAlERK3SpnsB/fTTT5g5cybkcjkcHByafE5aWhquXbuGyZMn
      IyYmBgqFAnK5HEII6PV6lJaWwtrautF8VlZWzR4R1LalyA6mVqs7ugQiolZp00lgd3d3hIeH
      Y9euXYiPj2/yOSdPnsSAAQNQUlKCHj164OzZszh37hy6d+8Oa2trzJgxA1FRUaivr4dcLodC
      oWBXEBFRB2jTEUBxcTGWLVsGuVwOubzp7Bg+fDgqKythZWUFf39/1NfXQ6fTwd/fH87OzpDL
      5XjsscdQV1cHlUpllkYQEVHbtekcwMaNG1FQUACFQoEhQ4ZgzJgxZiuEVwEREbWvNgWA0WjE
      lStX4O7uDqVSCWdnZ7MVwgAgImpfbToHsGnTJly8eBF5eXm8GRwRUSfXpgAwGAxwdnZGQkJC
      s5dsEhFR59CmAFiwYAGUSiW6dOmC+fPnW6omIiJqB20eEtJSeA6AiKh9tfoI4NKlS/jwww9R
      XFwMIQQOHjxoybqIiMjCWh0Ahw4dwsKFC/HJJ5/AYDAgKSnJknUREZGFtToAVCoVFAoFnnrq
      KaxZs8aSNRERUTto9TmAmpoaAIBGo0FFRQWqqqrg6elptkJ4DoCIqH21+lYQly9fRnh4OKyt
      rVFbW4slS5ZYsi4iIrKwVgdAZGQk1qxZA7lcjpqaGvzzn//EypUrLVkbERFZUKvPASiVSly6
      dAkVFRU4fvw4XF1dLVkXERFZWJvOAezatQt5eXno3bs3pkyZ0uwdQe8HzwEQEbWvVncB7d27
      F7Nnz4ZMJsOtW7dw6NAhTJkyxZK1ERGRBbX6I3xKSorpZysrK9PYwERE1Dm1+ghg9OjRePPN
      N+Hj44P09HQ899xzlqyLiIgsrE33Aqqvr0dJSQlcXV3NPowjzwEQEbWvNg0JqVKp4O7ubqla
      iIioHZnvMh4iIupUGABERBLFACAikigGABGRRDEAiIgkigFARCRRDAAiIoliABARSRQDgIhI
      ohgAREQSxQAgIpKoNt0LiCynpr6+o0toNWuVqqNLICIzYAA8IHJLSzq6hFbr0ZU3BCR6GLAL
      iIhIohgAREQSxQAgIpIoBgARkURZJABqa2tNP1dVVaGiogIAoNPpAAB6vR4Gg8ESqyYiolYy
      ewCcOHEC3333HQCgvLwcEREROHXqFHJzcxEVFQUhBPbs2QO9Xm/uVRMRURuY/TLQUaNGof7f
      17QnJiZi3LhxsLW1xbFjx6DT6RAVFYWBAwdCrVbDaDTizpj0Op3uoQiFurq6ji7B4qTQRiIp
      MHsAyGQy088GgwEKhQJyuRxCCOj1epSWlsLa2rrRfFZWVlAoFE0us7bJqQ8mtVrd0SVYnBTa
      SCQFZg+A06dPIy0tDWq1GoGBgTh+/DiUSiWCgoKQmJiI8ePHIyIiAoMHD4aTk5NpPp4TICJq
      XzJxpw/GQvR6PYQQsLKyuufz7hwtNKX8WqIlSrMIh8A+9zVfWkG+mSuxHH4TmOjhYPFbQSiV
      vNsEEdGDiN8DICKSKAYAEZFEMQCIiCSKAUBEJFEMACIiiWIAEBFJFAOAiEiiGABERBLFACAi
      kigGABGRRPE+DURmlF2Yier66o4uo1W6ufhCq7bp6DKoA/EIgIhIongEQO0m+fxJVJYWdXQZ
      rdJz0CjYObl0dBlEFsUAoHaTcv4k8tM7x629Pfz7MADooccuICIiiWIAEBFJFAOAiEiiGABE
      RBLFACAikigGABGRRDEAiIgkit8DICL6hZqCFBjqKju6jFaxdguAQmN3X/PyCICISKJ4BEBE
      baKrLYXRqOvoMlrFSt0FcoWqo8t4YDEAiKhNdHVlMOg6xx1PFVY2DIB7YBcQEZFEMQCIiCSK
      AUBEJFEMACIiiWIAEBFJFAOAiEiiLBoA9fX1CA8PR3h4OG7duoUzZ84AAI4fP47q6s5xGRkR
      0cOosPSWZb8HEB8fj+HDh8Pe3h7nzp2DTqdDamoqbGxsoNVqLblqIiJqgUWPAKqqqmBvbw9r
      a2vU19ejoqICx44dQ3BwsCVXS0RErWDRAPDw8EBGRgZu3LgBJycn2NvbY86cOdi/fz+EEJZc
      NRERtcCiAeDv74+ysjKkpqZiwIAB8Pf3h42NDcLCwlBaWmrJVRMRUQsseg5AJpNhxIgRpt/9
      /f0BAN7e3pZcLRERtYJMdGBfjMFggNFoBAAIISCTyZp8nr6q81wxpLS5v5PbNfX1Zq7EcqxV
      93dzreLcbNTXdI7X0smzG9TWbX8ta+trYRQGC1RkfmorDRRyRZvnM+hrIITRAhWZn0Khgex+
      2lhfDRg7x+soV1lDJm/7Z/l6nb5jA+BuOp0OVlZWHV2GRUmhjR+cutrRJViUp60Gvw72g0LR
      9p1KZyKFv1W2kV8EIyKSrAcmAB72JAak0caHnVyueOg//QPS+FtlGx+gAOgotbW1pvMQDyNz
      9fAlJiaaZTkkDXV1ddDr9e2yLp1OB52ufUcoS09PR/09zttZqmfd3G196APgq6++gpOTE1JT
      U5t8/KWXXkJKSko7V3Xb2bNnsXLlSgBAUVERZs2aBYPBgPnz52Po0KEYOHAgrl27BuDe7UhL
      S2v0x5iZmYlx48YhLCwMK1as+K9rnT9//n+9jOZc2PkDbqbeDpgD7/8ZN+IvAQAOf7wWxlac
      iLu890eL1dZW//rXvxASEoKRI0fiV7/6Vavm+dvf/obi4uIG0wIDAzFy5EiMHDkSP/30kyVK
      bbNHHnnkno+/9dZbpp//+te/4uTJk/d8/uHDh+Hk5ITIyMj/qq5NmzZh+/bt/9Uybt26BQ8P
      D6xevbpVz3/99deRk5PTaHpxcTGmT5+OsLAwPP300/ddz93b8m7maOvdHvohIXfu3IkVK1Zg
      165dePnll3HmzBl8//338PDwwGuvvYbRo0fDzc0NJ0+exPbt22Fvb49XX30VdnZ2Fq/tzrej
      AcBoNKKsrAxpaWkoKCjA2bNnUVVVBYPB0GQ77rZ27Vq888478PT0NE1buXIlVq5cienTp6O6
      uhpZWVn47LPPUF1djWXLlsHBwQFbt25Fbm4ubGxs8MYbb+DUqVMNtoG1tTU+/fRT5OTkmO7d
      tHnzZkRHRyMkJARLly41y3ZwcPdEYXoKbF27QmGlRmFaMly6BwC43eWSfuYEijJT4T9sNFy6
      90BmbDSKMlLh6t8LcrkCadHHAQA9ho9BVUkxMs+fhltAH3QPG46sC2fh4O6J/KR49Bk3xSz1
      3kt1dTVeeuklPPvss6Zp69evR1JSEsaMGYPZs2dj//792LdvH4KCgjB06FB89tlnyMjIwJNP
      PomxY8cCABQKBU6dOmVaxp49e9CvXz84OTnhp59+wpw5c7Bp0ya4u7vD2toa1tbW+PrrrxEa
      GoqlS5ciIiICSUlJSEpKwqJFi9C/f3/s2rULu3fvxqxZszBlStu3xd0hVVxcjI8//hjFxcV4
      5plnUFFRgS+//BJCCMyaNQuDBw9Gt27dcPDgQeTk5CA2NhYzZ87ExIkTTcvYuXMnVq5cifDw
      cEyYMAEHDx5EcnIy4uPjMWHCBJw6dQqhoaH43e9+h+PHj2Pz5s0YO3Ys5s2bh88++wyjRo3C
      mTNn0LdvX6jVagghsHHjRsTExGDx4sWoqqpq9Xv6wIEDePbZZ7Fv3z6sXr0aN2/exIkTJ1BV
      VYXg4GDEx8c3+rvfsGEDbt26hZdffhm+vr4AgDVr1mDSpEl44YUXGrxnoqKiTNv9008/xfPP
      P48rV66gtLQUarUacXFxuHz5MkaPHg1nZ+cG2zIxMRFBQUGIiIjAiBEjoFarYTAYsH79eiQn
      J2PFihXw8/PDBx98gPz8fMybNw9Dhgxp1Wv6UB8B3Lp1C6WlpVi0aBF2794NAFi+fDnmzp2L
      0NBQCCHw448/orS0FDKZDIsXL4Zer8c333zTYTV3794dADBmzBj8/PPPsLOza7IdAJCbm4uV
      K1fi7NmzePvtt7Fx40bTY1evXjV9AtVqtaitrcXjjz+O8ePH409/+hOKiorwzTffYPr06di1
      axdycnIabYPPP/8cCQkJWLBgAZTK258VXFxc8NJLL2HHjh2Ij483S5td/HuiKDMNRRmp6DF8
      NMrzc1GclQYXvwAUpicjP+kqgiZOQ+yOzdDV1iD+wM/o9chEaGzt4OTrB5VWC+/QMCisrHBx
      1xb0nfQ/yDx/GrcKC5ATdx4xW7+G1tHZLLW2xjfffIPFixfjz3/+MwDA19cXL774ItasWYOK
      igosX74cixcvhp+fH7p37w4PDw9MnToVvXv3Ni2jtLQUixcvxuLFixETE2PakVZXV2PLli3Q
      6XT405/+hG+//RaOjo5YunQp/vCHP+DcuXMIDw9HZGQkqqur8eSTT+LZZ59FZmYm1q9fj7ff
      fhurV682ffC4X3V1dRg3bhwWLFiA5cuXIygoCF26dMGTTz6Jbt264fDhw8jMzERkZCTS09Mx
      ffp0vPfee6b5jUYjoqOjsWrVKkRFRUEIgcjISJSUlKB///749NNP8fTTT+O9995DVVUVVq1a
      hTfffBPffvstUlJSsHHjRrzyyivo3r07zp8/j0uXLuHHH39EZGQkXnjhBdjY2LTpPb1z507M
      nj0brq6uSEtLQ1FREV544QVER0fD1dW1yb/7oKAgDB482HQUDwDR0dGYM2cOgNvvu+joaPzw
      ww9YuXIl3nrrLeTl5eHLL78EAFy7dg3R0dGIjY3FmTNnMHfuXKxevbrRtvzpp5/w3HPPwdfX
      19TWH374Afn5+Xj++efxhz/8AQcPHsTVq1exZMkSyOWt360/1EcA+/fvx82bN7Fq1SpcuHAB
      hYWFePHFF7Fq1Sr4+vpi3LhxpuceO3YMV69eRXFxcbt8+gcApVJp6ifV6XRQKBRQqVSIiIhA
      XFwcVqxYYbqP0i/bceePctmyZbhx4waeffZZ+Pn5mZatUqlQVVUFW1tbALe7iT777DM4Ojqi
      vLwcANCnTx+MGDECvr6+0Ov1jbZBamoqnn/+efTr1w8qlcr0RtJqtSgoKDAt579l7+aByqKb
      KEpPQc9HJuD65QsoTEuBq19PlOXdQFVpMeIj9gAyGQAZvPoNxJnvvoBXcH907RUEpUoNJ29f
      VBTkoa6qElcP7oLRaERV6e1PrINmzodTN797F2FGkyZNwq9//WuoVCqUlZVh48aNcHNzQ0VF
      BSorK/H8889j0aJFGDx4MCZNmoQuXbogODgYHh4epmXY2trilVdeAYAG0+/m7u6O77//Hikp
      KQgKCkJoaChmzpyJCxcuAAAGDx6MCRMmwGAwIDExESUlJfjLX/4ClUqF3Nxc2Nvb33cbc3Nz
      8f7778Pb29vUfWJjY4OBAwc2eu6ECRMwZMgQrFu3zjTt/PnzyMvLw+9//3vk5+fj4sWLAIBR
      o0bB3t4ely5dwrBhw2BnZ4ecnBwUFxfj3XffhV6vR3Z2NoDbn6xdXFxM3aQXLgccqwYAABzk
      SURBVFzA/PnzERQUBADYvn17q97T9fX1OHDgAORyObKzs7Fr1y5MmTIFgwYNwj//+U/o9Xq8
      +uqrjf7uhw0bBl9fX6xfv960LHt7exQVFcHFxQUAcPnyZcyYMQNBQUEYPXo0kpKSmqxh5MiR
      GDFiBDQaTZPb8uOPP0ZYWBg++eQTALc/4F2+fBkff/wx6urqMGLECHz33XdYtGgRXn/99RZe
      vf94qAMgPDwc//jHPxAYGAhvb2/s3r3bdKj8wgsvIDk52fTcbdu2YfPmzdiwYUO71dezZ0+c
      OnUKJ06cwP79+xEaGoqEhATs27cPI0eOhIuLC4QQTbZj4cKFUKlU8Pf3R0hICHr06AFXV1fT
      sufNm4clS5ZgyZIlKC8vx+7du/H0009DCIFNmzY1Wc8vt4G/vz+2b9+O2tpaVFdX4+bNm8jI
      yMDnn3+O5cuXm207yGQy2Ll2RUFqIgY8MQddvHyQHn0cfcZPQUVBHqw01ugzbgrKbmTDaNDD
      2ac7/IeMwokvP0bfSf8DfX09CjNSYOvsCiu1BgEjx0FXUwNbp9tvQpXWBgBQkHJ7R2Hr7Ir8
      5AT0GDbabG24W0lJCTIzM6FWq6FUKqFQKPDcc8/h9OnTAABHR0d8++23mDVrFioqKmBra4vI
      yEhMmjTJ1I1nMBiQmZkJALC2toZSqcTZs2dNOzsA6NKlC+RyOXx8fJCQkICLFy9i+/btePLJ
      JxEdHY3k5GTTzqhPnz7QaDRYvnw5MjMzG/yttFZtbS32798PtVqNM2fOYMyYMQgNDUV0dLSp
      zkOHDmHAgAEtLis8PBz/+7//i0mTJmHYsGEIDw9v9rk+Pj6wtbXFkiVLUFFRYTpKdnR0bPC8
      IUOGYOPGjXB3d4darW71e/rYsWOYOXMm/vznP6OgoAAvv/wypkyZgi5dugBAs3/38fHx2Llz
      JwYNGmSa9swzz2D58uV44403UFBQgP79++Ptt9/GyJEjERUVhVdeeQUymQyRkZGIiopCt27d
      mqzpl9vyl20NCQlBYWEhXn75ZVy9ehXZ2dlYtmwZKisr8fnnn2P69On3bPMditWtPevRCeXl
      5eHpp5+Gg4MD/P39UVlZCYPBgG3btplO0slkMvTt2xe9evXCli1bEBYWhv79+5v69CxJq9Ui
      JCQEW7ZsgbOzM1577TV06dIF8fHxOHHihKnPOD8/v1E77u4uGD16NGxsbBose9SoUaisrMSR
      I0cQEBCAadOmYfv27XB3d8eAAQMQGhoKrVaLwMBAAGhyGzzxxBM4e/YscnNz8cgjj2DChAmo
      rKzEyZMnMWHCBAwcOBAODg4N1hudc/O+toXazh5d3D3h6O0Lta0dNLb2cO8dBBtHZ8iVVrhx
      5QKsNNZw7tYd+ckJyLt2Fb3HPAo7166wc3FDTlwsXHx7oGuvQGRfPAddbTVc/XtBYWUFBw8v
      KKxUqC4rgQwyqLQ2qC4tgaNX02++e7FXqxDc1bHZx2UyGXJycpCTk4ObN2+a+nATExMxceJE
      hIWF4eLFi9i1axfmzp2LwYMHIzg4GLt374aTk5PpdinV1dXIyMhATk4O3N3dMXLkSBw8eBBd
      u3bFoEGD0K9fPygUCgwYMABWVlYYOHAgNmzYgKFDh2LevHk4fPgwkpKSUFNTg7Vr18LHxwe+
      vr7YsWMHhBAYNmxYmy+DrKmpQVZWFkpKSvCb3/wG+/btg5WVFQYPHoywsDAEBwdjx44dCAgI
      gIeHB3r06AFHR0f4+/vDycnJVC8AZGdn46mnnoKrqysCAgJQVFSE0NBQ+Pv7w9HREfb29ujV
      qxcAYPjw4QgLC8PWrVtRVlaGUaNGwdraGgMHDoRMJoNMJoOXlxfGjh0LvV6PAwcOICQkBIMH
      D27Vezo7Oxvjxo1Dz5494enpiVu3bmHIkCGwsbFBYGAg7OzsGv3dd+3aFZcuXYLRaMSbb74J
      tVoN4PaO2cHBAfv27YO7uzsee+wxKBQK7NixA8uXL0e/fv3g7e2NvXv3on///hg0aBC6desG
      T09P05HeL7elu7s7goKCYG1tbWrrxIkTUVRUhAMHDsDb2xt9+vTB1q1bkZCQgNdff910BNKS
      B+abwPRweNi/Cextb4PZIe3XnXS/Xn31VUyePBkTJkzo6FLoAfZQdwERSdX/+3//r6NLoE7g
      ob4KiIiImscAICKSKAYAEZFE8SQwEZFE8QiAiEiiGABERBLFACAikigGABGRRDEAiIgkqtE3
      gYUQiI2NRU5ODnx8fDBw4EDI5XJkZGSgoKAACoUCPj4+cHd3N80TFxeHmpoaKBQKBAQENLpx
      0YEDB1BSUoK5c+davkX/Vl5ejh07dmDevHnQaDRmXXZVVRWOHz+Ouro6jBo1ynTfjZqaGuzd
      uxcAMG3aNFhbW5vmqa2tRUxMTINBNYqLixEZGQlra2tMnTrVdMtlIqJ2Ie5SXl4uxo4dK5yd
      ncWYMWOEl5eXeOmll4QQQixdulS4urqKnj17CqVSKebMmSNqamqEEEIEBgYKf39/ERgYKNRq
      tfjoo4/uXqxYu3atWLx4sWhPOTk5Yvz48aKkpMSsy01MTBSenp5i0KBBYtSoUcLR0VFkZGQI
      nU4nhg4dKvr27Sv69u0rhg4dKnQ6nTAYDOKLL74QPj4+IiAgwLScjIwM4ebmJiZPniz8/PzE
      tGnThNFoNGutRET30qAL6N1330VZWRlSUlJw7NgxZGVlYdmyZabHn332WSQnJyM5ORkxMTEN
      7u/96aefIiEhATt37sQbb7zRaJzduro6fPXVV/j73/+O0tJS5ObmNhjaLDU1FREREQ3m2bp1
      K6qrq7Fnzx4kJibCaDRi48aNeOuttxAbG2t63s2bN/H555/jq6++wpEjR1BRUQFXV1csXLjQ
      dEvX9PR0vPPOO/jkk09QVlYG4D8DMvz8889Yt24dEhISWgxMnU6Hzz//HOfPn8eJEycQEhKC
      w4cPY9++fcjOzsa5c+dw7tw5ZGdnY9++fSgvL8cXX3yBhQsXNljOl19+iV/96lc4cOAAzp8/
      j+PHj5tuq0tE1B4aBMCePXuwatUqODo6Ijs7G9nZ2Y1u9wsAfn5+eO2117Br164mH6utrW00
      Ru3u3btx6dIlfP/995g6dSqsra3x29/+1jQQxNq1axEVFdVgnt/+9rd48cUXsXDhQqSlpeGl
      l17Cpk2boNVqMXnyZFy7dg2FhYXo168f9uzZgytXrmDq1KnIz89HVVUV5s+fDyEEbty4gcGD
      ByM3NxdHjhzBI488Ap1Oh127dmHChAnYtGkTjh49iqeeeqrFDRYcHIxp06YBAI4cOYILFy6g
      f//+iI2Nxfjx46HVaqHVajF+/HjExsbC0dERZ86caXRXxqqqKqhUKgCAk5MTxo4di/Pnz7e4
      fiIic2nQ6VxSUgJvb28AwMyZM5GWloZJkyZhy5YtjWbs1q1bgzFCv//+exw/fhw7d+7EzJkz
      G/W7z5o1C5988gkqKirg5uaGW7duYfbs2diwYQM++OADhIeHmwbMuFt+fj4yMjJgbW2Np556
      CgkJCfD29kZeXh62bdsGV1dXBAcH4+effwYAfPfdd42W8d133+HRRx/FZ599BqPRiD59+uD4
      8dvjyC5YsAD/+te/kJiYiJEjRzaYb8eOHaisrESfPn0wbNgw03S9Xo+33noL//jHP/DZZ58h
      LCwMW7ZsaRCW9vb2qKqqAnD7HvG/9PTTT2Ps2LEoKCgAABw9erTR+omILKlBAHh6eiI+Ph5j
      xoxBTEwMPvroI5w5c6bJGePi4hqMZlNbWwulUol33nkHjz/+eLMrtLe3h1arRXV1NZYuXYrJ
      kydj/Pjx6NWrV4NBTu749NNPYWNjg8rKStTU1ODJJ580jXk5c+ZMFBcXNxgKsSmFhYWmUYTk
      cjl8fX1RVFTU4DlNjaMZHR2NoqIiKBQKUwAIITBv3jykpKTg/PnzpkErnJycGnyCz8/PR1hY
      WLM1DR06FBcvXsTRo0fh5uaG9PT0BoO6ExFZWoMAmDt3Lt577z0MHz4cAwYMgE6na/Dk+vp6
      FBcXIyoqCuvWrcMHH3xgemzhwoWYPHlysysS/77l0M8//wyj0Qg/Pz+o1Wr4+/vjhRdewJ/+
      9KemC/z3lTG2trbw8fHBG2+8gZkzZ6KqqgpZWVnIzMzERx99hOnTp6O2ttb0qftu/fr1w9/+
      9jesXr0apaWlOH/+PD766CNkZGTcc+Pc3b47jh8/joiICFy7dg1dunRBXV0dlEolRo8ejXXr
      1iErKwsAcPjw4QaDRf9SWVkZnJycsHTpUkRERCA5ORmPPvroPeshIjKru88I19fXi6VLlwor
      KythY2MjtFqtWLdunRDi9lVAAIRcLhd+fn5i/fr1pqtWgoKCxMGDB5s907x27Vrh5+cnPD09
      hb29vdi6davpsS+++EKoVCpRVFTUaD6NRiNyc3NNv+/Zs0c4OzsLPz8/4erqKjZt2iSMRqNY
      u3atGDVqlFi6dKmwtbUVSUlJoqSkRAAQBoNB1NfXi6lTp4quXbsKBwcH8dprr5nqunN1UlJS
      knBycmrxrPmHH34oADT4d2cbLVq0SKjVaqFWq8WiRYuEEELs3r1baDQaoVKpBACh0WjEokWL
      xMWLF4VWqxUeHh5Cq9WKr7/+usV1ExGZU5N3A62urkZ5eTnc3NygUCj+65AxGAxQKBQoKSmB
      vb19g+vdP/zwQ5w9exZbt25t1bKMRiNu3rwJFxcXKJVK5ObmoqysDIGBgTh16hQmTJiA4uJi
      2NraNphP/PtksFwut2hXS05ODoDbA1m35NatW7h+/Tq8vb1hZ2dnsZqIiJrSobeDnjhxIrKy
      srB//34EBATc1zKuXr2KWbNmIScnB46OjnjnnXcaXXJJRESNdWgA6PV6fvuViKiDcEAYIiKJ
      4s3giIgkigFARCRRDAAiIol6oALglzeQIyIiy3mgAoDno4mI2s8DFQBERNR+GABERBLFACAi
      kigGABGRRDEAiIgkqtPciEcYjIDoBJeJyuWQNTG4DBHRg6bTBED5jz+i4qedHV1Gi7osmAf7
      f48ZTET0IONHVSIiiWIAEBFJFAOAiEiiGABERBJltgAwGo3Q6/Wm+/kYDAbTzd2EEKbH7vy7
      Mw8REXUMs1wFZDAYEBERAZVKBa1Wi169euHEiRMwGo147LHHEBcXh4qKCqhUKvTt2xc3b96E
      u7s7EhISMHLkSHOUQEREbWSWAFAoFHj00UdRUlKCuLg4XLp0CVOmTEFxcTESExNRUlKCyZMn
      4+DBgzAYDKiqqsLRo0cxffp0AP+5C+idI4WmdJajBaPB2GwbiIgeJGb7HkBmZiZiY2PRu3dv
      3Lx5EyqVCra2tsjOzoZCoYBMJoNCoQAAXL58Gd7e3qYB4e/sMIUQpuf8kkwmM1epFiWTyTpN
      rUQkbWYJgNraWri6uuKJJ57A/v374eXlhZycHBQWFsLT0xNxcXGoq6tDTU0NAGDgwIGorq5G
      eno6evToASsrKwC3u5I6fQDIZc22gYjoQWKWAJDJZLhy5Qp0Oh2GDBkCNzc3REdHQ6PRwMfH
      B1qtFqdOncKgQYNga2sLT09PuLq6IikpCUKITrNzJyJ6mMjEAzQM172OAMq2beetIIiIzIjf
      AyAikigGABGRRDEAiIgkigFARCRRDAAiIoliABARSRQDgIhIohgAREQSxQAgIpIoBgARkUQx
      AIiIJIoBQEQkUQwAIiKJYgAQEUkUA4CISKIYAEREEsUAICKSKAYAEZFEmWVMYCEErl27hvz8
      fPTp0wdOTk6IiYmBQqFASEgI6urqcOXKFfTq1QuOjo6oqqqCs7Mz0tLS0LNnT3OUQEREbWSW
      IwAhBJRKJUaMGIELFy4gNzcXLi4uGDhwIGxsbBAdHY0RI0bg/PnzqKysxI0bN3Dy5ElotVpz
      rJ6IiO6DWY4A5HI5evTogRMnTsDPzw96vR4ZGRnIycnBmDFjoNFooFarTTv8ixcvwtvbG56e
      ngCA+vp6ALeDRK/XN7kOg8FgjlItTq83oK6urqPLICJqkdm6gPbu3YuwsDB4eHhACIFevXrh
      +vXriI+Ph8FggBDCtBMPCQlBdnY26urqoNFooFKpANzeySsUiibXUdPM9AeNUqmAWq3u6DKI
      iFpklgCoqalBYWEhkpKSkJ+fDxsbG+Tk5KCyshJjx46FwWBAZGQktFotFAoFtFotHn30UZw6
      dQrjx4+HTCYzRxlERNQGMiGEsMSCDQYDZDIZ5PLbpxl0Oh2USuU9d/b3OgIo27YdFT/ttESp
      ZtVlwTzYT5vW0WUQEbXILEcATfnljtzKyspSqyIiovvA7wEQEUkUA4CISKIYAEREEsUAICKS
      KAYAEZFEMQCIiCSKAUBEJFEMACIiiWIAEBFJFAOAiEiiGABERBLFACAikigGABGRRDEAiIgk
      igFARCRRDAAiIoliABARSZTZAsBgMKCsrAx3RpisqqpCbW0tgNuDxpeWlsJoNMJoNJoGh9fp
      dOZaPRERtZFZhoQ0Go3Yv38/nJ2dUVlZib59++LSpUuora3FpEmTEBMTA61Wi5KSEoSFhSEv
      Lw/Ozs7IysrCiBEjzFECERG1kVkCQCaTYdq0aSgpKUFsbCwSEhIwadIklJaWIikpCfX19Rg7
      diwOHTpkOhpIS0vDjBkzANwOkDv/3zk6+KXmpj9oDHoD6uvrO7oMIqIWmS0A4uPjcf36dUyY
      MAFHjx6FQqGASqWCXq+HXC6HTCaDXH67xyk/Px92dnaQyWQAYOo2ApofPP6Xg8w/qBQKRbNt
      ICJ6kJglAHQ6HS5cuIBJkybh1q1b8PLywuXLl1FSUoKgoCDExMSgsLAQVVVVAIDevXtDqVQi
      Li4O/fv3b7BzvxMKnZbsIWgDEUmCWQIAAPr374+ioiJotVoEBgYiMTERvr6+cHNzw/jx45GQ
      kIBx48ZBo9FAo9HAzs4Oubm5EEJwh0lE1AHMEgBWVlYICQlpMC0wMND0s1arRVhYmOl3tVoN
      APDy8jLH6omI6D7wewBERBLFACAikigGABGRRDEAiIgkigFARCRRrQoAnU7X4MtaRETU+bV4
      Geju3btx6dIlKJVKvP7667xmn4joIdHiEUBaWhrefPNNODk5me7uSUREnV+LAWAwGPDee+8h
      Pj4e77//PiIjI9ujLiIisrAWu4BWrlyJsrIy5Obmws/PD9bW1u1RFxERWViLRwCnT5/GRx99
      hKtXr2L16tXIyspqj7qIiMjCWjwCOHXqFN5++23I5XJMmTIFP/zwA5577rn2qI2IiCyoxQAo
      KyvDe++9B5lMBqPRCHt7+/aoi4iILKzFAFizZk171EFERO2sxXMAGzduhMFgwB//+EesXbsW
      u3btao+6iIjIwloMgJKSEigUCkyaNAmvv/460tPT26MuIiKysBYDwNPTE5s3b4azszM+/PBD
      DBo0qD3qIiIiC2vxHMCcOXMQFxeHrKwszJgxAwEBAe1RFxERWViLASCTydC/f3/079//ns+7
      ceMGUlNTMWbMGFRVVSEqKgoajQaDBg1CaWkpkpKS0K1bN3h7e6OsrAzu7u6Ij49vcblERGQZ
      ZhsUvri4GPX19QCA3NxcBAYGonv37pDJZDhx4gSmTZuGffv2wdnZGcXFxYiPj8ewYcMaLafT
      33VUPARtICJJMFsA9OvXD4cPHwZwe5D4lJQUXLlyBePGjYNarYZMJoNKpQIAnDt3Dj169ECX
      Ll0AwBQc99pxGgwGc5VqUQaDwdQeIqIHmdkC4G5eXl7w9fVFfn4+kpOTodfrIYSAXq8HAAwZ
      MgTZ2dkoLy+Hg4ODKRgMBgMUCkWTy6xpZvqDRqFUQK1Wd3QZREQtMksA6PV6nD59GmVlZYiJ
      iYGjoyPS09NRX1+P8ePHw9raGgcPHoSbmxvUajXs7OwwZcoUnDt3DiNHjuQYA0REHUAmHqAO
      63sdAZRt246Kn3a2c0Vt12XBPNhPm9bRZRARtYhjAhMRSRQDgIhIohgAREQSxQAgIpIoBgAR
      kURZ5HsA1Hb5typQUlPd0WW0yNPOHl2stR1dBhGZAQPgAXHuejZOZWV0dBktmhUcisHe3Tq6
      DCIyA3YBERFJFAOAiEiiGABERBLFACAikigGABGRRDEAiIgkigFARCRR/B4AtYvCnHRUlhZ3
      dBktcvPtARsHp44ug6hdMACoXSScOozUC6c7uowWTViwDDYhDACSBnYBERFJFAOAiEiizBYA
      qampiIiIAADU1NRg3759OHjwIAwGA5KTk3Hw4EHExcWhvLwcmZmZqK2txfnz5821eiIiaiOz
      nQO4e2jh8+fPY9SoUSgsLERKSgrS0tLw2GOPYf/+/fDw8EBZWRni4+MxevToRssxGo3mKqlD
      CCHuqw0P0NDM93Tf7bNALZZwv+0j6ozMFgA9e/ZEVlYWAKC2thZ2dnaQyWS4evUqVCoVZDIZ
      rKysAAAxMTHw9/eHnZ0dAKC+vh7A7TefTCZrcvmd5U1pNBqh1+vva77O4H7bJzpJ+wwGw321
      j6gzsshVQNbW1igvL0dhYSGcnZ1RUlICIYRpRz948GDk5eWhqKgILi4uUKlUAG6/+RQKRZPL
      lMs7x+kKhUJhak9b5+sM7rd9neX1UyqV99U+os7ILAGg1+tx+vRpVFVVISYmBmFhYTh69CiU
      SiUmTJgAuVyOgwcPwtfXFxqNBo6OjggODkZsbCycnZ2b/dRPRESWY5YAUCqVjfrzp06davo5
      ICAAAQEBpt/t7e0BAEOHDjXH6omI6D50juNyIiIyOwYAEZFEMQCIiCSKAUBEJFEMACIiiWIA
      EBFJFAOAiEiiGABERBLFACAikigGABGRRDEAiIgkigFARCRRDAAiIoliABARSRQDgIhIohgA
      REQSZZEhIYmk5tKNWBRW3uzoMlo0yHsInGycO7oMekAwAIjM4HDSAVy4HtPRZbTI096LAUAm
      FukC0uv1SE5ORnJyMmpqalBbW4u4uDhUVlaivr4elZWVAICbNx/8T0xERA8rixwB5OXlobCw
      EL6+vpDL5Th8+DAGDRqEw4cPY8SIEcjNzYVcLodCoYCbm5slSiAiM9LduorKlP/t6DJaZOUw
      ELY9Xu3oMjoNiwRAWVkZKioqUFBQAE9PT1hZWcHd3R02NjYAgJSUFNja2mLKlCkAAJ1OBwAw
      Go3Q6/VNLtNgMFiiVLPT6w2oq6tr83ydp336+2uf0WiBasxPd5/tM3aW9ul09/f61ddC6Mst
      UJF5GXSV99U+qbJIAPTt2xe9e/dGamoq4uPjIYQA8J83iYuLC0pLSyGEgEwmg1KpND2uUCia
      XGZNM9MfNEqlAmq1us3zNdfuB41Sqby/9sk7xwVnVvfZPnlnaZ+V1X21T1enRK0F6jE3uVx+
      X+2TKov81aakpODixYtIT0+Hs7MzlEolYmJiYDAYIJPJ4OjoiGHDhuHYsWOmEJDJZJYohYiI
      mmGRI4BevXqhoqICwcHB0Gq1cHd3R0lJCQYMGAC5XA5HR0colUo4O/NqBCKijmKRAJDJZHBw
      cGjwu4uLi+n3O4fLPFQjIuo4naPjkoiIzI4BQEQkUQwAIiKJYgAQEUkU7wVERJJnLM2CPv1o
      R5fRIrlTDyj9HjHb8hgARCR5hqIU1B3/v44uo0XKwOlmDQB2ARERSRQDgIhIohgAREQSxXMA
      REQPucz8MsQm5TWazgAgInrIpV4vwTcH4xpNZxcQEZFEMQCIiCSqXQKguroa0dHRKC8vR11d
      HcrLb48sdOPGjfZYPRERNaFdAiAyMhJBQUE4cuQIysvLkZGRgdjYWFRXV7fH6omIqAntEgAa
      jQYODg6wtbUFAMTHx6OoqAgBAQHtsXoiImpCuwTAnbGA7/zv5+eHW7dudZqBtImIHkb/H0Xc
      hyzjuDATAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 10' width='384'>
      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
      OwoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dashboard 11' width='384'>
      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
      pycrVqwgKyuLdu3a6cyvbdu2XLp0iY8++ojPPvtM/iZVnjZr+fj48N5777FhwwbCwsLo3Lkz
      arWatLQ0LC0tSUpK0vkQaNCgAbt372bjxo16T1NkZmaiUqm4ffu2zkW+8rz3gHw9YuvWrUyb
      Ng13d3fFvlu+fDkxMTHY29tTt27dEtdeymJubk5+fj7z589n8uTJ8qmIsvrvvffeIyUlhU6d
      OqFSqcjPz5eHtWjRQn7vunTpwt9//82UKVNYvXo1P/zwA0OGDGHFihV8/fXXjB07lh49emBh
      YUF2djY5OTl8++23iu/X0qVL+eijj+S/9e0jpZEkqczlaJmamuLs7MyYMWNYt25dibvOHB0d
      qVq1Ks7OzvTp00fe9jIzMzEyMuLChQvyNQZ92316ejppaWnUr1+/1HYLT8Z4ZvGT0s+AJEny
      +fZKlSoBhR8Wubm5tG/fHnNzc7p06UL16tVp2rQpR44coVGjRjRv3pyaNWvStm1bVCqVPJ6b
      mxunT5/m5MmTfPjhh/Tu3ZtGjRqRnZ3NH3/8wdChQ2nZsiVOTk60bt0ad3d37OzsaNCgAQ8f
      PmTIkCGoVCp69uwpnzZxcnKiSpUqcpudnZ1JSEjAyMiIzp07K7ZDe2776NGjVKpUCXd3d6pX
      ry6PC9CoUSPatWvH4cOHSU9PZ9iwYTobtUqlwsnJiXr16skXOxs1asS0adPkvtI3DxsbG1JS
      UvDz8+PVV1+V59eiRQuaNm1Kz549iY+Px9LSkl69euHs7Ey/fv1KbbNKpcLMzIyuXbvSsWNH
      rK2t+eWXX2jQoAE9evTA3d2dxMREUlJS6Nu3L61atZL70M7OjpycHH7//Xc6d+5MrVq1aNy4
      Ma+88goqlQpra2v69euHJEn8/PPPuLu7Y2trS/fu3RXf+6J91KVLFypVqoSzszP5+fnExsYy
      aNAgQkJCqFmzZom+q1+/PomJiRw9epTBgwfj6+srt8He3l7uJ+0pGe1y6tati52dHSYmJjRt
      2pRjx47RuXNnHB0d6datG7179y7RfzVq1JC3iWrVqhEbG8vZs2eZMWMGbdq0keffqFEjJk2a
      RFBQEFWqVMHb25vk5GSuX79O7969ad++PW3atGH37t3UrVuXyMhIKleuLL9ma2uLi4sLHTt2
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard 2' width='384'>
      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
      WgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Dashboard 3' width='384'>
      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
      3G3bthESEqK9lwIgkVxi1OxpAtxwww0sWLCA1atX43K5tHlgD//85z+93g8bNoyFCxcSHBwM
      nO5FJicn+1yrZlphYeHFu4mLxJYtW7wa4rPxpz/9yeu9Tqer20KmDjxTRgUFBVraxo0bqays
      JCQkhOuuuw6TyURycjLHjh1j5cqV5y0Ans/4+uuvJyQkhBtuuAGAEydOkJaWRs+ePQF44403
      GD16NJmZmezYsYMdO3Ywffp0HnvsMV588UUfy7A333yTN998U3svBUAiuYTIz89n69atALRs
      2ZK0tDStt1dYWMjWrVu55pprvM7p06cPLVq0oLi4mO3bt7N27VpuueUWVqxYQWRkpNZIlJeX
      +1yvrKxM+91sNtfXbV0wkZGRXiJVWVl5xlHAoEGDvO7jbGax/qioqAC8n4enwe7WrRsHDx4E
      oHv37poAPProo+d1Dc/UUWpqKmlpaQDEx8eTl5fHypUrNQHo3LkzO3fuZP78+XzyySds3boV
      h8PBK6+8gsViYe7cuV7l9ujRw2v6SZqBSiSXEJ9++ukZzQife+45La/H9G/BggVaWm5urkhM
      TBSAeOmll4QQQjzyyCMCELGxscJms9V5PY+55KBBgwQg7rzzTr95w8PDfer92WefaeVUVVWd
      07126NBBAOKZZ57xOXYuZqC7d+8WQnibdB49evScrl3znH379mnpdrtdpKSkCEDcdtttWron
      zd/LbDaLioqKc34eR48ePeNn3L9//zrrfejQIdG/f38BiGbNmmnpnu/C/PnzvfLLRWCJ5BLC
      0zOMiIigdevW2suz8af2ImFtYmJiiIiIANzz54C2FlBQUMDHH3+s5XU4HPzrX/8CoE2bNto0
      hsdE9Mcff8RqtWr5PRYqXj3MywhVVfnb3/5GZmYmALfeeisABw4c0NKSk5O9PhdFUbDZbOdk
      kunBM5owmUxeZTVv3hxwWzJ5NgHOmTMHi8Windu+fXttHajmZ1MXcgpIIrlEqGkZMnv2bB56
      6CHt2FdffcVtt93Gjh07yM3NJSEhQTv26aefsnXrVqqqqtiyZYs2RdGjRw8ARowYQc+ePdm1
      axeTJ0/m4MGDpKSk8Pnnn7Njxw4AnnzySW26ZPjw4SxYsIATJ04waNAgxo4dS1paGv/5z38A
      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
      KsUAICJSKQYAEZFKMQCIiFSKAUBEpFIMACIilWIAEBGpFAOAiEilGABERCrFACAiUikGABGR
      SjEAiIhUigFARKRSDAAiIpViABARqRQDgIhIpRgAREQqxQAgIlIpBgARkUoxAIiIVIoBQESk
      UgwAIiKVYgAQEakUA4CISKUYAEREKsUAICJSKQYAEZFKMQCIiFSKAUBEpFIMACIilWIAEBGp
      FAOAiEilGABERCrFACAiUikGABGRSjEAiIhUigFARKRSDAAiIpViABARqRQDgIhIpRgAREQq
      xQAgIlIpBgARkUoxAIiIVIoBQESkUgwAIiKVYgAQEakUA4CISKUYAEREKsUAICJSKQYAEZFK
      MQCIiFSKAUBEpFIMACIilWIAEBGpFAOAiEilGABERCrFACAiUikGABGRSjEAiIhUigFARKRS
      DAAiIpViABARqRQDgIhIpRgAREQqxQAgIlIpBgARkUoxAIiIVIoBQESkUgwAIiKVYgAQEakU
      A4CISKUYAEREKsUAICJSKQYAEZFKMQCIiFSKAUBEpFIMACIilWIAEBGpFAOAiEilGABERCr1
      /wF+Ie+khc2N/AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Dashboard 4' width='384'>
      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
      ad26taxdu1aMRqOMHDlSunTpIs8//7z4+/vL4sWLpaamRgBIcXGxiIiMHj1aVq5cKTk5OeLl
      5SWTJ0+W2bNny3//+1+ZO3eu2NnZyaRJk2T27NkiIhIRESGxsbFiMBgkKipK7rrrLnnyySfF
      yclJkpOTG91WtQ4dOiRWVlYyZcoUmThxojg6Okp2dra88sorMmbMGBERSU1NFQcHBykpKVHW
      e+qpp2TgwIHy9ttvi5ubmyQmJirbIjQ0VKZPny6urq7yzTffSGpqqri7u8vcuXPl7rvvlocf
      frjB/ZKbmyuenp4yevRoefrpp8XGxkbOnj0rffr0kX/9618iIrJq1Srp16+fUsevv/4q/fv3
      l/bt28vMmTNl69atjS7f0P7T6/USGRkpjz32mMyZM0eCgoKkurr6ul+jqampEhISIu+//77s
      3LlTfH19leeWL18uAwcOFJHLRw0iIpaWlsoRwMaNG6VTp05iMBhEROT999+XcePGXXffRM1Z
      kwVAYGCgBAUFSVBQkOzZs6feaQsvLy85efKkDB8+XFauXCk6nU6+++47iYmJEZHLbzSBgYHK
      qZMJEybIm2++KSIip0+fFh8fHxERefTRR+XJJ5+U6upqcXV1laSkpDr12NnZKW+ec+fOlcmT
      JyuPjxo1SsrKysRgMEiLFi2UN8TVq1fLgAED5Ny5c9KyZUvljb72FFBjAbBo0SIZO3ZsvW3i
      7u4uZ8+eVf6uDYC4uDjx9fUVnU4nIiKPPfaYvP76641uq1pXP9+nTx9ZuXKlpKSkiI2NjWRl
      Zcl7770nkyZNUpYxGAxib28vFy5cEJ1OJ0899ZTMnTu33jZ64IEHZPHixbJw4UKZNm2a6HQ6
      ycnJEWtra9HpdPX2y8cffyxDhgypN9aVK1dKeHi4GI1GGTVqlHz66ad1tsnSpUvr1NfY8g3t
      v0OHDklQUJDU1NSITqeTiIgI2b17t9LWvn375IsvvlDC/kpff/21ODs7yzPPPCN6vV42b94s
      oaGhyvPffPONdO/evc46VwZAcXGxtGnTRvr16ycPPvig+Pr6yl133VWvH6LbkVVTHUkkJSXB
      2tpa+fvw4cN1nrewuHy9OT8/H2+++SaWLFkC4H+nXgBg7ty5CAgIAAAUFBQo/32lWbNmYfjw
      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
      jaC8vJw9e/b87Xq02+2sXLmSjIwMli1b5n3c4XBw6tQpmpubGR4exul0UltbyzfffOO9FjZl
      yhROnTpFRkbGbXkv/y1DfQUEkJSUxNGjR4Hrn1RCQ0NZtmwZc+fOJTIykj///JNDhw55P52H
      hobi4+ODxWLhjTfeoL6+ntbWVuLi4rzbjI+PZ+HChSQlJXH33Xdz6dIlmpubvQeR/zeBgYEU
      FBSQl5fHqlWrCAkJwWKx8M4779DW1kZkZCROp5M//viDxx9/nC+//HKyh/yPmzFjBjk5OWRn
      Z7N27VrvTYgHDx6koqKCQ4cOAXDhwgXKysp49913OX78uPeDw51k48aNALz22mvk5ubesL8e
      Pnx4wvMXLVqEx+Nh9erVDA0NERQURGpqKgcOHKClpYU1a9Zw7733EhwcfMN8ALS2trJjxw4C
      AgK47777AAgKCpqw1gDCwsKw2Wxs3bqVkZER/P39b8+E/IclS5YQHh7OiRMngOsH7aamJnp7
      ewkMDCQlJQWbzUZ9ff2EM4AHHniA4eFhNm/eTH9/Py0tLURFRREbG8u3334LgJ+f36Se4dyK
      qbq6unqyB3E7hYaGEh8fD4Cvry/p6el89913uN1uli9fTkpKCn19ffj6+vLQQw9x//33s2DB
      AiIiIpgzZw7nz5+nsrKShIQEfHx8SElJITs7m46ODq5cuYLVamXp0qV0dnaSlJSExWLBYrEQ
      EBCA1WrFx8eHhIQEZsyYwfz585k3b94kz8jNZWVl4fF46O7uZvny5axevZre3l4GBgbYs2cP
      Dz74IFeuXMFkMmG1WklOTuauu+5iyZIlzJw5c7KH/4948sknMZlM/PLLL+Tm5vLwww9jNpu5
      cOECjz76KBaLhbCwME6cOEFERAQlJSVMnXrrOzlvt5iYGNauXUtAQACDg4OUlJRM2F9DQ0OJ
      iooiPDyc6dOnk5mZyeLFizl79izTpk3DarUyd+5cgoKCyMvLY9asWWRmZmI2m4mIiJgwH399
      hTowMMArr7xCWFgYU6ZMIS0tjYyMDO9ae+SRR+jq6uKHH35g586dk3btZOrUqSQmJhIbG0to
      aCipqaksXLiQX3/9ldTUVCwWC+np6cTGxnLu3DliY2OJjIwkNjaW3Nxcrl69SkdHB/Hx8WRl
      ZWG32zGbzVgsFpKTk73r/k6l+wBERAzKcNcARETkOgVARMSgFAAREYNSAEREDEoBEBExKAVA
      RMSgFAAREYNSAEREDEoBEBExKAVARMSgFAAREYNSAEREDEoBEBExKAVARMSgFAAREYNSAERE
      DEoBEBExKAVARMSgFAAREYNSAEREDEoBEBExKAVARMSgFAAREYNSAEREDEoBEBExKAVARMSg
      FAAREYNSAEREDEoBEBExKAVARMSgFAAREYNSAEREDEoBEBExKAVARMSgFAAREYNSAEREDEoB
      EBExKAVARMSgFAAREYNSAEREDEoBEBExKAVARMSgFAAREYNSAEREDEoBEBExKAVARMSgFAAR
      EYNSAEREDEoBEBExKAVARMSgFAAREYP6F29TCdZb6gdzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 5' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeVxV1fo/8M/hMBzmeZB5RhBQFARFEDIZFNOcihz6Kk5pptfy1n11LU3N
      azQaFl0zr0MOaRjklEoigpiYOGA4IIKAgswKIpzh+f3Bj3M9ckBQwLrnef+jLNZe+1l7b85z
      9rSWgIgIjDHGVI7asw6AMcbYs8EJgDHGVBQnAMYYU1GcABhjTEVxAmCMMRXFCYAxxlQUJwDG
      GFNRnAAYY0xFcQJgjDEVxQmAMcZUFCcAxhhTUZwAGGNMRXECYIwxFcUJgDHGVBQnAMYYU1Gc
      ABhjTEVxAmCMMRXFCYAxxlQUJwDGGFNRnAAYY0xFcQJgjDEVpTIJoLq6Gk1NTb2+3rKyMhBR
      m/LKyspnEk9Pk0gkuHPnjkJZfX097t2799Rtd1c7jLEWT5UA0tPTER0djejoaEybNg0pKSnd
      FRcAICAgAPv27QMAZGZm4tq1a51e9tH6r7zyCpKSkro1vs5wcnJCWVlZm/IRI0YgMzOz1+Pp
      aYWFhfD09FQoS0hIwFtvvdXlth7dh0/azsPH0bO0cOFCvPvuu886DMbknioB3L59GwUFBZg5
      cyacnJzwyiuv4PPPP1eoIxaLn7j9hIQEBAYGAgA+//xzHDt2TOH3RNRu+8rqt6ejdrpKIpE8
      8XLKzhT+jGQyGaRSaY+vp7v24cPH0dN6mr4vWLAAM2bM6JY4GOsW9BR27txJQUFBCj8bGxuT
      WCymsrIyCg0NJT09PfLx8aHCwkKSSCQ0c+ZMMjMzI2tra/ryyy+JiMjHx4dGjRpFIpGIhg0b
      RmVlZUREFBMTQydPnqTly5eTjo4OWVhYkKurK2VnZ9OpU6fI0dGR9PT0aMKECfTgwQN5HMrq
      R0ZGUmRkJNna2pKBgQH9+OOPREQdttNRbD4+PpSWlkaDBg2iHTt20O+//06urq4kFAopLCyM
      bt26RUREIpGInn/+eRKJRDR8+HCqqKggIiJfX19KTU0lqVRKc+bMIX19fbKwsKDDhw8TEdG/
      //1vGjFiBLm5uZGuri4tXLiQfH19SSQS0erVq4mIaP369WRjY0OmpqY0ffp0hbjr6uro5Zdf
      Jj09PXJ0dKTi4mJav3492dvbk66uLoWHh1N1dTWJxWJydXWlu3fvEhHRnDlzKCkpiW7fvk3D
      hw8nIyMjcnd3pxMnThAR0YYNG8jExIQMDAxozZo1RERUX19PU6ZMIVNTU3JxcSETExOFWNas
      WUP9+vUjOzs7MjU1pQ0bNpBYLCZ/f395u2fPnqXAwECSSqXt7sM1a9bQwIEDacCAASQSiWjp
      0qWd2oetx1HrfnvllVfI0NCQ7O3t6cqVK0RElJycTK6urqStrU3Lli2j8+fP08iRI2nPnj3k
      7OxMRUVFSvt+4sQJ6tevH+nq6lLfvn0pOzu73X2zcuVK+vzzz4mIKC4ujiZNmkR2dnakr69P
      u3fvJiKivLw8GjZsGBkZGVFISAi9+eabxFhP6dYEcO/ePQJAN27coAULFtC8efNIJpPRO++8
      QzNmzKCLFy+SkZER1dXVUXl5OWVkZBBRy4dkSkoKVVVVUXh4OL399ttE9N8Pybq6OoqJiaH4
      +HgqKyuj5uZm8vb2ph07dlBzczMNGzaMNm/eLI9DWf3IyEh67bXXqKioiN588016+eWXiYg6
      bKej2EQiEbm4uNBHH31EJSUlNGDAAIqPj6cHDx7QlClTKC4uTl5v//79VFlZScHBwfTee+8p
      9G337t3k5+dHDQ0NdPDgQXJ2diailg/N8PBwys/Pp/fee498fHzo0qVLlJiYSL6+vkREZGZm
      Runp6dTQ0ECHDh1SiHvp0qU0cuRIqqmpoby8PKqpqaGMjAy6efMmNTQ00NChQ+nrr7+m5uZm
      AkC1tbVERDRmzBjavHkzJSQk0MiRI0ksFlNeXh7l5eVRaWkpGRkZ0fXr1+n27dtkYmJCBQUF
      9MEHH1BgYCAVFxdTZmam0gQwcuRIqqyspN27d5OOjg7du3ePFi5cSNOmTSMiorfffpvmz5/f
      4T5cs2YNBQcH08WLF2nv3r1kZWXVqX3Yuq1b98eGDRuotLSUQkJCaP369VReXk76+vq0b98+
      amhooHPnzlFWVhYZGRmRp6cnbd68mfLz85X2PS8vj86fP0/Nzc20ZMkS+XGlbN+88cYbtGzZ
      MiIiioyMpHnz5lFhYSEtXbqUJk2aREREwcHBtHDhQqqrq6OVK1dSbGxsm787xrpLt94Ebr2p
      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
      CkZGRrR48WKSSCQKyz+aAFq3SWJiIo0fP15eTyqVkq6uLv3xxx9ERLR161YKCQl5bAKIiYmh
      +vr6Nv1Xtk8mTpxI33zzjbzOmjVraM6cOUREtHnzZnm91NRU6tevX7sxXbt2jXR1dWnXrl1U
      U1Mjb+/h/qWlpcn3y8OXgCZNmkQJCQmUlZVFLi4u1NzcTGKxmHx9fSktLY3WrFlDIpFIfnlu
      zZo1NHPmTBKLxVReXk4aGhryffqoR4+Fjo4BMzMz+TDQRERNTU2UmZlJycnJZG5uTqdPn1aa
      ANavX0/h4eFt1v3VV1/RiBEjFMqWL18uHxmUqOPjhLFn5aluAn/xxRd4/vnnkZaWhrKyMqUD
      dz08uFbr/ysqKmBnZyc/nXdyckJFRUWn1/u4cVW62r61tTVkMhmuXLmiUG5lZQWJRIIbN27I
      y/Lz8+VvBa9fvx4LFy7Ejh078Nlnnyn0tSOPjnlz//59NDQ0wMnJqVPxtvrqq6+gq6urUNaZ
      ffKoh7enmpoaBAJBuzG5urrim2++wYYNG2BnZ4ePPvqoTXtWVla4f/9+u+uprKxEWVkZhgwZ
      gqCgIGhoaMhHkn3llVcQGRkpr7d//34EBQVh1KhR8PX1lY+U+jidPQZqa2vh6emJ9evXIycn
      B0TU7jaztbXFlStX2kz6Y2Vlhfz8fIUbv/n5+bCysgLw5McJYz3tqRJASkoKVq5ciQ8//BAD
      Bgzo9HL9+vVDbm4uCgsLIRaLcfDgQfm14Xv37kEmk8l/1xGRSITa2to2T5m01357jIyM8NJL
      L2HRokWoqalBU1MTsrOzYWJiglGjRuHdd9+FRCJBRUUFPvnkE/k4RO+88w527NiB8PBwNDU1
      PfFsYHp6enB2dpZPqZmSkgIfHx95oqirq0NdXV2buXaVXQ9vb59oa2t3akTKx8VUWlqKwMBA
      HDlyBElJSfj222/ly8hkMhARNm/eDD8/v3bb7tu3L9TV1bF7926cOXMGP/30k3z/PNwnLy8v
      ODo6Ij09HWfOnME333wDY2Nj3L17Fz/88IPCDGqPHgsdHQMPb4vWt5G3bdsmH867PREREdDQ
      0MD777+P5uZmVFRU4MqVK4iIiMD9+/fx9ddfA2gZ4jspKanbjxPGuttTJYCYmBjMnTsXLi4u
      +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
      z/nz55k0aRKtWrUiJSWFTZs21cfHU4PJZGLy5Mk0bdqUjh07snDhQl544QW6d++O2Wy+5seh
      vuXl5XmGHKZMmUKrVq1ISkrC6XTSrl07li5dyrp16yguLqZHjx60a9eOXbt2kZCQQFpaGnC5
      xzlz5rBkyRLCw8NZtWoV33//Pf369eO77767psdx48Yxbtw47rvvPhITEzGZTBw9epShQ4eS
      nZ1Neno6UVFRvP3227Rt25YuXbp41tZvtae4uDgiIyMZM2YMy5Yt49///rcnbHv06EGvXr2Y
      OXPmNT/4V/+dlpbGvHnz6NSpE7t37+Yvf/kLDz74YK3v26ZNG7p06cLnn3+O0+n07KO72nPP
      PUdCQgJfffUVw4cPJzIykvfee4/c3FwGDhxY62ucTie7d+8mKysLi8XC3Llza2wFANfMO4CN
      Gzeya9cuWrZs6bnvmWeeoX///uzfv5+ePXsybtw4+vbtS2VlJbNmzeL+++/nd7/7Hbt27fKs
      6F3tyuWgeov/6s9w8uTJ/PWvf6V58+YMGjSIJUuWUFRURGlpKc2bN691urXRYaD/VV5ejs1m
      Izw8vMb9hYWFBAcH1+sYc0VFBSUlJTRr1swzw6v3/F+9Bv5jXbp0CT8/P4KCgqioqMBms9G0
      6fUvOXF1/9U75iIiIjzPsVqtRERE3DUn1FQPJdyoL19wu91YrdYa87W0tBS3203jxo2By1sw
      ZWVlN6y9vLwcp9NJWFhYrY9XVlZSVlZGREQE5eXl9OvXjw0bNtCoUSPP+9rtdmw2G6GhoXfU
      08WLF2nSpAn+/v6eHgsKCmjatKlXlofS0lKCg4NveCkZt9tNSUkJTZo0wel0kp+f79l3druu
      nnfVa/Hl5eW1fobFxcU0btwYk8lEUVER/v7+NGrUyPNYUFCQZ6upNreyHFRWVuJ2uwkODvZ8
      7o0aNfpRv1UKAJEGzG638/e//73Gvi2RagoAERGDMtxOYBERuUwBICJiUAoAERGDUgCIiBiU
      AkBExKAUACIiBqUAEBExKAWAiIhBKQBERAxKASAiYlAKABERg1IAiIgYlAJARMSgFAAiIgal
      ABARMSgFgIiIQSkAREQMSgEgImJQCgAREYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEp
      AEREDEoBICJiUAoAERGDUgCIiBiUAkBExKAUACIiBqUAEBExKAWAiIhBKQBERAxKASAiYlAK
      ABERg1IAiIgYlAJARMSgFAAiIgalABARMaj/BxGclutTwLaGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 6' width='384'>
      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
      /nyKjo6mxx57jMLDw+nRRx8lIqKpU6fSV199RUREr7/+Ot177702bUBENG/ePPr9739P9913
      H3l7e1NLSws9++yzpFQq6c4776SHHnrI5jMmk4kmTZpECxYsoIcffpi8vLyooKCgx3brqW2+
      +OILmj59us16Z2Zm2rRLSEiI0B6LFi2ioKAgWrBgQY/bburUqfTee++R2WymsLAwSktLEz5/
      33332V2v+fPnU2BgIN177700ZswYevjhh23q9Ic//IESEhLoiSeeoICAAPrwww9p69atFBcX
      R0RERqORAgIC6MSJE73uy/fffz/5+/vTt99+S0REra2tdPvtt5Orqyv9+te/pnXr1gltmJGR
      IbRhbW0tlZaWkp+fHz377LO0cOFCuueee2zqOHnyZPr73/9ORETvv/8+TZ06lYxGI91www10
      33330SOPPEKRkZGk0+noo48+oqVLl9JTTz1FUVFR9Nxzz9mtY2/7O7v+2Q0AAQEBtH//fptl
      58+fJ6lUSmazWVi2b98+CgoKEl6fPn2a4uLiaObMmdTQ0GDz+fnz59N7771HBoOBtmzZQhkZ
      GURk2SGrq6uJiCgiIoKOHTtGRETp6en02Wef2QSAd955hxITE2nPnj2k0+mIiOwuI7p0IPvr
      X/9Kd9xxBxERmUwmio6Opt27d9ORI0coJiZGSB8UFEQ//fQTrVy5km677TY6c+aMzbpaNTU1
      UWZmJv3nP/8hNzc3IrIceB544AEiIsrJyREO9CtWrKC1a9cSEVFBQYHdAGD9XEdHB7m5uVFe
      Xh4tWLCANmzYQEREFRUVJJVKSavV0vz584XAvG/fPuHA6UgA0Ol09MMPP9DWrVvJ39+fjh8/
      TkREfn5+lJeX163djh07RqGhoWQwGIiI6L777qO1a9f22G49tY29ALBs2TJ64YUXiIgoKyvL
      JgAolUr6/vvviYh63HbPPfcc3XvvvVRYWEgZGRkUExND7e3tNHfuXPr000/trlfXtvvnP/9J
      t912m/CeyWQiNzc3ys7OJiKizZs30/Tp00mj0ZCnpyfl5ubSwYMHKSIigsxmc6/78qJFi6ij
      o8NmfbuuIxF1a8OAgADKysqiV155hVatWkUGg4EuXLhAMplMaH8iovfee48SExPJbDbTokWL
      6N///jcdOXKEIiMjSa/Xk8FgoOTkZNq3bx8REZWWltL3339Pv/3tb2nhwoV263il/Z1d3+xe
      AwgNDcX58+dtlgUFBcFoNNr0qxYWFiI4OBgAcOLECWRkZGDVqlXYtWuX0JVh1dDQgBdeeAFp
      aWl45ZVXur0PAGKx2O7fVitWrMAdd9yBP/zhDwgJCcHu3bvtLuuqvr4eYWFhQp6jR49GQ0ND
      j2W/+uqr8Pf3x9KlS5GQkICqqiohzdGjRxEfH4+vvvoKhYWFMJlMva5DZWUlEhISuqWxx83N
      DZ6entBoNKivr0d4eDgAy7YQiURoaWmxSR8UFAS1Wu1Q3i0tLRgzZgz++c9/4scffwQR2a17
      V/X19Rg5ciSkUksvYXh4OOrr67uls66vI21j1djYKKzf5e666y7Mnz9fqIO9bTd37lzs3bsX
      +/fvx8yZMzFt2jTs27cPR48eFbpSenP5vqVWq9HZ2SnUybquSqUSixcvxtdff42tW7fitttu
      g0gk6nVf3rBhg9DF4yiRSATA8h3Ztm0b0tLSsHDhQiQnJ6O1tVVIt2zZMtTU1GDXrl04cOAA
      br/9djQ0NKC2thaTJ09GWloaZDIZdDod/vGPf2DOnDnYt28famtrbbZH1zr2tr+z65/dALBm
      zRq8+uqryMnJgdlsFvqcFy5ciKeeegpGoxH19fV44403sGLFCgDAH//4R/zud7/DI488AqPR
      CL1eb5NnfHw8FixYgBMnTuD48eN44okn+lzZvLw8PPzwwzh16hR+/etf49NPP7W7rKvk5GTs
      3LkTWq0WNTU1OHnyJBITE3sso7S0FOvXr0dRURF8fX2xf/9+4b1du3bh5ptvxvr167FkyZIr
      1jcsLAw7d+4EEdk9eAIQrg3s2LED7e3tiIqKQnJysnDh9Pvvv4dKpUJAQICQnojw3nvvISUl
      BYDlANLa2gqDwWD3Au65c+cgl8vxwQcf4De/+Y3QrwwALi4uqKys7PaZhIQEZGVlobS0FAaD
      Ad999x2SkpJ6XNe+tM348eOxbt06HDhwAFu2bLF5zxpwgJ633cSJE9HS0oL33nsPGRkZmDlz
      Jv76178iKSlJ6Nfvab3scXd3R0REhNDmX3/9tbCuy5Ytw9atW7F161YsW7YMQO/7ctf6WymV
      SrS0tKCtra3XesTHxyMsLAwHDhzAyZMn8e9//9vmOoWLiwt+9atfYdWqVbjxxhvh7e2NuLg4
      SKVSfPbZZzh58iS++uorJCUl4euvv8YLL7yAl19+GTfccEOPbdzb/s6cgL2fBQaDgR588EGS
      yWSkUCgoMTGRiCzdGLGxsaRSqcjV1ZVuvvlmUqvVRETk5eVFAIR/Li4uNnkWFBTQmDFjKCQk
      hPz9/YW+2a5dQFFRUULXREZGBm3ZsoWampqELqDNmzeTn58fJSUlkb+/P+3atcvuMiKisWPH
      0p49e0iv19OCBQsoMDCQvLy86E9/+hMRdf8ZHhISQj/99BM9/PDD5OfnR/Hx8RQVFSXUjYjo
      hx9+IHd3d4qOjqb09HRSKpVEZNuVk5eXJ3T1nD17lvz9/SkoKIji4+PtdgEpFAoKCQkhDw8P
      2rx5MxERlZSUUHR0NIWFhZGXlxd9/vnnRGTpxvDw8KCAgAAaPXo0/fjjj0REtHbtWpJIJOTp
      6UmJiYlCF5C1DZqbm2nUqFEUGRlJY8eOJT8/Pzpy5AgRET311FOkUCgoODjY5jNERM8//zx5
      enpScHAwZWRkkFqt7rHdemqbL774gtLT023Wu6WlhdasWUNTpkyh1atX23QBWduRiHrcdkRE
      t9xyC7m6upJWq6WKigoCQM8//7zw/uXr1bUL6F//+hctW7bMpk7bt28nlUpFERERNHr0aMrJ
      ySEiErqBrN0/RI7ty10ZjUZKT08nT09PWrp0abc2DAwMpKysLNJqtbRo0SJSqVQ0YsQIuuGG
      G8hoNNrklZ+fTyKRiL755hth2XPPPUfu7u4UHh5Oo0aNorNnz9Kbb75Jnp6eFB4eTmlpaTR/
      /ny7dextf2fXP7sBwKqjo4Nqa2vJZDIJy0wmE+Xn51NlZWWfCzObzVRXVycEjZ9Do9FQSUmJ
      TR72ll1ebkVFBVVVVTlURmtrK5WWltr0v1o1NzdTRUWFw/XV6XRUVlZmt3/VesBrbGwkvV5v
      857RaKSCggJqbm4Wls2fP58++OADqq+v75ZfZWUltbe391gPjUZDRUVFNtvSqr6+nhobG+1+
      rqmpifLz8x3qH3a0bc6dO0c1NTVkMpnopZdeosmTJ/eYtq/brqve1ssejUZDOTk5pNVqbZbX
      1dV1y6ev+7LJZKKqqqpu1wfsaW1ttdnuXZ04cYJCQ0O77S9arZYuXLhgs52qqqocWv/e9nd2
      fes1ALCBdfkZ75V0PYu9lm3evJlCQkLI1dWVkpKS6OjRo0NdpWvC008/Tf7+/vTll18OdVXY
      dUJE1E+P7DLGBpTJZIJIJLJ7gwRjPwcHAMYYc1J8KsEYY06KAwBjjDkpDgCMMeakuj210t7e
      jvb29qGoSzcSiQSurq79kpf1Uof1qctrzbVef8DyENu1fAGT6z+0rvX6O/odNhqNfR79+Oca
      1heB29vb4eHh0S95GY1GAPaf1LwWXOv1BwCdTmfzFPK1hus/tK71+jv6Ha6urkZISMhgVIm7
      gBhjzFlxAGCMMSfFAYAxxpwUBwDGGHNSHAAYY8xJcQBgjDEnxQGAMcac1LV7UzljjDmJ/fv3
      w2AwwN3dHampqfj2229BRJg0aRKqq6vR1taGjIwMtLW14ZNPPsHq1asdypd/ATDG2DCn0+kw
      Z84ctLS0oKKiApGRkVi0aBHOnj0LtVqNjo4OEBHOnTuHwMBAh/PlXwCMMdZHH2Vm4eudpxGu
      a0a4tgn+hk5sV8XigtwycsHWl5dfVf4GgwEAIBaLIZFIIJVKsWfPHpSVlWH06PfIhssAACAA
      SURBVNHw9PSEWCwWhpWIjIxEcXExtFptn4bPGbAAYDQaUV5ejoiICACWcTDOnz+PxMREdHZ2
      4syZM0hISICLiws0Gg28vb1RWVmJESNGDFSVGGPsZyEiGGtqocvPhy4/H5POnseUhjp0HdWn
      TuaObT5x/VKeTCazeT1jxgyIRCKo1WoEBgYiOzsbXl5ewrAS4eHh2L59O8LDw9HY2OhwOQMW
      APbt24eOjg4hAJw8eRJ5eXlITEzEnj17MGvWLOzcuRPTpk1DdXU1CgsLoVKpBqo6jDHmMDIY
      oC8uhi4v3/IvPx/mLoNkWg/PBpEY5QpvFCl9sc8rfMDqc/bsWTQ0NGDy5Mnw8fGBq6srjh07
      hvT0dNTW1kIqlSIqKgpjxoxBRUWFw/kOWACYM2cOMjMzAQCtra1Qq9UICgoCALi4uMDNzQ0e
      Hh42/VYTJkwAcOnnj8FggE6n65f6mM1mAJZp9a5F13r9AUvd+2t7DgWu/9AayPqbOzqhLyiA
      sbAQhoIC6ItLgIvHoa7IwxMucTH4yeSGb2tNqFB4wyTqfinVXj0d/Q5b03WVkpJi83rcuHHC
      36NGjQIAJCcnA4Bw0u2IQbkGsG/fPnh6eqKoqAhhYWE2DSESiRAVFYXKykqYTCZIJBLh549M
      Juu30f+u9dE0r/X6A9f+aI5c//7zUWZWj+8lhgcgKSIAAHDzkx/3mG757ETcOTux74UTwVhf
      D11eHnS5+dDl5cFQVQVcNjCyGUCt3APFCh8UKy3/5s6fhDvnJKEhMwulvayDvXZ29Ds8mENe
      D8jRxGg04vDhwygqKoKnpyduvvlmAJYDflRUFKqqqrB//34hvYuLC2bOnIndu3dj/vz5A1El
      xtgw8nEvB8/lsxOFAOCIjzKzes3vqxdvh6G8HLrcPMtBPy8PpqbmbulEMhnkkZH4ptaEIqUP
      ShQ+0EhklyW6dufjsGdAAoBUKkV6ejrS09Ntls+ZMweA5YKGRqOBi4sLAMDf3x8A+ODPGLtq
      MrMJo3XNiNQ2IULbiMr7doHsTLDSIZajWKlCsdIXsRmpmLc0AyKZDN/08qvjejNk/QnWgz9j
      7PpxrrgOf3lnT4/vX+3tkfa4GHVI6qxFhLYRkdomjNS1QIpL3TnWvxqkrihS+qBY6YsipQ8u
      yNyFM3p/32CILrvzxhlcux3KjDEnRPAxaBCpbcSovaWo3v4exlVVYdxlqcwAquReKFL64NZ7
      F0MZF4vfvrZjKCo8rHEAYIwNW2IyI0Tfhghtk/BPZdJa3qwHjBfT6UUSlF68HbNY6YMSpQ90
      Ysvh7Z7JaUNT+WsABwDG2LDhYjLAvaQALZ/mQJeXj7+V5kJB3W+b7BDLQOGRGJk2DpnNYmzO
      abF7OybrHQcAxtgQIfgY1IjSNiH84tl9kKEd4jKg7WIKBSx9+A1SV+FWzGKlL2pl7lg+KwkJ
      sxOhzcyCKbetl3JYTzgAMMYc8tTbe5BVUmf3vcTwALy0elavnxcRQX/xdsxfXjiFSG3jpe6c
      rqRSyCPCoYiJwZsn6lCi8EG7dHg8v3C94QDAGBsYRAjVtyFOU49IbSMitE2o/eM3AIAJXZJZ
      bse89LDV1IVTsWzOWADA2WznuSVzKHAAYIz1CyKCorEO01tLEKVtRJS2EZ6m7kMiSPz8cFSr
      RJHSB4VKX5vbMQEgVSQZzGo7NQ4AjLGfhwjBhnZEaRox9sxPqFrzKZRtbbi9axIAtTIPFLr4
      oEjhiyef+RWkfn5434kethrOOAAwxhwiJjNG6VoQqWlE5MWHrtzNeuF96xBmTVIXFCh9Uaj0
      Q66rP1qklx76lPr5DXKtWW84ADDG7DLrdNAXFkGXmwtdbi7uy82H2KDvlq5R6oqWoJGYuDgD
      RS5+eOarswCurzFzrlccABhzcpmnSlDX0gm52WgZSqGlBob8PMuQyF2GLhbD0qVTJ3NHkdIH
      RUpfFCh90SxzRWJ4AGbOmAFxcR344H/t4ADAmJMikwn6oiJ0fLUNARXFCNc2QwozOrsmEosh
      Hz0aijFx+KRUi4OdcnRI+JbM6wUHAMaciKGyEtpzWdBmZUGbnQPSaNB1qhEjRChTqlCg9EOR
      0gduY+Lw9Jp5AICKt/ego4fnANi1iQMAY9cpMhqhLy29NK1hbi7Mbd2fmK118Ua23Ad5Lv4o
      VPpCL750WEgU8yFiOGhqakJ2djaio6MRGBiI0tJS1NfXY8KECWhsbITRaERQUBDMZjNycnKQ
      kJDgUL68dRm7Tpg7O6HLL7BMXJ6XB31hEUjf/aKtxN8fysQEKJMSoUxIwL8/PdXjE75seDhw
      4AAWLFiA7du3Y+7cucjNzUVSUhIOHz4MIkJTUxOWLFmCwsJCHD58mAMAY9c1YVrD/IuzXOXD
      UFnZbVpDAJCGhEARGwNJRATckpIgCwy47ma2ut5Y50UXi8WQSCTw8vLCjh07IJfLUVlZiYSE
      BISGhiInJwdKpRIeHh7o6OhAeXk5wsMdn5yeAwBj1wAymWAoKxcO9rq8PJiau09raBlHJwKK
      2BgoYmOhiImBxNMDgGVOYNkwmROY9U522eQ0nZ2dWLx4MbZv3w6pVAqtVgsiEuZXHzt2LH76
      6SdIpVJh7mFHcABgbBgyazTQFxZeOsMvKARpuw+cJvZwhyLm4sE+NgbyiAinnNnqemc2m3Hk
      yBGo1WqEh4fj888/R0FBAWJjY1FTUwNXV1cUFxdj7ty5yMrqeX7ky3EAYGwYMDY12ZzdG8rK
      AbO5WzppYCAUcbHCGb40JAQi7s657i1ZsgQajQaTJ0+GSCTCbbfdBoPBAIVCgcjISADA3Xff
      DQAICgpyOF8OAIwNMjKbYaiohC6/S3dOfUP3hBIJ5GFhl7pzYmMg8fYe/AqzYaHrPOpisRiK
      fujO4wDA2AAjgwH64mLocvOgzc2FLj8f1Knulk7k6gpFdLRwwJdHRULcw5fc+vSuPQHebpg9
      3vELgcx5cQBgrJ+Z1WroCgqgy82DLjfXcjvmxbs6upL4+9uc3ctGjIBI7Ni0hntOl/Q6Ocvs
      8eG40NyJPadLhOUmoxES6aWv/Kxx4QhUufVx7dj1hAMAY1eDCMbGRktXTr7lgStDuZ3+e5EI
      spEjoIiLsxzw42Ih9fUd0KrVNXfi48yeLwgmhgdwAHByAxYAjh07hpqaGvziF79AeXk5zp8/
      D61Wi2nTpqG8vByNjY1wc3PDmDFjUF9fj+DgYGRlZWHKlCkDVSXGrprldswymwO+qampe0Lr
      tIZxcVDGxUIeEwOJu/vgV5ixXgxYAIiJiUFHRwcAIDg4GKNGjUJ+fj7q6+tRX1+PG2+8Ed9/
      /z1MJhM0Gg0yMzOxaNEimzyIqE/3tPbGer9sf+U32K71+gOWdbjW6k9qNYxFRdDlF0CTmwtj
      cQlI132WK5GrK6SRkRe7dGIgj4yCSH7pdkxC/247svPAV9f3jEYjzGZTj2kAwGw2wWg0OpRX
      f5XpSBs4up9Y05nt3C01HMt09DvcWzv3twELACqVSvhbJpPh2LFj0Ol0mD59Oqqrqy2FS6Ug
      Ipw8eRLh4eHCww/Wp+BMpt53Jsb6FREMVdXQF+RDl18AfUEhzLW1dpNKAwOFg70sOhqS4OB+
      ebr2fGk9nv6//T2+//yqGUgI87/qchgDBukaQE5ODuRyOVJTUwFAeIpNo9FAJBJh4sSJaG1t
      RUVFBUaOHCkEAqlUCqm0f6pojbr9ld9gu9brD1gC+nCqv1mthq6wCPqCi+PnFBSC1N3vzoFM
      Bnl4OGSREXAZM8ZyO6aX14DUSSzufT5csVgCqVTa673/IpEIUqm0X/Oy/n21ZTqy/cVicZ/S
      ia9w4Xy4lOnod3gwn+sYkG+j0WjE4cOHYTabceLECXh7e6O5uRl79+5FXFwcJk6ciF27diE5
      ORmurq4IDAxEcnIysrKyMHLkyIGoEnNyRARjTc3FM/sC6PILehw7R+Kjgjw6BoqYaChioiEP
      C4NIJoNOp/vZ915ffkfO5fiOHDYUBiQASKVSpKen2yyLjo62eT1v3jzhbzc3y46flJQ0ENVh
      TsgylEKR5XbMgovdORevSdmQSCAPGw1FdAzkFw/4Ul/ffh8sje/IYcPR8Pk9ztjPREQwVlcL
      B/rezu7F3l6Wh62ioyGPiYY8IgJiuXwIas3Y0OMAwK455s5O6AoLLQf7ggLoC4tg7rTzVKxE
      AvnoUZBHW87sFdHRkPr781DIjF3EAYANa2Q2w1BZKRzsdQWFMFZX2++79/a2HOyjoyxn9+Hh
      PQ6lwBjjAMCGGVNbO/SFlgO9rqAA+qIikKb7MMiQSi/23UcLB32pnx+f3TPWBxwA2JARJjm5
      eMDXFxTAWHvBblqJr4/NwV4eFm7zoNVQ4oHZ2LWKAwAbNKaWFqjLyoWLtfriYrtz1opkMsgj
      wi8d7KOjIfXxGYIaO8aRgdkYG444ALABQXo99CUlFy/WFkFXWAhTg50x7wFIAwIgj466eIYf
      Bfno0RANowfGGLte8beMXTUigrG21nKhtrAQ+sJC6MvKATtDeYiUSsgjI4SDvSIqasCeqmWM
      9Y4DAOsTU1vbpdsvSywDoxkqq7o/ZCWRQB4efukg7+sLk1IB1/Bwh8e8Z4xZ1NTUwGw249Sp
      U1iwYAH279+P4OBgSCQSqNVqtLW1ISMjA7W1tcjMzMSKFSscypcDAOsRmUwwlJdfuiOnt4u0
      fn5QREVCHhVl6bcPD4fosgesdDodH/wZc4B1IEyRSASxWIzg4GA0NzdDpVKhrKwMERERiIiI
      wM6dO+Hq6gqtVguDwYCcnBz4+fk5XA4HACboenavy8+HvqjY/tDHcnmXi7SWC7WSLqO/Xi86
      NHqU1LQIrw0GgzBQIQCEB3vD3YWfImaD4+jRo5g9ezZKS0uF/dA6cFxiYiLOnz8Ps9kMiaT3
      Afm64gDgpCwTk1fYDI5m7GnoY5uLtNGQjx7lFBdpS2pa8Jd39vT4/ov3z0JSRMAg1og5i8sP
      4m1tbVAqlZDL5RgxYgR2794NjUYDb29v6HQ6+Pn54cCBA5g4cSLKysocLuf6/xYzABeHTygo
      tAx7nF8AfWEhSNv9ASvL2X2EZRTMi0Mo8EVaxoaedbZEV1dXpKamoqmpCRMmTEBbWxvkcjnm
      zp0LPz8/7gJilnvudbm50JzNgj4/H4aqKvvDJ/j5CePkyGOi+RZMxoYhT09Pm9eBgYEIDAwE
      AHhdPEHz97dMFKTqQ3csf9OvA5bxcqqgy8uDLi8P+vwCGOvsPJgklUIeHi6Mc6+Iibku++4Z
      Y47hAHANIr0euuJiywE/Nx/6/Hy7o2GKXF2hTIiHIiYGipgYyCPCIZINj+ETGGNDjwPANcDU
      0QFdTq5wdq8vLgbsTCwt8fWFIi7WcsCPjYFs5EiI+nBHAGPMuXAAGIaMDQ3Q5eZZ/uXlwlBp
      p/9eJIJs5EgoYmMtB/3YGMtomIwx5iAOAEOMiCz997m5F7t08uyPmSOTQR4ZCWXcxQN+dAzE
      bq6DX2HG2HWDA8AgIyIYyiugy8mBNjsHupwcmNvbu6UTu7lBHhsDZWwsFHFxkIweBUilkPId
      OletuLoZm7b92OP7992UgogQvjjOrn98NBlgZDbDUF4uHOx1Obl2JycX+u8vHvBlI0Jthk0w
      2unzZz9Pp9bQ4/DN1vcZcwYcAAaI8cIFtHy2Bdofz9i9Q0caEADFmDFQxI+BcswYSP15NivG
      2ODiANDPzJ2daP3iS7Tv2Glzp440KBCKMWOgjI+HYswYSP18h7CWjDE2wAFAq9VCqVQCsIxl
      IZVK4erqCiJCQ0MDfH0tB0Gz2QypVAqdTgfFNTqJNxmN6Ni1G62ffyF08UgDA+Gx6Ca4jB83
      rGe0Yow5pwELADt27EBTUxPuvPNOVFRUIDs7G2q1GnPmzMHRo0fh6+uLY8eOITU1FdXV1fD2
      9kZNTQ3S0tIGqkoDgwjqk6fQ8uGHMNZYBlMTu7nB85al8Jg3DyIZ/8hijA1PA3Z0mjdvHvbs
      sYykmJeXh7lz56K5uRn5+fkgIowbNw4NDQ0gIjQ2NqK0tBRLliwBcGksbJPJBJ2d4Yh/DrPZ
      bJN3fzCVlaH9o4+hy8m1LJBIoJyZAY+lv4DY3R16swnQ9U95A1H/wdaf27MnZRfaoNbZv4jr
      qpBhdKAnDIbeL/IaDAbodDqH01m3jT1ms7lPeQ1FmY7kZf37ast0ZPubjMY+pTNd4QaJ4VKm
      o9/h3tq5vw1YABB1uaBJRBCJRJBKpTCZTMJ71v9bWlqgUChsPmN9v7+6hKx30fTHbZTGpia0
      fvQxOg/9IDyg5TJxIrzvuhOy4KCrzt9umf1Y/6EyGF187+041+sE7S+tnmUzpr89MpkMCoXC
      4XTiXia5EYvFfcprKMp0JC/r31dbpiPbXyKV9imd5ArfieFSpqPf4d7aub8NyNHEbDajvr4e
      bW1taGhowKhRo3Dq1Ck0NzcjJSUFx44dQ01NDTo7OyESiRAZGQmFQoFTp05h/PjxwljYg9kQ
      jtKcPo3GDRuFfn55ZAS8V66EckzcENeMMcb6ZkACABGhpaUF8fHxaG9vR2xsLAoLCxEUFAQ/
      Pz/MmTMHubm5mDdvHqRSKVxcXODu7o46eyNYDhNkNKLlo4/Rvm07AEDs6QHVPXfDderUbr9c
      GGPsWjAgAUAikSA2NtZmWVRUlPC3QqHA2LFjhdfyi3PHBgQMz9mVjBfq0LD+/4O+qAgAoExK
      hO9DD0Li7T3ENXMe/PQuY/3v2u1QHiTqo8fQ+J+3QWo1IBbDa9lt8Lx5CU9u3k8cPbDz07uM
      9T8OAD0gvR7Nmz9Ax67dAACJrw98f/tbKONir/BJ1hd8YGfsypqamnDy5El4enoiLS0Nhw8f
      Rnt7O6ZPn46amhqo1WokJSVBr9dj9+7dWLhwoUP5cgCww1BdjYZ162EoLwcAuIwfB59fr4HE
      w2OIa8YYc0bHjh3D/PnzIRaLUV9fD4lEgvT0dBw+fBgKhQLNzc1ISkpCVlYW2traHM6XA0AX
      ZDajc89eNG/+AKTTAVIpvO9aDo8FC/hCL2Ns0FifpxCLxZBIJKitrcW+ffugVqsRGRmJ0NBQ
      uLi4CM8MBAYGoq6uDk1NTTwpfF+QwQBt1nmoT5yA5uQpmC9GT2lAAHx/9wgUkRFDXMNrV3F1
      s00XjsFgEO4Td1PK+KItYz24/HmK4OBgzJo1C/v27YNSqURTUxOCg4OF9xMSEnDo0CF4eHhA
      rVY7XI5TBgCzRgPNmZ+gOXECmh/PgDSaS2+KRHCdMhk+962C2JUnXLkam7b9eMWHshhjVxYZ
      GYkdO3ZAKpUiLCwMO3bsQGlpKaZOnYrq6mohYCQlJSE/P9/hfJ0mAFBnJzQnTkJ76jS0WVlA
      10fWJRIo48fAZeJEuEwYzwO3McaGlejoaERHRwuvb7zxRuFv66Ca8+fPBwCMHz/e4XydIgCQ
      yYS6Pz8JU3OzsEwkl0M5NhmuEyfCZVwKxO7uQ1jDgXd5d0xXXbtj3vn2NEpqWuymCw/2xv2L
      xvE9+YxdJ5wiAEAkgtjLC6TXw2VcClwmToRybDLE1+jQ0z+Ho90xJTUtvd6WCfCtm4xdL5wi
      AIjEYvi/+DxABOkVBqtijDFn4RQBQHCd3sp5rrjns/HwYG+4u8gHsTaMsWuFcwWA69Rf3tnT
      43sv3j8LSRHDc4wlxtjQ4gFtGGPMSfEvgGEs81QJ9pwuAWAZYhuwnWiH76NnjF2NPgWAU6dO
      4dChQwAs95pOmzZtQCp1vbvQ3Im65s4e37d22dS1dF7xjhzGGPu5+hQA9u3bhwcffFAYn4J1
      19sF2QCVGwJVbthzugQfZ2b1mG7ry8sHomqMMWajTwHA1dUVb731FmQyGcaPH4/p06cPVL2u
      Wb1dkF0+OxF3zk4cxNowxljP+hQAHnjgAVRVVUEikSAoaGAmP2eMMTY4+hQAvvzyS7S2tsJg
      MGDUqFEOTzrAGGNs+OlTAKioqMBDDz0Eo9GITZs2DVSdGGOMDYI+BYBly5Zh3bp1EIlE+OUv
      fzlQdWKMMTYIHA4AR44cgVwuR0SEZYKU2tpaBATwE6aMMXatcjgAjBo1CnK5HN7e3gAg/M8Y
      Y+za5PBQEKGhofjhhx/g6emJTZs24cSJE30qqLW1FZ2dloefiAj19fUwm80wm80wGo0AAJ1O
      16c8GWOM/Xx9ugZQW1uL7777Dg888AB27drl8OfOnDmDjo4OtLe3IykpCTk5OfD19cWxY8eQ
      mpqK6upqeHt7o6amBmlpaX1eCcYYu57p9XrodDqIxWK4ublBq9VCo9FApVLBYDCAiCCXW0b9
      VavVcHVwOts+BYBFixbh3Llz8PHx6dNDYEqlEmq1GlKpFHK5HESEcePGoaGhAUSExsZGlJaW
      YsmSJQAAk8kk/N9fvwrMZrNN3kPBZDRCp9PBdPEXT0+s6+xout4YDAbodDph/e0xm81CXo6k
      Mxh6n/ClL2U6mheXOXBlDua+4cg+a/2eOJquP74ng1Gmo8cge+28d+9e+Pj4QKlUIi4uDt98
      8w0CAgIQEBCAxsZGNDc3Y/HixaipqcFHH32Exx577IrrsmXLlr4FgDNnzmDy5Ml47bXXkJGR
      gbi4OIc+p9Fo4OHhAZFIBLVaLQxoZv2/paUFCoXCZqAz6/uKfpq1y9rNJJX+vPHvHB2/pzcS
      qRQKhQKSK9TBus6OpuuNTCaDQqGAWNxzb59YLBbyciSd7AqT6vSlTEfz4jIHrszB3Dcc2Wet
      3xNH0/XH92QwynT0GCQWi4UgIRKJIBaL0dnZiZCQEERERKCsrAzjx49HREQEdu7cCVdXV8hk
      MhgMBuTm5iIhIeGK6wEAt912W98CQGVlJXbv3o17770XmZmZmD17tkOfa2lpQVhYGEwmE1pb
      W6HX61FTU4POzk6IRCJERkZCoVDg1KlTGD9+vDDOUG873GDj8XsYY0Nl3rx56OzsxDfffINx
      48YJgdZ60pyYmIjz58/DbDY7PE5bRUVF3+YDuPHGGyGVSuHn59envvqMjAzodDp4enpi7Nix
      mDNnDurq6jBv3jx4eXkhMjIScXFxGDlyZF+qwxhj1yWJRAKJRCKcBOfl5QnLR4wYgZ9++gm5
      ubnC3Zh+fn7Izs7GqFGjHC7DbDY7/gtg27ZtkMlkKCsrwzvvvIMJEyY4XJBIJLLpLlIoFBg7
      dqzw2nrxYiieK+iPrh3GGBtIkZGRKC8vx4033ghXV1ekpqaiqakJEyZMQFtbG+RyOebOnQs/
      Pz/4+fk5lOfo0aMdDwCzZs2CXC7HrFmWSUgu768fjp56+9LInJdPqDJrXDhmjw/nrh3G2LDn
      7e1t8+xVYGAgAgMDAQBeXl4AAH9/fwCASqVyOF+HA4CLiws2bdqE+vp6iEQipKamIiMjw+GC
      hkJvk6kk8pk9Y8zJ9ekisFgsxkMPPQSJRPKz76ZhjDE29HQ6Xd8CQEtLC959912IxWKkpKRg
      ypQpA1U3xhhjA2jTpk19CwDu7u6YPn06JBJJn/qZGGOMDS8PPvhg3wLAhAkTkJubCwCIjo52
      +GozY4yx4adPzwFIpVJkZ2cjPDwctbW1A1Unxhhjg6BPAeDQoUNYunQpgEsPJjDGGLs29akL
      KCUlBR9//DE6OzuxcuXKgaoTY4yxQdCnAJCWlsbDNTPG2HXC4S4gs9mM1tZWAJanaltaWgas
      UowxxgaewwHgn//8J9555x1s3boVRIT3339/IOvFGGNsgDkcAPR6PR5//HFUVVUhOzt7IOvE
      GGNsEDgcACZNmoS6ujo88MADOHz4MA/dzBhj1ziHLwKnpqZix44dqKmpQWxsLNLT0weyXowx
      xgaYw78A3nrrLahUKixevBhNTU345JNPBrJejDHGBtDWrVsdDwA6nQ5Tp05FcHAwFi5ciKqq
      qoGsG2OMsQFUUlLieBfQ1KlT8eSTT8LX1xd1dXVYvXr1QNaNMcbYADKZTI4HgOjoaEydOhVa
      rRZisRgajWYg68YYY6wLo9EIg8EAFxcXaLVaaDQaqFQqGAwGEJEwta5arYarq+sV83v88ccd
      7wL63//+B4lEAjc3N0ilUmzevPnnrwljjLE+yczMxIEDB2AwGPDNN9/g7NmzyMnJwbFjx7Bj
      xw4AQE1NDTZu3Ohwng4HALFYjKysLJhMJuzfv1+Yj5Ixxlj/MplMMJlMMJvNAICCggKMGjUK
      EokEZWVlGD9+PGbMmIGKigoAgEwmg8FgQG5uLhISEhwux+EA8Jvf/AYnTpzAyy+/jPb2dtx+
      ++19XCXGGGN9ZTQacfDgQRARLly4gM7OTkgkEgCASCQCACQmJuL8+fMwm83Ce47o06Tw9957
      bx+rzhhjrK8uP4gvXrwYgGVWxvDwcOzbtw8ajQbe3t7Q6XTw8/PDgQMHMHHiRJSVlTlczqDM
      7E5EOHToELRaLdLS0tDc3Izc3FyEhYUhODgYbW1tCAwMxPnz5zF27NjBqBJjjF0TxGIx/P39
      AQDp6enw9PREamoqmpqaMGHCBLS1tUEul2Pu3Lnw8/Pr00yNgxIAzp07h7CwMGH4iAMHDuCm
      m27Ctm3boFKp0NDQgKysLEyaNGkwqsMYY9ck61zsgYGBwnVYLy8vABCCRF/max+UAFBdXY2G
      hgacPn0aaWlpUCgUAACFQgEiwvHjxxEZGSlU3GAwCP/rdLoBqZPJaIROp4PJaOw1nbV8R9MN
      tzKtbWi9mGSP2WwW8nIknXX79EeZjubFZQ5cmYO5b/Tle+Jouv78bg5kmdb2M5lMvX62t3bu
      b4MSADw8PJCcnAy5XI4jR47AeLHxjEYjRCIRJk2ahNLSUnR0dMDd3R0ymQyA5cq2NVj0N4lU
      CoVCAYm09yawlu9ouuFWprUNxeKer/eLxWIhL0fSWbdPf5TpaF5c5sCVOZj7Rl++J46m68/v
      5kCWaT3uSa/w2d7aub8NSknjx4/H/v37sXv3bowdOxYjRozAjh074OfnJnTSagAAERdJREFU
      B5lMBjc3NyxYsACnT58ejOowxhjDIP0CUCqVWLRokfBapVIhMTFReO3t7Q0APMIoY4wNosH7
      rcEYY2xY4QDAGGNOigMAY4w5KQ4AjDHmpDgAMMaYk+IAwBhjTooDAGOMOSkOAIwx5qQ4ADDG
      mJPiAMAYY06KAwBjjDkpDgCMMeakOAAwxpiT4gDAGGPD3PHjx5GZmYmTJ08CAA4fPowdO3ZA
      rVajqKgI586dAwDo9Xps377d4Xw5ADDG2DCXkpKC2bNno6amBvX19ZBIJEhPT8eRI0dQU1OD
      0tJSAEBWVhba2toczndQ5gNgjDHmOOvUmmKxGBKJBG1tbfj+++8RHByMhoYGhIaGwsXFRZg+
      MjAwEHV1dWhqaurTpPD8C4AxxoYZmUwGmUwGiUQCAPD19cWKFSvQ2dkJd3d3NDU12cwtnJCQ
      gB9//BGurq59Kod/ATDG2DC3a9cuSCQSuLi4YMSIETh//jxKS0sxdepUVFdXC3MxJyUlIT8/
      3+F8OQAwxtgwN3fuXJvXN954o/C3r68vAGD+/PkALHOwO4q7gBhjzElxAGCMMSfFAYAxxpwU
      BwDGGHNSHAAYY8xJDVoA0Ov12LZtGwCgvLwcO3fuRH5+Ptrb21FVVQWj0YiffvppsKrDGGNO
      b9ACwMGDB4UHF86dO4d58+ahoKAAWq0WDQ0NyMzMxKhRowarOowx5vQG5TmAsrIy+Pn5gYgA
      AAqFQvifiHD8+HFERkZCpVIBuPQYtMFggE6nG5A6mYxG6HQ6mIzGXtNZy3c03XAr09qG1kfG
      7TGbzUJejqSzbp/+KNPRvLjMgStzMPeNvnxPHE3Xn9/NgSzT2n5dn+C1p7d27m+DFgAAoKio
      CGFhYTBebDyj0QiRSIRJkyahtLQUHR0dcHd3F55qk8lkQrDobxKpFAqFAhJp701gLd/RdMOt
      TGsbisU9/9gTi8VCXo6ks26f/ijT0by4zIErczD3jb58TxxN15/fzYEs03rck17hs721c38b
      lACQnp4OAHBzc0NUVBS0Wi127NgBPz8/yGQyuLm5YcGCBTh69KiQljHG2MAa1KEgrI8oJyYm
      IjExUVju7e0NAHzwZ4yxQcS3gTLGmJPiAMAYY06KAwBjjDkpDgCMMeakOAAwxpiT4gDAGGNO
      igMAY4wNc62trThy5AgqKioAAKWlpTjx/7d3b09N3H0cx985EyJRVB4QlXJyPCFgR8YL287o
      OHZsO151etdOr7zqH9GLzvRfaKfT6T/Q6UXraFs1Ih2iIKEFUUExBQUkYMspMQk57HPhQyrW
      Q+DBZHE/rxsnZv39vrvu/j7ZZPe3165hGAYPHz5kcnISeHwX8Y0bN/JuVwEgImJy4XCYpqYm
      enp6iEajDA4OUl1dTTAYZHBwkO7ubgCGh4cJBoN5t6sAEBExmVQqRSqVys0bdPDgQWZmZvB4
      PIyNjbF//362b99OPB4HoKysjGg0yr1796irq8u7HwWAiIjJuFwuXC4XDocDgP7+fkZGRjh5
      8iRut5tEIoFhGLmJ41paWujr63vpPENPUwCIiJjc1atXyWQytLe3U1NTw++//865c+doaGgA
      oLS0lHA4zJ49e1bUbkHnAhIRkZU7ffr0stcffvghqVQKj8eTC4GPP/4YgKqqqrzb1RmAiMg6
      8+Q03f9XO2tQi4iIrEMKABERi1IAiIhYlAJARMSiFAAiIhalABARsSgFgIiIRSkAREQsSgEg
      ImJRCgAREYsqSABks1n6+voIhUJks1lisRidnZ3Mzs6STCaZnZ0FYGxsrBDliIgIBQqA0dFR
      Kioq8Pl8DAwMEAgEaG1t5dKlS8zPzzM6OkpPTw/JZLIQ5YiICAWaDbSuro5kMklXVxdHjx5l
      amoKn89HWVkZhmFw/fp1KisrOXToEPD4YQhLf76qUMik0ySTSTLp9AuXW+o/3+XM1ufSNlya
      N/xZstlsrq18llv6/1mLPvNtS32+uj4LuW+s5DjJd7m1PDZfZZ9L22/pIS/P86LtvNYKEgCx
      WIwzZ87wwQcf4PP5lm0Im81GY2MjY2NjZDIZHA4HLpcLePxQhLWY8e5ZHE4nHo8Hx0seoLDU
      f77Lma3PpW1otz//ZO/JmQXzWW7p/2ct+sy3LfX56vos5L6xkuMk3+XW8th8lX2m/xcaL3to
      y4u281orSE9dXV34fD66u7t58OABHo+Hy5cv5973er0cPXqUCxcuFKIcERGhQGcAx44dW/Z6
      27ZtxONxvF4vABUVFQC8++67hShHREQo4mWgS4O/iIgUh+4DEBExueHhYb799lsADMPgp59+
      4scff2RycpLe3l7a29sBmJ+f55tvvsm7XT0TWETE5LZs2UJtbS0A9+/fp6GhgT179nDhwgVK
      S0uJRqPLrqjMlwJARMRkli6ntdvtOBwOysvLc+/FYjH8fj92ux2bzQZAQ0MD4XCYRCJBaWlp
      3v3oKyAREZNxuVy4XC4cDse/3qusrGRkZISFhYXcJaV1dXX09fWxefPmFfWjABARMbne3l6y
      2SwdHR34fD5KS0vp6uriyJEj1NTU4HQ6aWxspKmpifr6+rzb1VdAIiIm9+abbz73dU1NDQDN
      zc0AKwoAnQGIiFiUAkBExKIUACIiFqUAEBGxKAWAiIhFKQBERCxKASAiYlEKABERi1IAiIhY
      lAJARMSiFAAiIhalABARsSgFgIiIRRUlAEKhEL/++iudnZ38/fffDA0NMT8/TzAYLEY5IiKm
      NjQ0xNmzZ7lw4QIAX331FY8ePQLg/Pnz9Pf3r6rdogTA9PQ0J06cYGFhgUwmQzwe5+LFi7S1
      tRWjHBERU/vzzz957733cDqdJBIJqqqq6O/vJ5vNEovFiMfjq2q3KAGw9BQbp9OJYRj09PTg
      9/txuVzFKEdExNSWngxWVlbGo0ePKCsrIxqNcufOHXbv3r3qdosSAIlEAsMwiMfj2Gw22tra
      cLlc3L9/vxjliIiYWjqdJp1OE4lE8Pv9APj9foaGhtixY8eq2y3KE8Ha2to4f/48zc3NlJaW
      UllZSXNzMwMDA+zcubMYJYmImNaRI0cIBALU19fjdDqpr69n27ZtlJaW4na72b59+6raLUoA
      VFZWcuLEidxrn88HwIEDB4pRjoiIqfn9/mVjZl1dHQBNTU0Aqz4LsBmGYTz5FwsLCywsLKy2
      zjWVTqdzvxesxvXw1HPf+0+5j8pyH5GZGFMzsecud6D+PwB5L2e2Puu2bWKD1014YoZYIvXM
      ZXwlLuqrywHyWi4aX+TPB7Nr0me+banPV9dnIfeNlRwn+S63lsfmWvf5pKWh1mazPfffFdq/
      AsBMJiYmqK6uXrP2UqnUuv6hWfUX13qvP5PJAP/8oLjerPftD/mtw1qPey+iG8FERCyqKL8B
      FIvdvr7zTvUX13qv30xfPazGet/+YL51sFQArNdT3yWqv7jWe/1mG3xWar1vfzDfOqzvPUJE
      RFbttQsAwzC4fft27vXNmzcJhUIYhkEymaSzs5Px8XEAJicnCQaDpFLPvrKhGFZS/507dwiF
      Qty7d69Y5f5LKpWip6eHgYEBAGZmZujs7MzNWzI4OJibtyQWi9HZ2cns7POvGim0ldQ/OTlJ
      KBTixo0bRav3WcbHx+ns7GRubg6AP/74I7dPPb1/Pbk+ZmAYBrdu3aKrq4tUKkUqlSIYDBKJ
      RIDHVwaGw2EAotEooVCIUChkqmN4bm6OK1eu5G5sHRkZ4dq1axiG8a/9q9hj0GsXAKFQKDep
      XDgcJpVKsXXrVrq7u2lvb6e1tZXe3l5isRhXr15l7969tLe3F7foJ+RbfyKRYHh4mMbGRioq
      Kopc9T/u3r1LbW0t8/PzjI+P097eTktLC4FAgPHxcWZmZnA4HNy8eZNAIEBrayuXLl0qdtk5
      K6n/+vXrNDY2UlNTU+yyc7LZLBMTEzQ3N/Pbb7/R39+P1+slEonkAmtp/3p6fcwgEongdrup
      q6sjGAwSCATYt28fwWCQbDZLe3t7LrBu377N1q1baWxsNNVXK+FwmKamJnp6eohGowwODlJd
      XU0wGFy2f92/f7/oY9BrFwCHDh3K3U2cyWRIpVL4fD6mp6fJZDIkk0nKy8u5desWb7zxBuXl
      5UWueLl865+cnGR6epru7m5isedfj1xoe/bswePxMDExwebNm9m4cSMbNmygpKSEkZERWlpa
      2LdvH+Pj43i9Xnw+H2VlZZjlauSV1B+Px7l27RqTk5PFLjvHbrfT1tbG0NAQVVVVRCIRdu/e
      TUtLC6Ojo8v2r6fXxwyqqqqora0lFArR0NCA3W5n06ZN7Ny5k7m5OY4fP05ZWRkAjx494s6d
      OwwNDZnq942DBw8yMzODx+NhbGyM/fv3s337duLx+LL9y263F30MMs9WewV27dpFWVkZY2Nj
      uFwujh07RjgcZnZ2lo0bN5JMJoHHn5rM6EX1l5aW8sknn3Ds2DGuXLlS7FJzpqenOX/+PKdO
      naKkpIR0Og083sZut5tEIkE6ncbhcOS2eyaTMc0VKiup/9SpUxw/ftx0XwH98ssv+P1+Dh06
      hM1mI5PJkEgkcLvdy5Z7en3MIJ1O8/3333P48GF27NiR+2DwrPrfeustjh8/jsPhMNU8Yv39
      /YyMjHDy5MncNjYMg2w2u2z/2rBhQ9HHoNfuKqDe3l7u3r2Ly+WitbWVqakpZmZmOHz4MBMT
      E6RSKbLZLLt27WJgYICLFy9SWVlZ7LJz8q1/w4YNnDt3Dq/Xa6qzmI6ODjZt2kRnZyetra1k
      MhkuX76M1+tl7969/PzzzzidTo4cOcLNmze5fPlysUteZiX1BwIB092YtPSp2O12E4vFOHDg
      AGfOnGFxcZH3339/2f7V1NREIBDIrY8ZLIVpX18ftbW1bNmyhUAgwPz8PB6Ph46ODu7evYvf
      78fpdDI/P08kEmHv3r1FrvwfV69eZdeuXbS3t/P222/zww8/5GbtfHr/evDgQVHHoNf+TuB4
      PI7L5cpNPR2LxfD5fNhsttwPqyUlJWtU8dp7Wf2Li4t4PJ5il/lchmGQSCTwer3A4094hmHk
      Bs54PJ57z4xeVn8ikcDj8ZjmDOZZFhcXcTgcz/yU//T6mNGLtvHi4iJOp9NUXwE9LZvNkkql
      nnmcPmsMKuSdwK99AIiIrCeaCkJERF45BYCIiEUpAERELEoBICJiUQoAERGLUgCIZWWzWUKh
      EAAPHz401ZxKIoWgABDLstvtnD17ltHRUb7++mvcbjcPHz6kq6uLTCZDLBbLTfWQTCaZmprK
      TUQm8jpQAIilnT59mi+//JJNmzaxdetWvvjiCyKRCN999x1DQ0PMzc3x+eef8+DBAz777DM6
      OjqKXbLImnntpoIQWYnKykoqKir46KOPmJub46+//iISiVBSUsLw8DBTU1NEo1EA3nnnHT79
      9NPiFiyyhnQGIJbn8XjweDyUl5dTXV1NPB7H7/czMjJCJpPJPUzdzFNWiKyGpoIQecKTc7Nk
      s1mSyaQGfikoTQUhUiQ2my03MZfdbtfgL681BYCIiEUpAERELEoBICJiUaYOgKVnf4qIWEUh
      xz1TXwUkIiKvjqnPAERE5NVRAIiIWJQCQETEohQAIiIWpQAQEbEoBYCIiEUpAERELEoBICJi
      UQoAERGLUgCIiFiUAkBExKIUACIiFqUAEBGxKAWAiIhFKQBERCxKASAiYlEKABERi1IAiIhY
      lAJARMSiFAAiIhalABARsSgFgIiIRSkAREQsSgEgImJRCgAREYtSAIiIWJQCQETEohQAIiIW
      pQAQEbEoBYCIiEUpAERELEoBICJiUQoAERGLUgCIiFiUAkBExKIUACIiFqUAEBGxqP8CpJJV
      4rp0OA4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dashboard 7' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3hUVfrA8e+dmkmFJBBDFZBu6B0E6SCIuAgqxa6r7IIuyupaKPqz4a5l
      lV3rqthw110LTUEQqVIEpHcIEAjpZTKZcu89vz9CRkIKVRKY9/M8PJrkztx3zp173nPPPfcc
      TSmlEEIIEXIslR2AEEKIyiEJQAghQpQkACGECFGSAIQQIkRJAhBCiBAlCUAIIUKUJAAhhAhR
      kgCEECJESQIQQogQJQlACCFClCQAIYQIUZIAhBAiREkCEEKIECUJQAghQpQkACGECFGSAIQQ
      IkRJAhBCiBAlCUAIIUKUJAAhhAhRkgCEECJESQIQQogQJQlACCFClCQAIYQIUZIAhBAiREkC
      EEKIECUJQAghQpQkACGECFGSAIQQIkRJAhBCiBAlCUAIIUKUJAAhhAhRkgCEECJESQIQQogQ
      JQlACCFClCQAIYQIUZWaAL766is++eQTZs+ezbJlyzAMo8LtDcNAKQWAaZpcd911wZ8vZzk5
      Odxyyy1n/bqTy+vYsWNMmTLlQod2Wucau7iwx2/z5s38+c9/vlChictEpSaAiRMnMmfOHL7/
      /nvuuusuHnjggQq3j4yMxOPxBH9esGBBSCQAr9fL4sWLz/p1J5eXaZp4vd4LHdppnWvs4sIe
      v4yMDNasWXOhQhOXiUrvApo6dSrvvvsub7/9NitWrACKWjv33XcfQ4YM4cMPPwRg+vTp+P1+
      HnzwQV588cXg69977z2GDx/OtGnTSiQDr9fLE088weDBg3nttddQSrFr1y6efvpppk+fzrBh
      w/j8888r3Pbll19m9erVTJw4EYA5c+YwZswYJkyYwEsvvYSu60yYMIHjx48DsGrVKt58881g
      DHPnzmXGjBmMGTOGe+65h6NHjwLw8ssvs2XLFqZPn87ChQvL/LwA8+fPZ+zYsfzlL38J/u6L
      L75g4cKFACxfvpyPP/4YgG3btnHXXXcxcuRI1q1bV6q8XC4XFkvR4fb5fEybNo1BgwYxdepU
      fD4fSinGjx8fLM+pU6eWKM/c3FyeeOIJRowYwQMPPMCxY8eCn+Wdd95h9OjR3HnnnWRnZ5cb
      +7kcm8OHD3PXXXcxbNgwvvvuu2C5zp07l1mzZvH666+XeWx2797NY489FvwMH3zwQYlEpOs6
      r776KsOHD+fxxx8HYM2aNYwcOZKRI0eyevXq4L7+/ve/84c//IHf/e53/PLLLwD8+OOPjB07
      lnHjxrFgwQIKCwt58MEHg+//2GOPkZ2dza5du5gyZQqPPPIIw4cP54svvuChhx7ixhtvZP36
      9cFyf+mllxg+fDgffPBBmd/38z1+APn5+UybNo1hw4bxn//8B4DvvvuOO+64gxEjRvDRRx8B
      8Oqrr7Ju3ToAkpOTg1cey5cv53e/+x1jxoxh7969pY6ruPRUegL49NNPeeaZZ3jkkUd45JFH
      ALjllluIiopi4sSJTJkyhe+//55rrrkGi8VC//796dq1a/D1R44cYfTo0bz44oscPHgw+Pun
      n36a/fv38/zzz/PBBx8wb948UlJSeOONN4iNjaV79+7B/ZW37T/+8Q/Gjh1LfHw8P/30E3fc
      cQeDBg2iTZs2vPbaa9hsNo4cORKstN944w1M0wzGsHbtWubOncvYsWPxeDzBK5yvv/6a22+/
      nbVr11K9evUyP+/GjRsZO3YsAwYMoGfPnsH3XLVqFRs2bABg+/btLF26lJycHPr27UubNm24
      6667CAQCpcrL7XYHK5dnn32WFStW8Je//IXVq1fzzDPPoJTin//8JwcPHmT06NG89NJL7N+/
      P7jfvLw8YmNjmThxIm63O1gpfP311yxatIgRI0awYcMG/ve//5Ub+7kcm5tvvpmWLVvypz/9
      idtuu4309HTWrl3LU089xUsvvURCQkKZx6Z+/fq8//77rFu3DtM0efLJJ0lMTAzGMGPGDD7/
      /HMmTJhAgwYNyMrKYsiQIQwZMoTrr7+e66+/nszMTNauXcsHH3xAt27dcLlc/PWvfwXgpptu
      YtiwYYwePZrMzEwCgQBvv/128P1nzZqF2+0mJSWFd999lxYtWpCQkMDDDz9M27ZtiY6O5pVX
      XgmWe0REBKNHj+ahhx5iw4YNF/z4FZ8r8fHxdO3alcmTJwOQkpLCjTfeyB133MEf//hHDh06
      hNvt5t133wWKGhwpKSlkZGRw00038fvf/57u3btz6623ljqu4hKkKlHdunXVAw88oCZNmqS6
      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
      4osvkpCQQKNGjVi3bh1dunShY8eO9OjRA6fTWeJ7VKNGjWBlnpCQQIsWLXj66adp06YNHo+H
      1157jYYNG5b6vp/v8QNKlK/T6aRHjx4kJSUxb948mjRpQv/+/enQoQPR0dHUqVOH1NRU7rvv
      PmrXrh08TmvWrGH//v3069ePli1bBvclLk2aOtM+lRC3ePFiZs6cSePGjZk3bx5DhgzhxRdf
      ZNGiRbz44otce+21PPnkkyVeM2XKFDRNY/r06ZUUdWgo79i8++67wf/26tWrssMsk2maWK1W
      DMOQLhVx0VV6F9ClokePHiilOHz4MIMHDw5WKHa7nfHjx3PDDTeUes2wYcPkpL4Iyjs24eHh
      fPjhh3Tr1q2SIyyfpmm8/fbb0pIWlUKuAIQQIkRJ81QIIUKUJAAhhAhRIZkAzmZiLdM0Szzd
      ++ijjwanAzhTr7zyCvPnzz+r15y637IsW7aMZ5999qze93RmzpzJnDlzLuh7CiGqppBMAGcz
      sdaMGTN47LHHgj//9NNPZGVlndX+tm7dyqFDh87qNafutyxHjx5l06ZNZ/W+p7Nly5azjlUI
      cWmq1FFA27Zt49VXX8Xv99OoUSPGjx/PTz/9BEBWVha5ublMmDCBjz76iNmzZ1OrVi2mT5+O
      UorXX3+dF154gZSUFJ599lmmTp1KQkICkydP5oknnuDxxx+nffv2zJkzh9atWzNt2rTgSIuT
      J9aaO3cu+/fvZ9euXRw7doypU6fSunVrANavX89XX32F1+vF7XYzfvx4oOgp0HfeeYewsDBe
      fvllqlWrxvLly3nllVdwuVxMnz6dq666qszP/MYbb7BixQqsVisTJkygS5cuHDx4kBdffJHM
      zEx69OhBt27dSu336quvBoqmCP7HP/7BypUrycvLC47zLmv/uq7zxhtvsHTpUlq0aMFzzz1X
      5v5zcnJ44YUXSE5OZufOncFx6mW9548//sg777yDpmmMHj36tA/kCSGqrkq7AsjPz6dv377U
      r1+fW2+9lb///e/k5OSUmuhryZIlPPHEE0ycOJFq1aoxatQoatasyT/+8Q9SUlJYtGgR//73
      v1myZAkHDhxg9uzZREVFVTgx1skTa5U32RdArVq1aNy4cfABo5o1awKwc+dORowYwfr16/ny
      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
      +Oc//xn8/VNPPcUTTzxBly5dUEoxceJEwsPDqVGjBm+99RYABQUFjB07lvj4eAYNGhR831de
      eYXnnnsOgK1bt9KnTx8Adu7cSffu3XG5XPTt25cFCxYwdepU5syZQ+PGjZk5cyZbtmzh5Zdf
      BiAjI4MBAwbgcDho0qQJq1atqrCsTjZz5kxiYmJo3Lgxa9euZdu2bVx99dW43W4A3nrrLSZM
      mBDcvqwyXbNmDQ0bNiQ2Npabbrop2K309NNPU7t2berVq0evXr04cODABYtbCHHmqnJ3b7kJ
      4Ouvv2bcuHGMGzeOadOmAXDkyBHi4uJYvnw5999/P//+9785evQokydPZt26dezatYuXXnqJ
      AwcO4PF4WLduHU899RRTp07FZrMxduxYpkyZwsGDB3E6neTl5TFgwABef/11TNNk8eLFBAIB
      GjduHIwjMzMTTdNYt24dH3zwAZMmTSInJ4fMzEzee+89Vq1axdNPP83XX3/NvHnzSE5OZtGi
      RTzyyCMcOHCAl19+mb1797Jp0yZmzZpV4n3T09MB8Pl8HDx4EIDbb7+d3r17k52dzQsvvEDv
      3r15+OGH6d+/PytWrOCOO+6goKCAI0eOAPB///d/REZG4vF4mDRpErfddhtKqTLL6lS9evXi
      yJEjDB06lMmTJ9OiRQssFktw2/fff5+ePXsGtz+1TGvUqME999zD888/T1ZWFsePH+fzzz9n
      0aJFvPHGG8yZM4dffvmFzZs3EwgELljcourLzs4u0Y07ePBgvvvuu8oOq8q7XLp79+/fT716
      9cjIyKhwu3Kv/Rs2bBhs+deoUSP4+549e1K/fn2uuuoq9u3bx6ZNm3C5XPzrX/8CIDIyks2b
      N5OQkIBSim+//ZZ69eqxYsUKEhISGD16dHA7gOuvv54JEyawePFi/v3vf3PbbbeV6r5p2LAh
      NWrU4PrrrycuLo79+/cDUL9+fb799lucTiePPfYYI0aMIDExkcTERDp16sTPP//MypUrGT9+
      PHXq1MHr9VZYGMUV7Pfff09YWBgdO3YEIDo6mrCwMBISEkq95qeffuKpp54iLCyMe++9lwkT
      JgQL/dSyOtXVV19NVFQUd911F59++imapvHAAw/wr3/9i759+7J7926uv/76Eq85uUwLCgrY
      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
      /DIAw8PD7N69u7Yqe+K5z5w5w759+3jllVfmxZbprokxpvb7xXbNJcYYXnvtNfbu3UsURURR
      xJ49e+jv7weShYvHjh0DmNcxMjo6ytNPP01fXx8Ab775Js899xzGmEs+szNnzrBnz555GaeW
      5mPJCsD4+Dh79+7l1VdfBWDXrl284x3vYNeuXQwNDdHX18dNN93Ezp07OXz4MMuWLWPdunVz
      fuumtebUqVPcfvvt/OpXv+Kll14ik8nQ39/PmTNn2LFjB5s3b+YXv/gFJ0+eZHh4GMdxanbP
      JUePHmXNmjWMjY1x8uRJdu7cyaZNm9ixY8cl5z5w4ADr1q3jhhtumHM7Zrom+/btY8+ePQDz
      ek36+/vxfZ8bb7yRPXv2sGPHDm655Rb27NmD1pqdO3fWhGc+x8ixY8e47bbbeP7558nn8xw8
      eJBrr72WPXv2XPCZ9fX18cwzz7Bx40Z27tw5pzY0OhcHBa+++ir79u3DGEO5XGb37t2cPHkS
      gNdff519+/bx1ltvzZs9VxJMXRzkzRdXEmj++te/Zt++fUtXAFpbW3nXu95Vm1RUSlEul/F9
      n7GxMeI4xnEcxsfHKRaLvP766xw6dGjOJ9yklNx5550cOnSIFStW0N/fz/r169m0aRPHjx8n
      k8mQzWZpbW3lzTffZNOmTdxyyy21wTyXbNiwgVQqxalTp+jq6qK9vZ1cLkc6nb7k3KVSieee
      e25eGn7NdE3e8Y53cP311wPM6zVZsWIFa9asYd++faxduxYpJR0dHVx//fWMjo6ybds2Wltb
      AeZ1jLz97W9neHiYVCrFiRMnuPXWW1m1ahWlUumCz0xKyerVq+ns7JzT8y8GJgYFx44dI4oi
      li1bxrPPPsvOnTvZvHkz+/fvJwgCjhw5wrp16+jp6Zk3e64kmJoY5M0XVxJoFgoFhoeHWbdu
      3dIVgIv5rd/6LQ4fPkyhUGDVqlWsXbuWY8eO4bou9913H9u2bcNxnNpt+Fzy+OOP09bWxjve
      8Q6EECilCIIA3/drEzRKKXzfJwiCmjjNNQMDAzzxxBM8+uijpNNp4jgGksFz8bkfffRRtm3b
      Nm8poOmuyUTm85rEccx3v/td3vnOd3LdddfVFl1NZsd8jpGXXnqJN998k0ceeaT2fo0xaK0v
      +MxyuRzlchk4P7HXLEwMCpRSRFFENptlYGCgFtx1dnZy5swZBgYGePbZZykUCvNmz5UEUxOD
      vPmacr2SQHN4eJihoSH279+/dMtAz507xyuvvMLRo0e54YYbajne7u5uPM/jrbfeqkVYv/71
      rxkbG6O/v5+NGzfOqR3VyNH3fQqFAm9729v48Y9/TBiGvO9972NsbIxdu3YBsHHjRn72s5/h
      ui5btmyZUzsAfvnLX9LR0cHu3bvZvHkzSil27dpFJpO55Nw7duyYt1rmma7J/v37OXr0KJ7n
      cdttt7Fjx455uSZVcXvxxRdZs2YN3d3d7Nixg7GxMVKpFL/85S85evQobW1tuK47b2PkmWee
      qaUj77//fr7//e/z+uuvs379+ks+s9OnT/Pkk0+yfPnyObVhMXHTTTdx6NAhTpw4ged5PPDA
      A7z88suMjIxw88038/GPfxylFD/5yU/4wAc+MC82DAwM8Ktf/YpHH30Uz/MmDaY8z8NxnNrf
      lFLzWub8+OOPc+ONN3LzzTezffv2KQPN6667jt/5nd9hbGyseaqAtNaUSiWy2SwA5XIZIUQt
      0gvDENd1F6TmOgxDHMepRbSlUolMJgMkUakxZkEWkhhjCIJgynMHQUAqlVqQ2vyLr8lEFvKa
      TPeeF2qMaK2JoohUKnXJ36o573Q6Pa82NBr79+/n+eefZ8OGDWzevJkXX3yR4eFh3vnOd1Io
      FOjv72dgYIBt27bVgprq3f188L3vfY+Ojg6klGzevJlnnnmGlpYWpJS8/e1vvyCYqs5dBUHA
      ww8/PC/2FItFvvnNb3LrrbfS0dHBtddeyzPPPFMLqp577rmaDRs3buTw4cOEYdg8AmCxWJYO
      pVIJz/NwXRdjDIVCgWw2ixACYwxhGE4qoPPFTMHUxCBvobicQNMKgMVisTQpTTMJbLFYLJYL
      sQJgsVgsTYoVAIvFYmlSrABYLBZLk2IFwAIkqyvPnTsHJMvELRbL0scKgAVINov4+te/zvHj
      x3nyyScxxrB///5a+4WjR4+yf/9+tNacOHGitprQYrE0PsPDwxw5cgRIeiWNj48DVgAsFVav
      Xk1LSwt/93d/xx/8wR/w/e9/n9dee42vfvWrFIvF2kKcH/zgB/zzP/8zX/3qV+e9uZXFYpkb
      crkcX/va1yiVSvzLv/wL2WyWo0ePWgGwnOcjH/kIK1eupKuri8OHDzM4OEhPTw8nTpzgwIED
      jI2NMTQ0hBCCL3zhC/T29tbbZIvFchl4nsdv//Zv86lPfYrHHnuMN954g29961tWACznSaVS
      tdWTW7du5cyZM7iui1KKgYGBWvsMKWXTtSKwWBY7Dz74IL7vc++993L06FEKhYJdCWyZmiiK
      EELgui7FYpFMJtMwe/ZaLJYr53Of+xxf+cpXOHv2LF/84hetAFgsFkszorW2AmCxWCzNip0D
      sFgslibFCoDFYrE0KVYALBaLpUmxAmCxWCxNihUAi8ViaVKsAFgsFkuTYgXAYrFYmhQrABaL
      xdKkWAGwWCyWJsUKgMVisTQpVgAsFoulSbECYLFYLE2KFQCLxWJpUqwAWCwWS5NiBcBisVia
      FCsAFovF0qRYAbBYLJYmxQqAxWKxNClWACwWi6VJsQJgsVgsTYoVAIvFYmlSrABYLBZLk2IF
      wGKxWJoUKwAWi8XSpFgBsFgslibFCoDFYrE0KVYALBaLpUmxAmCxWCxNihUAi8ViaVKsAFgs
      FkuTYgXAYrFYmpT/BxyyLiDEQJBuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard 9' width='384'>
      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
      68nMzES3bt0QEBCAtWvXYtSoUY8c16OOBW0FyCZMmICUlBQ4Oztj9OjRwry1xc+6dOmCbt26
      ISMjA1KpFKNHj8bGjRsRGRkJQHu/1y0yqC2+iRMnwsHBASkpKZg/f36DOGt/rjvthx9+wIkT
      J7BgwYIGt9t6eHhg/vz58PLygpOTE7Zv347Fixfjq6++go+PDz7//HMsWbIEJiYm8PLygoOD
      A3r37o2KiooG66q7zgEDBmD37t1wc3MT/oa09bGmfqs/duzs7LBp0yYsXLhQWJb+f9G9uuNJ
      W5wvvvgiWrduDUdHRzg5OTV45WhTxeaYZvr6+rC1tcWvv/6K3r17Iy4uDvn5+Th+/DgUCgVS
      U1Px4MEDXL58GUePHsXRo0cbv038aZ5fUqlUwgWhpubLzs6mqqqqBr+rvXhb93cKhYIyMjKo
      srKSiIgePnxI2dnZasspFAoqLy9vdN311zt37lzasmXLI29fc+Xl5VFpaanG35WWlqpdAH1c
      +fn5lJ6eLryZSqVSUWZmJuXm5mpdJjs7W3g5TGOqq6vp3r17jZ4j1uZRx4I2CoWC7t27R0ql
      skFMWVlZatNLS0uFc9x1NdbvmuILCgqi6Ohoys/Pf6xYjx8/Tg8fPqR79+6Ru7u72sX+WmVl
      ZWr7uaqqiu7evas2zisrKyk1NbXBNmtTXl5OGRkZDbZbE039Vn/s9OjRgxITE9WW0zSeGosz
      Pz9fa5+z5lGpVMILsPbt20enT5+m33//nXJzc4X/HzlyhA4dOtTkWOBaQHWcOHECQUFB/O2E
      AWh+cb33338fO3fuBFDzrEHtqZK/k6qqKly8eFG4zsWeLdHR0QgLC0NiYiLS0tKgp6eHzp07
      49ixY7C2toZSqYREIkFoaGij7XACYIyxvzGFQgGpVAqpVIrKykro6+s/ciluTgCMMSZSf7tS
      EIwxxnTjL00ARIQ//vgDK1euxI4dO1BdXY13330XV69ebTDvxx9/3OT90LpWUFDQ4FbSnJwc
      7N2795Hb+Prrr7F3715kZmbiww8/fKz1q1QqDB48+KkVGvvxxx9x/Pjxp9K2rtT239OkrR90
      se6tW7dqrIf05ZdfNni16OPSNj7qjrUjR47gs88+a7ItIlK7Qyk+Ph7vvPPOE8XH/n7+0gQw
      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
      bNu2TW2ZdevWITIyUphGRFi2bBm8vb3RrVs3REdH6zROxlgd1EzHjx8nIyMjWrVqFR05coQ+
      /vhjIiKaO3cueXt70+nTp2n79u1kZmZGu3btIiKi8PBwWrJkCZ09e5bmz59Pfn5+Gtuuqqp6
      rFhKS0vpxIkTVFlZ+VjLnT17lrKzs4X/V1dXk0qleqw2Hpcu1lFdXf1Ey69Zs4bGjx//RG3U
      d+TIEerZsyft3buXDh8+TDY2NrR7925KTk4muVxOW7ZsoS1btpBcLqfk5GQqKSkhZ2dncnBw
      IDc3N6GdrVu3kru7O505c4a+/PJLat26NeXk5Og0VsZYjWYngLCwMFqwYIHatLKyMpLL5RQb
      GytMW758OYWGhhIRUWFhoTB9+/bt5Orqqrb8gwcPKCgoiExMTKhLly6UkpJCRERdunShYcOG
      UatWrahbt240ffp0at26Nbm5uVFmZiYVFBSQm5sbKZVKyszMpODgYGrTpg15eHhQTEyMxmlE
      REOHDqXY2FhSqVQ0d+5c0tfXJ0tLS1q/fj0REV29epW6detGQ4YMIblcTn379qXKyko6efIk
      derUidq0aUMBAQH08OFDYRuuXr1Kzz33HAUEBFCrVq3o5ZdfJqVSSUqlUojbysqKDh06RERE
      r7zyCv300080YsQImjdvnlp/LFmyhNq1a0cWFha0d+9eysnJobCwMJJIJOTu7k6nT58mIqIX
      XniBoqOjiYho06ZN9N577wltR0ZGUocOHah169a0fft2OnDgAFlaWpKJiQm5ubnRmjVr6Jtv
      vqGFCxfSBx98QAEBATRjxgxatWoVEdUk465du1JSUlKj46GkpIQUCgUR1SSorl270vfff09f
      ffUVhYSECPOFhITQV199ReXl5bR//346ceKEWgJ47bXXaOHChcL/fX19aevWrY2umzHWPM0+
      BXTt2jWEhoaqTbt37x6qq6vh7+8vTAsICEBSUhIAwNTUFESE7777Dq+88gqWLFmitvyyZcvg
      5eWFoqIiDBkyBB999BGAmlMWEydORGJiIpKTk+Hl5YUbN25AKpXizJkzUCqVuH37NgBgx44d
      MDAwQE5ODnbv3o22bdtqnFYbb3l5OXbv3o39+/cjNTUV0dHReOutt3D37l2UlZUhNTUVb775
      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
      EKs4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Energy production per energy type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDP/Region' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='Hoja 10' width='384'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Production per region' width='192'>
      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
      084AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Production per region (2)' width='384'>
      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
      3/jGN/iP//gP+vv78Tyv7FaI53mMjo7y1ltv8dhjjzEzM5Nkm2tububcuXPMzc0lZZZKpZic
      nKS5uRkIy25gYKAsGWKFefjwYSYmJnj66ac5f/482WwWIQS1tbVMTk5SU1ODEIJcLkehUMDz
      PKampnjjjTfo7u4ue5l0z/OYnJzk9ddf55vf/CZa66RlE9/zxo0biVdbX1/PzMwMR48e5ZFH
      HuHAgQNl3R/CIY2u6/K73/2O3t5efvSjH3H06NHkOTc1NTE1NYXrugghSKVSGGOYmJjg3Llz
      XLlyhfHxcZ599llqamrKKou5uTneeOMN2tvbaWxsxHVdHMdJZt5OTU3R0tKSyHX58mW6urr4
      7//+bwC++93vLklZDA4O8v777/PEE09w6dKlRIc0NzcnRriUqamppH42NTUxMjKyaBnuGQNw
      K83Nzfzwhz9kfHyc++67j2w2y44dO7h06RJaa1atWoWUkjfffJO6ujr+/M//fFlmYT7yyCPJ
      PZubm2loaOC5555jdHSUpqYmZmZmOHToEE1NTRw8eJCJiQk6OjpYvXr1ksngeR7PP/88o6Oj
      5HI5Ll26RHd3N21tbczOziYvwP33389TTz2FMYYXXnihbANwKw888ADt7e3Mzs7S0tJCfX09
      P/7xjxkeHsZ1XcbGxpIW0/r163nvvfcYGhoqq0U0PDzM22+/zXPPPUdNTQ2jo6NJn8T09DQ1
      NTX4vs/c3BzpdBrf96mrq0uUfj6fJ51Ol/W745Snra2t/OAHP0BKieM4+L6P4zjMzs5SV1eX
      5MMuFos4jsP09DS//OUveeqpp1i1alXZLbLJyUn27dvHM888Q2trK0qpBXk4PM+jpqaG6elp
      mpubmZ2dZXJykuHhYY4ePcq5c+d45513ePzxx8uS44MPPuDGjRs8//zzuK5LOp3+wjOJ4+vx
      PpfL8dBDD9HR0cHx48c5f/48DzzwwKJl8H2fX/ziFzz22GNJ/VJKobVGCIHWmpqaGq5cuQLA
      zZs3yWaz9Pb28pOf/ASlFPv27aOjo6MsvXHmzBl6enp47rnnyGazTE5OJv1OcVncSk1NTaL0
      Y7kWyz3TCTw+Ps7IyAhTU1OMjIxQKBSYmJigpqaGzz//nM7OTiYmJnAch4mJCVpaWigWi5w9
      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
      ZYXy/7ewCGpedwp6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Renewable per region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2daXecN3bnfwCerXauoihR+2JZdrd7SXe6Mz2TnMmLzElOvsTkA86rSSY9
      SyY50+nFsd12225bkiVREilxK5K1PDuAeVEkZcUiJYpFqqTC76hYUql46+Ip/AE8F8CFsNZa
      HI4xRb5uBxyO18nQBKC1HgkbxhiMMSPhyzBsWGtHxpdRKc8wr8lI9QCjNBobhi+uPMdnZ1g2
      RkoADsdJ4wTgGGucABxjjROAY6xxAnCMNd5h3pz2trm7+Aiv0mB+ssrKVszli+eR4rjccziO
      F3HYmWBTJNxefILJE2YnqpTRLHOTVYwxSHm0DkVrjVLqSDastYPw1gj44soz2r5orQ/XAwAs
      PXzImYVLPF68TxRFbGu9N/l01NjssCZavv38On0ZVnl2H6/bl2HYAIYyUTmsyc5DCsAiwzqN
      yKNf9bi73ObGu3MoNRgDDaN18LxDa/IZdi/MUVvMYfgyDBvWWowxI3Fth2FjV8hHsTMMG7sc
      0oLg7NkzAJw+d4nT5478+Q7Ha8VFgRxjjROAY6xxAnCMNU4AjrHGCcAx1jgBOMYaJwDHWOME
      4BhrnAAcY40TgGOscQJwjDVOAI6xxgnAMdY4ATjGGicAx1jjBOAYa5wAHGONE4BjrHECcIw1
      h9oTbHXGF1/eYmLmNCbZpN1Jeee996n4TkeON5NDCWBz6QG90uL1e0gjuXZhjvZml9PTdbTW
      I5G6Y9eHo6bNGJU0Im9rWpSyLF+7jUOnRYlqVSZMHd1vY6xlu2PxJ5p7KTtGIXWHS4tyfL4M
      w8YbnRalOn2WqfwR/vQlqkqzupVwplU5shMOx+vi0BI6Nb+w9/dz1cZQnXE4Thp39+oYa5wA
      HGONE4BjrHECcIw1TgCOscYJwDHWOAE4xhonAMdY4wTgGGucABxjjROAY6xxAnCMNU4AjrHG
      CcAx1jgBOMYaJwDHWOME4BhrnAAcY80hBWDYWFtjq9OjzFO2Or3j8crhOCEOJQATb/DNUhsL
      3L51i7Wl+2x0s2NyzeE4fg6XGMtvMF3f4t69+zQqVc6earIZJ+iq5/ICHZMNlxfo+GwcOi9Q
      mWekaYYfhCib8dXdR1x/7wOXF+gYbbi8QMdjY5dDWQhrLd57v3XkD3U4RgUXBXKMNU4AjrHG
      CcAx1jgBOMYaJwDHWOME4BhrnAAcY40TgGOscQJwjDVOAI6xZt+lEB/96//m/uMtzl65yc9+
      8O5J+uRwnBj79gC9bp9qrUYU+Cfpj8NxouwrgIWFM7TX1zHi6KsQHY5RZV8BLK1u8Td/+zds
      Pnl0kv44HCfKvgL46Z/8mC/+8CU//ulPT9Ifh+NEee5N8INbn/L14gpra+sUXpW/+NkPT9ov
      h+NEeG4PML9wkeWlR5w/t0AW90/aJ4fjRNjsps/vAVRQ4dq161x95wZH3IrqcIwcWV7yz58u
      8vndlecLQHoBVqdkacKduw+Zm505aR8djqFjreXhaodffvgNcVogynj/ibBrly/xm48+4Xs/
      +bNnXl99dJvVOKKh+rS7GTfe+x4V300oO0abvND8y2eLfH53Faxmdvv3/Dy/vb8AitIwPz/H
      nVtfc+nMoAco0x7biUXaklx7XL84Rbvd4fRMw6VFOSYbLi3K0W0srXf55Yd3idMc0V/jT/q/
      4h3rY9WN/QWw1V7jwcNl5i89XQYR9/ukSY/ljZxzs3XabU00fcGlRTlGGy4tyqvbKErNv37+
      kE+/WcGUBTOdz/hPxS3q8iKoGsaY5wvg0Tef8+Fnt2g06iRJuvd6c3qO703NcCUt8CjZ6KTM
      tqJXLojDcRxYa3nS7vGPv/uGTj/Dxmv8pP8rbliFUDdBiL33PlcAC1fe5/rDZZqnzvB4ZevZ
      /xSKamXQGs1X6sdXCofjEFhridOCPy6u88cH62xsx2BKZjuf8R/Lr6lzCbzad35v3z7kBz/8
      If/9H/8vf/5Xf3Osjjscr4q1Fm0s959s8emdFZY3uoPhkbXIeI0fJ//KDSN3Wv3nD4n3Xw79
      ye/5+Z/9KX/45GP+8i9+cWyFcDgOi7Wwstnnj4sb3F5qkxcaJQU66TBbPuRKfosrNkbZC+A1
      DrS1rwCmGjU+/exzzl19b+gFcDhehawo+frBBp99s8Ladh9PKXSRUUuXuVze5rpZp1ZWQcyD
      iECJF9rcVwDbW5vMzF/g1OTBCnI4jhNrLZ1+xse3H/P1gw3yUoO1iP4aF+xdruaLnMYHMwvy
      5ktV+m+zrwCqkc8v/+ff87O//FtOz04duSAOx2FodxLuLm+yvNHl7vImWEMlX+OaWWIy3uKq
      10dmFfBuDMb3rxgl3lcAsQ35u7/7r/z+088pimv4/tFjyA7HQRhrebTa4aOvH/NwbRsB6Dxh
      Jn/A9eyPXLYF0sxh5Qy2nIYhrEA44B6gwm9/9yG6LFl8vMHV83NH/jCHYz82tmP+10f3WF7v
      4imBjdtcLL7iRvGAWVvDchZkOGjph7hCc18BXLz+Pd75foQQhxtTORwvi7WW5fUuv/tqmcUn
      WwgMUbzEjfxzboo+fjEB6l2sPL46uK8Alhdv8fXdRwS1KX7xZz8l9N3eYMdwsMCjtQ6//uIR
      y+tdBBYZr/LD5He8YxI8sQDyLHjH3/juK4Ck30MLn/NnZ7j9zT3ev3H12J1xvN3sLkf+f39Y
      ZGUzRgnwe0vciD/hPdHH5zx4J7u6YF8BaK3J4g4ffvgR//Ev//okfXK8ZewOdX71+UOW17tY
      XVCNH3Iz/ox3hMZT5wZx+9cw3N5XAJ0442d/9nO++uNXLN+7zblTPz5JvxxvAdZaNjoJv/rD
      AxafbGNMSbV7lw/iT7msIpS3MLixfY3sK4BWo8HS0hN+9OOf4Pmv10nHm8d2L+XXXzziqwfr
      gxh+9y4/jD/ligyx/hWkHI2w+v73AJ01PlvcxnhVlxrR8dJ044zffLnEl/fXsKYk6t7nBzsV
      XwVXsMihhjGPyv7zAHMLXItOM9twrb9jgAW0MWS5phtntLsp2/2UXpLTS3K6/ZxOnFKWGr+7
      yA/iT7gqfLzgEoidqjZClR8OEEB7a4tHd++RJNe5cuXySfrkeAWstWSFpp/kbPcztnsp23FG
      L87ppTnWGKSUhL5HNfKpRcHOs0+tElANPayFXpLTTwuSrKCfFsRpQZwVZHlJkhV0k5yiHOy6
      85VEKbm3PVGYgjBd4Ye9T3hXSpR/8WnFH1H29e7yhYusbcZcvHjxBN1xvIjdir7dS3nS7vGk
      3WOzm7LVS8lLTakNUgzeJ6zBljlSpwhbYFQVIwOU7wNyMMkpwBi71zALAfLbE0876+vBoMsC
      USZEZZ+q6dLQ29TKbRompkVJXQjqBCj/PMg3I6nyvgK4c3+RmzdvUmu6XV/DwFpLXmp68aCF
      3uoNhg5FaVBSEPiKwFODZ18RBR5R4OErSS/JeNzus9lJWNuK6cQZeakxusTmMTOqS7Pcxs+3
      qRQd6jalajU1DHUhCIRCISisJsbQsxALSSxD+l6DxGtB1BqIpujjl33CskdFJ4Qmp2I1oRBU
      gJpUBCJAWB9EDcQU+Kf33XAy6uy/GtQTfPTxxyxcucmp6QkAdJFy585d6pOnqHklK1sJ165c
      4hhnqt8Ydit4N87Z2I5pdxLa3ZhuUtBPcnpJQVGUaGMQVuNR4pkMjxKNQguFRoFQWCExVmCR
      WABrCMmJ9DbNcoNLxQbNosOsLJhSCs9GYMOdNfCnnh127MTWjTFUpKRiLdN7/6mhTKBYh/gh
      YEBUQYQgmuDNAk+/XGPtUJINjBLPFcDnn33E5atXic68S9J+uPe6UD5nzs5zd/ExXU8yN1Vl
      pd3j9FRtKKk7hmXj28/H4Yu1lu1+xuLKNu1OwmY3od1JSPOSPC+wOkcWMRXToWa6tHSX+bJH
      zaTUKakJS1VIAiRS+FirMWgMlhJLbi2FFWgBOYLQGlpSEokQJapY0YRwmt3MlgeW9Ftl+G55
      FKg68PK9/FGv6zDtDMPGcwWQbq/x3z76iO1cMb9wjg8+GLwupSLu9RBSIKXE83ysMRhj9tJ3
      HIVh2RjWxf33vuSF5qsH63y5uM7j9Q4661G1PZq6zVS2Rkv3mbAFk0JTkwE+EUJWsPigZrEH
      pPHYXWkVAt/duv2UPY/s3o+XLs9RGaXKfyQ71tJJtliu5Aj7HCtmp1IDCClRO91e1u9w5/5D
      wlqLZmBY2Yx599138KRAa33k3DVlWY5MXqBdX0ptWF7v8tndFb55tIGJN5lP73A1fcSlUEDp
      IURj0JIKHxDPDDuO6seuoI9qZxi+jEp5XsWGtZY8i3ms+jyYsmycaVB68vkCeBXeFgHsZhrY
      7MR89bDN1w/W2dxsM50ucjm+y1VlqKppkM0Xrl0ZlQozLF9GpTwva2PQi2u2sm0WmwWPT0ek
      E5VnGqjRDtIeE7uhxG48iMZs9zK2+ymdfkYnzumnOb1en0b2mAv9W/w5MdNeE6Lzb2y0Y5ww
      ZUma9VkKEx7OSLZON7D7LOcfGwEYa1nd7PPl/TXuLm/S6acUeYYyGYHuU9Fd6uU2k2WHc2XM
      KVly2qshw7mRn8wZZ6wxFEVGrBM2vYJ21bI5KelNV9HR5At76bf6m92N1nx5f407j9qsbGxR
      jx9wOb1DS6c0sTSkIJARvgwGIUB/CoK5tzLk96ZjrcUaQ5b12TYJmzVo12F7wierh5jw8HNW
      b6UAtnopd5Y2ufVwg+W1TerpYxb6d/iR6TLv1xHBPLzo9MsRW7MyjlhrMWVBnPXY8grWa5Z2
      XdCdrlBUWsNJgDwEP0eGJCv4p0/u89X9Fbxknfne1/wXvc6830SF0yDcxv5RxlpLWWT0ij5t
      v2CjDptzHslEBe3X2J1x3U1/+KqUZUHe7xH17dshgN2tdv/jt7cxy5/zi+QrznkhoT8D4fXX
      7Z5jH3YDkHnaZ0v3eTRpWTvtk0xUMMFwE7JZa0mzPrKTMZNGzIk5FPLNF8DuyR8ff/4N72z+
      lj/1wK9edtksRhhd5GyXfdbDgpWGpX2xStGYOJYtkaUuyHpd6j3BVd2iqU7tzTq+0WFQay1L
      613+4Te3yZf/yF8lX7IQnQERvG7XRoq94cJrvKex1lLkKRumx9KEYf2UIpmqYvz6sVR6bTR5
      lqC6OdNpyCkxRyD952aPeyMFUGrDr794xIef3+X82m/5DzIjrFwEIYY2zf6mYMoSXWQUZU5h
      SzJpSX1L5kGuLKlnyQMBxnKmK5nNQyrVJuKYI1zWWrKkxwYxyxOwdtYnmWxgd76jYUbYBgsR
      M/J+j2oqqec+U9RoyFnEC3KFvnEzwWtbff7hN7fZevg1P+t9ypXoNEI+zSiwW5yjDoGOMutp
      jcHokrzMKExJLg05mlxZMmUHzz5kCrSEqICoFFR2niOrCI0iEB5KeYMWVOcklCRK0w/s4OFb
      kqpHXgsoQx8TeN9evPlM62qMQQqBl+S0Vvqc2RbMZSF1v7azP+CA8liLNRpTlggEVgDYnT/P
      Lj4sTMmal7DcsqzPVSjqz2Z7GNZMcFHmFGmCl2rqmUdLR0ypFhLx0t+9MWa0BaCNoRfnLK13
      WV7v8nijy1p7i/m1f+MXokct+O469JMSwO7QQuuCvEjpm4yeb+hUoBdCv+6R1AaV0iqJlZKX
      WjduLUIbhDaoXOOnBUZAWQvRnsJ68pWGDd8pj7WorKSx1mduy3C67xGgKGxJKg2ZZ0h9QeoN
      epMsUmS+ACkGVV4IrBAgLHZXFALKyKesBPv6eFgBDJamaIo8RWcZfg5RLmnpiAlZIxLhK3/X
      IyeAvChodzMerGzzeKPH2lafrW6Cznq0ilVm0kdcNDGXgmmEev6ayeMUgLWGIk3YtDFrVU27
      IehXFXktpIx8UPKFNg7LSa0FEqVGaIPxFezzvpMojzaaJO1BWhAViqiQVLSiJWpUZYQSaqjX
      ZKTuAT77ZpX/82+3CcttWtkKc+kTPtBdzniKUDWQwSQwfWIJlHbj0v0yZi3IWW1YNs9XyJrN
      wVDjLYo0WU9hvZNPf7k3nElior6lVQRclzN4KMTucOYYa+lICeBc/pC/Xv97plVIoJqIaHZw
      2scxMOgpBuNYYzS6LNCmpNAFOZq+p1ltQnvOJ56sYgK3NXRYWGuI4z4kGY3UY1pHTIpT+MJ7
      4U3rsBkpATRsBb967VhsW2sps4Qt02cjMsS+IQ0EuSfIA0Fe8dG+xAQVjK/e6LVAxhhKXVCW
      OboskeVgw5JfrxH4J5vxe7eFz9MElWuiQlHPJJdEk5ramZl/jXmXR0oAw8RaS5mndHXMRlCw
      VrdsnquQNRuDdNsvqgRDCqcaozHW7GwyGmxkRxvszo0ulsFSXU/hBwFSeiip9q2ku2vctdGU
      RY4tS2Rp8QqLpwWeFlSNokJIJOpUZIhEYq2h04tZV9v0KhpZqxAElSOJYbcX3TvNHovRmjLP
      ICsJc6gUillboSlnBi08AitHp3F5qwSwO939WPZYawo2T3vEExXskKfVn/e5MKjsaRZjs4Iw
      h2rh4VuFZyQ+kkCE+NTwhMITCrmzp1enmswUxDYlFSmpLMmUpvAgUxqJwNeCoJT4WlAxAaFV
      VEWDQPiDirVbkSW7W4WfwViYUk2maGJiw1avx4bqsBXmqHqFKHwaVNgNu5ZlgS4KZGlQGgKj
      0MagrERY8CxIK1EIlJVIOyhnQ04SigD5nKOLRm2e5q0RgC5yHpg2f7wUEE9PHns3X+qCPEuw
      WUGQC6JCUCt9WrJJTQ5aVmN3oiYvaOw8PDzlUaPy9EUD5M+JmgiOPGSQQu6JwaaWTr9HW3bR
      CqS2+FpSESGRaBDJAG9nP8R3okA7oc83mTdeANYYNtI2X542rC1MHMtpIoNYdEmeJcikpJJJ
      psuAFi0iGSB3k0y9GbmgnkEIQctr0KIx2GO/Tw/ytnIoAZRZn1t37qFlSMMr2exlvPPe96kG
      r+eKJUmXr+p9Ft9poKOd2jessbs1xHEXERfUcsVUGTBBi6rcuYl0B+a8FRxKAF5Y48zcDKud
      lKIUvHNpms3NDuFMA631kcd3Rj/NRnEQuixYpM1XV0KSyYmdX3729/bzxVhDXqSYogRjkNoi
      DMjSoozANwKloaoVl1WLiowGvyie2n3Zcg4jzcuw7IyKjVHyxdpD7gfIuuvce7LNO1cusPjN
      bVbXC+qnLu3NAB91Jlgq+dzowGDZgaEocrZMny/nDBvnJkHK7/TW366c1lrKMqfIUmSqiQpB
      s/RpUSUSIRKBEvLpEAYGFd0DI0cniwIcPc3LKGWFgKOV5yg2rDWYMkXSo1bVhxOADKpMN/p0
      un2uXr3CZi9jphkd2okXO2nRWUpcxGz5JVuRYbsh2aoJulU1WBOT9nZaY7O3Lmf32SsFUSGp
      lR51E9KSs4PlsOCGLmOGtRajc2zZpVYraDQ1rUmPejOCw04y+2GV8xcu7P37VFQdqrNdMr7i
      Ce2Kpn1K0I8kGPCKwYrJauwxk1SQu602YufvT58tg0ZcCjl2N3TjzF5jaEqsKcAWhEFKo1HS
      nJBMTFeRyn8mOjhya4HWGoKvp6GqIyazgPNF5Wk8WfBSUZZRizM7hsNeL29KjE7A5khP4/uG
      ILQEviEIBWEkCCOPIPTww+oLw+EjJYBWEXHTLriWe8yx1qLLDFsmKFUQhpqooqlUoVIVVGoB
      YcVHDuGAvZESgGP8sNZidYnRMb6XUK2WVKuaejOgUg/wgwAhnt3kMqwEyOAEMHTsbjdddIkq
      Bb4PWAPCDE5El4Pl9kIM/m6tIIklcaywooL0qwix/1qgf/9ZbwJP/dzZRFSkGNOnUtVUawWN
      lqLeDIgqFcQJHzbhBHBEBlGGAqv7REFKra5pTkBrsoLyw5ff+WQsWZrR3e4Q9yHuC5LEoywD
      LBIhNFJolNQoz+J5Bs+zeJ5ld0ejZaC1ATsL/iwgJEls6PYqSL+FlMMLhe1tlzQlGI01BUJo
      lBo8fM/i+RY/sPieJQgF1bpHtRGNxII4J4BDshtWQ8cEQUq9oWm1BI3JCD+ofifK8LIIKYiq
      IVH16bjWGIMuDdZqpBQI4SGk/50hwctgjKEsDKvLy7Q3PPKyhfRevBp0MEQpsCZByZhAWZRn
      8f2B+JRnCQKJH0i8QBFG/mA+RyiE/K6fw9rNNSycAF7A7pBG5x0qUU6tPgirNSciguigoyyO
      jpQS4Q8vi0IQeixcanH2gqW71WH1SZutrQjhT+wNu3bH5LroEIU59aam0RQ0J0L8sDIyFXdY
      jL0AdmeZB6fcaLCDsbo1KX6YUa+XtCYkrekqnn+8Ff6kEFLQnKrSnAKtDeuPn7CxrjCGHYEL
      mpNV/ODZ8g5jGcSo8dYLYG+CROeDSq0yoorB8wxKWZSyeL7ADyS+L1GewPMVypP4Qe2tzzCn
      lGRuocncwuv25PUw0gIYZAfOMTrDmhzfK/F80NpijUAbgdGAUAixc8IiEmyJkhmViiaKDNUa
      VGtqJ6z2crugjDFvfeV3jJgAPJnhi2WCwBCGFj8wVKoeUdUniALkPocvG23QepCMSmuDVJKo
      Mlij5Cqx4yBGSgDTs9D80eGzLyhPoXZSegwrL5BjPHi7bukdjkPiBOAYa5wAHGONE4BjrBmp
      m2CH47jYnfDUZUGZabLEJ42rTgBHZTfqZI1GFylFasnTiDypkud1QCGEAQxC6J3n3QdIVRJW
      +oSVHC8KkN5gLZCLYr2Yg1fDDk6YLNN8p7I3yJIGed4kTSskWpFFhz0jzFoW795m9txVsq0V
      nmzFXL92hRPOZ/raGLQiGl3klBlkqU+eBORpnSxrkGV10jIkU5D7gjJUCCUHadnM7lFFgLEI
      C1iLNBAWlshoKmGPSmWbsBLvPFK8yEMI0OXOhm5tsWYwEWiMxGiJRSFFiVRm5yGQavDZuxOE
      bwJPtzRqzE76SK0FplRoLTGlh9YKXYZo7QFisEsMAUbsXF4JdnBtiqJJmjVIjSDzBGkoyKsK
      MxcgagGWQw6BTJlTFClJoVnb2GZ+usbqRo+5qerQ0lQcdY37sNbIW2vQRUGZl+SpJE9C8qRK
      ljXI8xZZEe5cWMhDRR5KzJQP1QDhy73jml6mJe8biy00dKt4/UnCTUu4YqigibwEKUus9TBG
      oY3CWIW2gp1+BaREGIPCooTFVxolc6QqUCpDqRzPT6hPdKg0BcoPeNWUbi+8vtYMTo2xuyfI
      mJ2tjGbwkrHo0mC0pCwUuvApixBdepRFRFlUKXWAMT7a+Ggj0FagAW1BCzASzE56erubpl6K
      3c3gIAQaSxYJzEwAVR/hqb0i75X8sGlRpB/SqO7MsEqJUgprnh6Rc+TKazQ6j3fWl3+rpdMC
      YxRGK0AiZbHT0pVIJRFS7Dx7OyfGWIwuB+dnlZay8CkLH10Eg2dTwdqDi260pcjrJEmFRHvk
      viQPJEUo0VMethrAbgu/wyt3hFIgQg9CDz0DMRBbSzvXiH4OpcEqCUqAJwcHcUjx9CHETi9j
      oBg8RKERpUGWZpA8t6+prxpalZhafYVac5Nqs0CF+693GqyCTckTS5bUSZM61u6IZ3BMDHvf
      uAVQg+OhjMRaibUKrIdFYa2HtRJjJXlmKY2iMFAqKJVA+4LSk5hQoj2J9eWgrJ4alFsK2Pmu
      DzPZ+aJ3HEoARdrjyfo2fr7MbLPC4kqXGzfO7OxsskfOC7S+cYrF37+PthJjPQwKI9Rgo4cU
      O1mdGQwhtEUCypZIcpTUeCpHCo21gkIHlCaiECFaDM7i0p7AKIGNvKebRfYRbWE1ZUPBfIiI
      vO9U9Jep7C/bAzwXIRCRxIbeyy2HVjs//t02WbPzyI0hsbDWjqlst6huGBoqo9FYod5ap9LI
      ERLyVJLFEVlSI0sbpGmLtIzIlCXzBFYOfNs9IGT3OxFSYgVoDEbawWF4gsHj22JVAuspZOhB
      8Pydby9zfY90bb9tY5SOSLr15AmfLS0N/rHbtf37Z3hacXefjd1LOU5pBpUnGKQcf9pKHu7G
      cpQSSR3HEUlWG+hmBFsZtV5JXWikgKSUZEqSR5IskJj6YFiHr7Ac3Y9hHZL3Vh6RZJUcDAVe
      hNj78Z2X3Vqgl0MoCRMViokKm8bSTgqwFhF6CP9pQ/btq7g73H2bGCkBOF4PQgpEbTwPGHcz
      wY6xxgnAMdY4ATjGGicAx1jjBOAYa5wAHGONE4BjrHECcIw1TgCOscYJwDHWOAE4xhonAMdY
      4wTgGGucABxjzSsKwHL36y/4+OOP6WV6uB45HCfIKwtAi5AblxfY3uoO1yOH4wR5RQEIyjxm
      6ckqUbUyXI8cjhPkFXeECa5dv04vKZhoHP2wYofjdXHkTfG7+YCGsQF8tddlqbN9JBu7pTnq
      luChZR0Ywt7kUfHlrSzPKGWFGIaN3eRcRxXjqJRnt4EZBV9GpTzDvCZD2xQ/jOMzh2FjWNkg
      RqU8w7IzKjaGZWdYNobWAzgcbyJDTYvy+OE9VrYzFqaqLK1vUmlOkWw8IdWShdMTrG32qLVm
      uHbxLNYabn/6a9Tp7yO7S3S6XSbmFmivriD8iKkKtLe6LLzzATP1/VN2rCzdZ6kdc3G2wcPV
      TaJak6K3SZxbrl+9wKOlx6iwzrvXLu5rw+QJv/nwQ97/0c95dOcL4qzk9KlZNra2ieqTXDrd
      5J9/8wf+8j//4sCw2Tef/w49cYUo32Bzu8vEqXk2njwBL+TsTJ21zR4XrlynUXn+YX8Aa48f
      sriyzbWzU9x7vE5QqUPSoZ+XnDs9w9JGh0q1wc1rl/a10Wmv8mD5CWFtiri9jPZqzE9GrGxs
      M3vmAmtL9yCo88H7N/bNwFZmMbfu3CU3Hg2/ZLufceHCAncXH9OcmKIqM1bXt7n2/vdpVg76
      fhZZWV9nYnKO1bU1qo0JQtNnu59x7b0PaD/4nA6zfO/62X1tPFm6z+raBpPTc6ysrlFrTuLr
      Hp1+zpUrF/nm3kPmF84zPzu5r43e1jr3Hz3Gr7TIO6tkIuLcTG24M8GnFy4SeDWR1SQAAAR7
      SURBVJa8yFFeyOb6OsZoSq1RQlAUBdYOLrkQkosXLmCxFEVBWA14/GAZYwTd9iZ9rfjgRzfZ
      XF478DPnzl4k8iAvCqTns7m+SlFoSPoUYZ1WLaTRbBxoQwYVLp6dw1hLUWiULniyvrVn796D
      J5w9Pf3C8p+/cBGwFHlBWAlYXXqMNoJ4c4v7y4+RlGxt9w60MTt/jmooyfMcqXy21tcpyhJV
      5nTijDwvsC/IQdycnKUW+jQaUG2cZ7YSsJ4aPvjBe2w+XmTq1GUmAkVxgA0vrHJqqkW9UcfI
      iBtXz3Pny0Vu/ugHSJ0xf+YMfhgR+ge3obNz8/jKp0xSrtx8D59iz97Kg/vYsPHC7OKn5ubx
      PJ+8n3D1/ffxbIaVEe9cXuDWZ19iw4DNzc0DbdRb0zQqAY2mJKqdYb4ashKXwxSAZWtjjfbG
      Bo3JWZq1kMnJBkZEtALJylbM7Nwp8qQ/eLfVrK0N3n9q/gy+8Fi4cpnTc5O0pifxTM7dW3ep
      Tu2v6r3PbLeptaZp1SpMzsyxcO4MYatFtnKf9QTqO0em7ofOU9Y22rQ3OywsnCWoVrly+SKt
      WoWJiQkEmocPFun0swOsGNbX1mhvrDNz+gyB8pg7d5Gz89M0pieZbjao1pvkWXJgebbb67Tb
      baLGFBONCpMzs5xdOEtQrUGpOTU3R5kfZAMe3vmCmIhq1CLuPWYjTqkJzb2796lMnGJzY4nt
      ND+w+0+3Vri91GaiWUcXMQ8ePebM+Rnu3v6G3MAnH3/K9MwM8gWV94vPfk+lNc3UZJWH9++T
      lhadD+x5UUR/e5OlJysH2vj8099TbU0zPVXl4d37pOVgHurB8hPOXDyLwseUB8kZlu99Raf0
      qEUt4v4Kq/2ElmeGeQ9g6XU65KWmVq+TJAnNZpMiTcgN1CshnU6XWqOJpyTWGra3trBCUauE
      pLmmUa/S7WxTqTVRwtCLU5qNg45NtfS7XbKiHHxmnNBsNcniPlYF+MLQ7ceEUZVadX8R6LKg
      0+0ivYBQCbRQVEKPTqdPs9VE7vRenu8fkLTVsr25hUFQq1VIs4JGvUav2yGs1PEVdLp9Gs0G
      ct8bdUu/1yXLB+VJ44R6s0mR9jHCpxL5dDsdKrUGvrd/BCRLY/pxSlSto2yJkR6Rr+j2YhqN
      OlnSBy8iCvaXgC4LOp0uyg+pRT5xXlKvVuj3ukTVOkm/S1EamhMtvANuSONelzQvqTeaFFlM
      EFWRVhPnJY1aFayhKC2+v395+r0OWa53rsWzNurVCnG/ix/WCA6wkacJvTghqtRQQmPwiELP
      3QQ7xhu3GtQx1jgBOMYalx3acaKYImGzr6l6GuvXqL5MOvxjxAnAcaII6fEv//RL6hWPn/zs
      53z2yR3eff8m9776grNnz7C2sUVjdoFzcwdF/4aHGwI5ThShfG6eq2Fbl/n1P/0j/d4Gf/jy
      NuubXR4tf82vP/2GmYmDIn/DxQnAceJMTc8yPzfLO1evUKo68y2ffimo1ie4dv06lXD/mfJh
      48KgjrHG9QCOseb/A6tKLy+Z5FqcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Story 1' width='384'>
      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
      1NixY1VkZKSaPHmyio2NVUoptXXrVuXj46N+9KMfqcTERBUfH69KS0uVUkotWbJEBQcHq1mz
      ZqmIiAj19NNPX8qmLqqwsFBNmzZNVVdXX9Zyd999t/ruu+86JYYWKSkpasCAAZ26zkvRFWVR
      6vzfWXJysvLx8VEzZ85UPj4+Kjk5WSmlVHZ2trr33nuVTqdTK1as0Nbz7LPPqpiYGDV79mzl
      7e2tdu7c2emxCiE6zvDSJRzC/vGPfyQ3N5fU1FQWLVrEgw8+iMlk4ic/+QmPPPII7733Hj//
      +c9Zv349WVlZ3HLLLeTn5/POO+/w85//nDFjxvDyyy+zZMmSVuvdsmULH3zwAbW1tQwePBiA
      VatWYbPZWLFiBdXV1ZhMJj744APy8vIYNmwYXl5emEwmkpKS0Ol0fPfddyQnJ5Ofn09sbCwm
      k6ndaT4+PgwfPhw/Pz/y8vJ44403OHr0KAMHDsTLy4uqqiq2bNmC2WxmxYoVNDY20rdvX2w2
      G1988QXffvsttbW1xMfHo9ef7TidOXOG5ORk4uPjWbt2LWFhYYSFhbFhwwacTidhYWEArFmz
      huDgYPz8/ADYtm0bADk5OZw8eZK4uLh266Kljr766isaGxspLS0lJiamVVkaGhr461//yrZt
      2+jRowehoaHnLcvFnO87u++++3j66ad588038fX15Y033mDRokW89tpr+Pv709zczPjx4xk+
      fDhNTU3cfvvtHDlyhMcee4ympiZWrlzJ/ffff/GjESFE97qULDFw4EC1cuXKVtPOnDmjAFVR
      UaFN++yzz9TAgQNbzWexWNSdd96pfvzjH7eavnr1ahUbG6teffVVNWjQIPX+++8rpZTy8vJS
      SUlJ6qGHHlI6nU6NHDlSPfLII8rLy0tt27ZNVVVVKUA5nU61bt061atXL/Xb3/5WzZs3T336
      6aftTlNKqeHDh6stW7aoM2fOqJCQELVo0SL1k5/8RCUkJCibzaZSUlKUXq9XN910k3rggQeU
      h4eHKi4uVs8++6waP368evHFF9XUqVNVQUGBVoaUlBTl4eGhFixYoObNm6f8/f1VaWmp+vd/
      /3d1++23K6WUys/PVz4+Pqqurk5bbubMmepnP/uZ8vPzU7///e/PWxd/+MMfVGRkpHr66afV
      DTfcoO69995WZXE6nWrs2LFq1qxZavHixSowMFBlZ2eftyyX6tzvzG63K4PBoLKyspRSSmVl
      ZSmDwaDsdrtyuVxKKaWmTZum9QBqamoUoEpKSpRSSqWmpqqQkJBL3rYQovtcUgKIiIhQ27dv
      bzUtPT1deXh4aI2AUkpt27ZNRUZGav8/dOiQGjRokJo6daqqrKxstfzMmTPV8uXLld1uV6tX
      r1ZTpkxRSp1NAC2NVXx8vNq3b59SSqnJkyerzz//vFUCeO+991RCQoLaunWram5uVkqpdqcp
      9a9G8y9/+YuaN2+eUkopp9Op+vfvrzZv3txmOCcyMlIdOXJELViwQN11110qLS2tVVmVajsE
      dMMNN6jly5ervLw85enpqUpKStR///d/aw33uWWPj49XeXl5F6yL8PBwbfjkzTffbJMA9u3b
      p3r16qXsdrtSSqmHH35Yvfjii+ctS4vs7Gy1bNkytWzZMtXU1NQqtu9/Z2azWQGqrKxMKaVU
      WVmZApTZbNaWOTcBKKXU7bffrvr27aseeOABlZiYqLy9vZUQ4tpzSSeBe/XqRXp6eqtpkZGR
      OByOVicjc3Jy6NmzJwAHDhxgypQpPPTQQ2zatInQ0NBWy1dWVvLHP/6R8ePH88orr7T5HNCG
      Wr7/d4v77ruPefPm8cwzzxAVFcXmzZvbnXauiooK+vTpo60zNjaWysrK8277z3/+M+Hh4dxx
      xx0MHTq0zcnO79dJU1MTcXFxzJgxg48++ojPPvuMf/u3f2sz70svvURcXNx568LlclFTU6PN
      056KigpiYmLw8PAAIC4ujoqKivOWpUVpaSnfffcd3333HXa7XZve3nfm6+uLyWSipKQEgJKS
      EkwmE76+vueN6/PPP+eVV15hwoQJLFiwgKioqPPOK4S4ei4pASxatIg///nPZGRk4HK52LNn
      DyEhIdx666385je/weFwUFFRwWuvvcZ9990HwHPPPccvf/lLnnzySRwOBzabrdU6hwwZwqxZ
      szhw4AD79+/n3//93y87+JMnT7J48WJSU1N59NFH+eyzz9qddq7hw4fz7bffYrVaKSkp4eDB
      gyQkJJx3G/n5+bz++uvk5uYSGhrK9u3bW32u/u9Kmfz8fLZt28aIESMAePTRR1m6dClnzpxh
      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
      srrdKyHXrFnD008/zdq1a/nVr37F3r17WblyJT179uT5559n8uTJREREsGvXLj7//HMCAgJ4
      7rnn8Pf37/LYWu6OBnC5XNTW1pKbm0tZWRn79u3DYrHgdDrbLce5XnnlFf7whz8QFRWlTVuy
      ZAlLlixhzpw5NDY2cvr0ad5++20aGxtZvHgxgYGBrFq1iuLiYnx9ffnNb37D7t27W9WBt7c3
      b731FoWFhdqzm1asWEFKSgrDhg3jscce65R6CIyMoiIvG7/wHhiMJipyswjr0w84O+SSt3cn
      lfk5xI+fTFifvuSnplB5Kofw+AHo9QZyU3YA0PeGm7BUV5F/cA8R/QbRZ8wNnD60j8DIKEpP
      pjNo6i2dEu+FNDY28tRTT/Hwww9r05YuXcrJkye56aabmDdvHt988w3r169nyJAhjBs3jrff
      fptTp05x5513MmXKFAAMBgO7d+/W1vH1118zfPhwQkJC+PLLL7n33ntZvnw5kZGReHt74+3t
      zYcffkhiYiKPPfYYmzZt4uTJk5w8eZJHHnmEESNGsHbtWr766ivuuusubrnl8uvi3CRVVVXF
      66+/TlVVFQ888ABms5n33nsPpRR33XUXSUlJ9O7dm40bN1JYWEhqaipz585lxowZ2jrWrFnD
      kiVLSE5OZvr06WzcuJGsrCzS09OZPn06u3fvJjExkQcffJAdO3awYsUKpkyZwn333cfbb7/N
      pEmT2Lt3L0OHDsVkMqGUYtmyZRw4cICFCxdisVgueZ/esGEDDz/8MOvXr+ell16ivLycnTt3
      YrFYSEhIID09vc3v/oMPPqC+vp5f/epXxMbGAvDyyy9z880388QTT7TaZ7Zv367V+1tvvcXj
      jz/OsWPHqKmpwWQyceTIEY4ePcrkyZMJDQ1tVZeZmZkMGTKETZs2MWHCBEwmE06nk6VLl5KV
      lcXTTz9NXFwcr732GqWlpdx3332MHTu23XK6VQ+gvr6empoaHnnkEb766isAnnzySebPn09i
      YiJKKb744gtqamrQ6XQsXLgQh8PBRx99dNVi7tOnDwA33XQT//znP/H392+3HADFxcUsWbKE
      ffv28bvf/Y5ly5Zpnx0/flw7AvXx8cFqtfKTn/yEadOm8R//8R9UVlby0UcfMWfOHNauXUth
      YWGbOnjnnXc4ceIE999/Px4eZ48dwsLCeOqpp1i9ejXp6emdUuaw+P5U5udSeSqHvjdMpq60
      mKrTuYTF9aMiL4vSk8cZMmM2qatXYLc2kb7hnwy4cQZefv6ExMbh6eNDdOIYDEYjh9d+ytCb
      f0z+wT3UV5RReOQgB1Z9iE9waKfEeik++ugjFi5cyG9/+1sAYmNj+eUvf8nLL7+M2WzmySef
      ZOHChcTFxdGnTx969uzJrFmzGDhwoLaOmpoaFi5cyMKFCzlw4IDWkDY2NvLpp59it9v5j//4
      Dz7++GOCg4N57LHH+MUvfsH+/ftJTk5my5YtNDY2cuedd/Lwww+Tn5/P0qVL+d3vfsdLL72k
      HXhcqebmZqZOncr999/Pk08+yZAhQwgKCuLOO++kd+/ebN68mfz8fLZs2UJeXh5z5szhT3/6
      k7a8y+UiJSWFZ555hu3bt6OUYsuWLVRXVzNixAjeeust7rnnHv70pz9hsVh45plneOGFF/j4
      44/Jzs5m2bJlPPvss/Tp04eDBw+SlpbGF198wZYtW3jiiSfw9fW9rH16zZo1zJs3j/DwcHJz
      c6msrOSJJ54gJSWF8PDwdn/3Q4YMISkpSevFA6SkpHDvvfcCZ/e7lJQUPvnkE5YsWcKLL75I
      SUkJ7733HgAZGRmkpKSQmprK3r17mT9/Pi+99FKbuvzyyy959NFHiY2N1cr6ySefUFpayuOP
      P84vfvELNm7cyPHjx1m0aBF6/fmbebfqAXzzzTeUl5fzzDPPcOjQISoqKvjlL3/JM888Q2xs
      LFOnTtXm3bZtG8ePH6eqqqpbjv4BPDw8tHFSu92OwWDA09OTTZs2ceTIEZ5++mntOUrfL0fL
      j3Lx4sUUFRXx8MMPExcXp63b09MTi8WCn58fcHaY6O233yY4OJi6ujoABg0axIQJE4iNjcXh
      cLSpg5ycHB5//HGGDx+Op6entiP5+PhQVlamraejAiJ60lBZTmVeNv1vnM6Zo4eoyM0mPK4/
      tSVFWGqqSN/0Neh0gI5ew0ex9x/v0ithBD0GDMHD00RIdCzmshKaLQ0c37gWl8uFpebsEevo
      uQsI6R134SA60c0338xPf/pTPD09qa2tZdmyZURERGA2m2loaODxxx/nkUceISkpiZtvvpmg
      oCASEhLo2bOntg4/Pz+effZZgFbTzxUZGcnKlSvJzs5myJAhJCYmMnfuXA4dOgRAUlIS06dP
      x+l0kpmZSXV1Nb///e/x9PSkuLiYgICAKy5jcXExr776KtHR0drwia+vL6NGjWoz7/Tp0xk7
      dix//vOftWkHDx6kpKSEn//855SWlnL48GEAJk2aREBAAGlpaYwfPx5/f38KCwupqqrij3/8
      Iw6Hg4KCAuDskXVYWJg2THro0CEWLFjAkCFDAPj8888vaZ+22Wxs2LABvV5PQUEBa9eu5ZZb
      bmH06NH87W9/w+Fw8Nxzz7X53Y8fP57Y2FiWLl2qrSsgIIDKykrCwsIAOHr0KLfffjtDhgxh
      8uTJnDx5st0YJk6cyIQJE/Dy8mq3Ll9//XXGjBnDG2+8AZw9wDt69Civv/46zc3NTJgwgX/8
      4x888sgj/PrXvz5vWd0qASQnJ/PXv/6VwYMHEx0dzVdffaV1lZ944gmysrK0eT/77DNWrFjB
      Bx980G3x9e/fn927d7Nz506++eYbEhMTOXHiBOvXr2fixImEhYWhlGq3HA899BCenp7Ex8cz
      bNgw+vbtS3h4uLbu++67j0WLFrFo0SLq6ur46quvuOeee1BKsXz58nbj+X4dxMfH8/nnn2O1
      WmlsbKS8vJxTp07xzjvv8OSTT3ZaPeh0OvzDe1CWk8nIO+4lqFcMeSk7GDTtFsxlJRi9vBk0
      9RZqiwpwOR2ExvQhfuwkdr73OkNv/jEOm42KU9n4hYZjNHnRb+JU7E1N+IWc3Qk9fXwBKMs+
      21D4hYZTmnWCvuMnd1oZzlVdXU1+fj4mkwkPDw8MBgOPPvooe/bsASA4OJiPP/6Yu+66C7PZ
      jJ+fH1u2bOHmm2/WhvGcTif5+fkAeHt74+Hhwb59+7TGDiAoKAi9Xk9MTAwnTpzg8OHDfP75
      59x5552kpKSQlZWlNUaDBg3Cy8uLJ598kvz8/Fa/lUtltVr55ptvMJlM7N27l5tuuonExERS
      UlK0OL/99ltGjhx50XUlJyfzn//5n9x8882MHz+e5OTk884bExODn58fixYtwmw2a73k4ODg
      VvONHTuWZcuWERkZiclkuuR9etu2bcydO5ff/va3lJWV8atf/YpbbrmFoKAggPP+7tPT01mz
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
